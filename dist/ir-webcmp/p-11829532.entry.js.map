{"version":3,"names":["iglApplicationInfoCss","IglApplicationInfo","componentWillLoad","this","guestData","guestInfo","Object","assign","updateRoomList","handleSelctedUnits","units","selectedUnits","index","filterdRoomList","roomsList","filter","e","includes","id","updateData","dataUpdateEvent","emit","key","guestRefKey","data","handleDataChange","value","find","room","name","handleGuestNameChange","event","guestName","target","render","h","Host","class","bookingType","roomCategoryName","ratePlanName","replace","message","cancelation","guarantee","adult_child_offering","v4","type","placeholder","onInput","required","onChange","selected","roomId","map","preference","bedPreferenceType","CODE_NAME","CODE_VALUE_EN","rate","iglBlockDatesViewCss","IglBlockDatesView","blockDatesData","RELEASE_AFTER_HOURS","OPTIONAL_REASON","OUT_OF_SERVICE","releaseList","bookingService","BookingService","getBlockedInfo","defaultData","parseInt","emitData","error","handleOptionalReason","handleReleaseAfterChange","evt","entryDate","undefined","renderPage","getReleaseHoursString","dt","Date","entryHour","entryMinute","setHours","getHours","getMinutes","toLocaleString","month","getDate","formatNumber","handleOutOfService","checked","renderAgain","isEventHover","fromDate","toDate","releaseItem","EventsService","constructor","reallocateEvent","pool","destination_pr_id","from_date","to_date","token","JSON","parse","sessionStorage","getItem","console","log","axios","post","ExceptionMsg","Error","deleteEvent","POOL","My_Result","updateBlockedEvent","bookingEvent","releaseData","result","blockUnit","formatDate","FROM_DATE","TO_DATE","pr_id","PR_ID","STAY_STATUS_CODE","DESCRIPTION","NOTES","date","split","join","iglBookPropertyCss","IglBookProperty","PAGE_ZERO","PAGE_ONE","PAGE_TWO","PAGE_BLOCK_DATES","showSplitBookingOption","sourceOptions","selectedRooms","bookedByInfoData","ratePricingMode","eventsService","code","description","componentDidLoad","document","addEventListener","closeWindow","disconnectedCallback","removeEventListener","bookingData","defaultDateRange","dateRangeData","setupEntries","fetchSetupEntries","setSourceOptions","bookingSource","setOtherProperties","isEventType","setEditingRoomInfo","page","getDefaultPage","source","sourceOption","res","arrivalTime","category","getRoomCategoryByRoomId","getBookingPreferenceRoomId","RATE_PLAN_ID","adultCount","ADULTS_COUNT","RATE","rateType","RATE_TYPE","ratePlanId","roomCategoryId","totalRooms","RATE_PLAN","NAME","initializeBookingAvailability","room_type_ids","roomsInfo","getBookingAvailability","propertyid","language","currency","roomtypes","tax_statement","_a","roomCategory","physicalrooms","event_type","hasOwnProperty","getSplitBookings","splitBookingEvents","isConvertedBooking","closeBookingWindow","isEditBooking","onRoomsDataUpdate","changedKey","detail","roomCategoryKey","getRoomCategoryKey","ratePlanKey","getRatePlanKey","shouldClearData","initializeRoomCategoryIfNeeded","applyBookingEditToSelectedRoom","setSelectedRoomData","cleanupEmptyData","isEditBookingEvent","hasSelectedRoomData","keys","length","onDateRangeSelect","opt","dateToFormattedString","handleBlockDateUpdate","stopImmediatePropagation","stopPropagation","handleSubmit","preventDefault","handleGuestInfoUpdate","handleBookedByInfoUpdate","isActiveSouceOption","srcIndex","handleSourceDropDown","selectedOption","toString","gotoSplitPageTwo","gotoPage","showSplitBooking","getSelectedSplitBookingName","bookingId","splitBooking","booking","ID","isActiveSplitBookingOption","spltIndex","splitBookingId","handleSplitBookingDropDown","isPageZero","isPageOne","isPageTwo","isPageBlockDates","getSplitBookingList","option","getSourceNode","getRoomsListFromCategoryId","categoryId","getPageZeroView","onClick","getPageOneView","onDateSelectEvent","roomInfo","dateDifference","roomTypeData","onDataUpdateEvent","disabled","getPageBlockDatesView","fromDateStr","toDateStr","ENTRY_DATE","handleBlockDate","handleButtonClicked","bookUser","handlePageTwoDataUpdateEvent","blockedUnit","transformNewBLockedRooms","blockedCreated","check_in","setLoadingState","STATUS_CODE","getArrivalTimeForBooking","booking_nbr","BOOKING_NUMBER","GUEST","transformNewBooking","resetLoadingState","assign_units","isLoading","ARRIVAL_TIME","setTimeout","BLOCK_DATES_TITLE","TITLE","showPaymentDetails","selectedGuestData","countryNodeList","isEditOrAddRoomEvent","onButtonClicked","iglBookingEventCss","IglBookingEvent","dayWidth","eventSpace","vertSpace","showInfoPopup","bubbleInfoTopSide","isStreatch","resizeSide","isDragging","handleMouseMoveBind","handleMouseMove","bind","handleMouseUpBind","handleMouseUp","handleClickOutsideBind","handleClickOutside","window","isNewEvent","hideBubble","showEventInfo","clickedElement","element","contains","hideBubbleInfoPopup","currentInfoBubbleId","getBookingId","moveBookingToHandler","moveToDay","toRoomId","fromRoomId","isTouchStart","moveDiffereneX","moveDiffereneY","checkIfSlotOccupied","style","top","dragInitPos","left","dragEndPos","getBookedRoomId","dragOverEventData","onMoveUpdateBooking","fromTime","getTime","toTime","isOccupied","allBookingEvents","some","eventFromTime","eventToTime","renderElement","getUniqueId","reverse","tempDate","setDate","getStayDays","getFullYear","getMonth","isSplitBooking","SPLIT_BOOKING","isHighlightEventType","getEventType","getBookingStatus","STATUS","getBookedBy","getEventStartingDate","getEventEndingDate","getEventLegend","status","legendData","statusId","orderRide","color","_b","getLegendOfStatus","aStatusId","getNoteNode","INTERNAL_NOTE","getBalanceNode","BALANCE","setStayDays","aStayDays","NO_OF_DAYS","getPosition","startingDate","startingCellClass","bodyContainer","querySelector","startingCell","pos","width","height","getBoundingClientRect","bodyContainerRect","boundingRect","getNumber","aData","parseFloat","startDragging","side","initialX","clientX","touches","initialY","clientY","elementRect","offsetX","offsetY","x","y","initialWidth","offsetWidth","initialLeft","offsetLeft","currentX","distanceX","currentY","distanceY","newWidth","Math","min","max","newLeft","finalWidth","abs","nbOfDays","numberOfDays","round","initialStayDays","updateEventData","showInfo","midPoint","hideBubbleInfo","legend","noteNode","balanceNode","clsName","backgroundColor","onTouchStart","onMouseDown","is_vacation_rental","bubbleInfoTop","iglBookingEventHoverCss","IglBookingEventHover","todayTimeStamp","eventService","getTotalOccupants","getPhoneNumber","PHONE","getCountry","findCountry","COUNTRY","getPhoneCode","phone_prefix","renderPhone","is_direct","getGuestNote","getInternalNote","getTotalPrice","TOTAL_PRICE","getCheckInDate","FROM_DATE_STR","getCheckOutDate","TO_DATE_STR","getArrivalTime","getRatePlan","getEntryDate","getReleaseAfterHours","isNewBooking","isCheckedIn","isCheckedOut","isBlockedDateEvent","getRoomId","getCategoryByRoomId","hasSplitBooking","canCheckIn","fromTimeStamp","toTimeStamp","canCheckOut","handleEditBooking","handleBookingOption","getStringDateFormat","handleAddRoom","from_date_str","to_date_str","eventData","ADD_ROOM_TO_BOOKING","editabled","handleCustomerCheckIn","handleCustomerCheckOut","handleDeleteEvent","deleteButton","handleUpdateBlockedDates","bookingCreated","handleConvertBlockedDateToBooking","getRoomInfo","roomIdToFind","selectedRoom","physicalRoom","CATEGORY","ROOM_NAME","ROOMS_INFO","eventType","roomData","showBookingPopup","getInfoElement","src","origin","Icon","alt","channel_booking_nbr","getCurrencySymbol","role","_","IS_EDITABLE","getNewBookingOptions","getBlockedView","ENTRY_HOUR","ENTRY_MINUTE","iglBookingRoomRatePlanCss","IglBookingRoomRatePlan","selectedData","ratePlanData","variations","amount","adult_nbr","childrenCount","child_nbr","isRateModified","defaultSelectedRate","entries","getSelectedOffering","variation","ratePlanDataChanged","handleRateDaysUpdate","handleInput","inputElement","inputValue","numericRegex","test","offering","bookProperty","gotoSplitPageTwoEvent","Array","from","totalAvailableRooms","i","iglBookingRoomsCss","IglBookingRooms","validBookingTypes","fill","roomsDistributions","onRoomDataUpdate","newValue","updateRatePlanTotalRooms","inventory","ratePlanIndex","calculateTotalSelectedRoomsExcludingIndex","excludedIndex","reduce","acc","rooms","idx","ratePlan","totalSelectedRoomsExcludingCurrent","availableRooms","rateplans","iglCalBodyCss","IglCalBody","currentDate","dragOverHighlightElementHandler","dragOverElement","gotoRoom","expanded","toggleCategory","scrollToRoom","addToBeAssignedEvents","addBookingDatas","scrollPageToRoom","refClass","calendarData","getCategoryRooms","getCategoryName","getCategoryId","getTotalPhysicalRooms","getRoomName","getRoomById","physicalRooms","physical_room","getBookingData","bookingEvents","addBookingDatasEvent","getSelectedCellRefName","selectedDay","getSplitBookingEvents","newEvent","ind","findIndex","ev","splice","addNewEvent","startDate","endDate","EMAIL","convertBooking","REFERENCE_TYPE","getTwoDigitNumStr","editable","popupTitle","getDateStr","toISOString","formattedLegendData","push","num","locale","removeNewEvent","events","clickCell","isScrollViewDragging","refKey","showNewBookingPopup","getGeneralCategoryDayColumns","addClass","isCategory","days","dayInfo","day","today","getGeneralRoomDayColumns","getRoomCategoryRow","getRoomsByCategory","getRoomRows","iglCalFooterCss","IglCalFooter","handleOptionEvent","optionEvent","dayDisplayName","ToBeAssignedService","getUnassignedDates","convertUnassignedDates","getUnassignedRooms","specific_date","transformToAssignable","assignUnit","identifier","cleanSpacesAndSpecialChars","str","regex","forEach","customer","unassigned_rooms","roomTypeName","room_type_name","guest_name","unassigned_date","book_nbr","fromDateTimeStamp","toDateTimeStamp","RT_ID","getRoomTypeId","updateAvailableRooms","addDefaultDateRange","roomName","assignable_units","unit","Is_Fully_Available","Is_Not_Available","dates","convertedDates","newDate","categories","dateStr","transformDateFormatWithMoment","dateObj","moment","format","iglCalHeaderCss","IglCalHeader","searchValue","searchList","toBeAssignedService","initializeRoomsList","unassignedDates","fetchAndAssignUnassignedRooms","handleCalendarDataChanged","concat","assignRoomsToDate","unassignedRoomsNumber","handleReduceAvailableUnitEvent","selectedDate","renderView","showToBeAssigned","gotoToBeAssignedDate","handleDateSelect","picker","blur","handleClearSearch","handleFilterRooms","trim","toLowerCase","toLocaleLowerCase","indexOf","handleScrollToRoom","gotoRoomEvent","getNewBookingModel","title","monthsInfo","monthInfo","daysCount","monthName","unassigned_units_nbr","occupancy","iglDateRangeCss","IglDateRange","totalNights","getFormattedDateString","calculateTotalNights","handleDateSelectEvent","floor","dateSelectEvent","handleDateChange","start","end","autoApply","onDateChanged","iglLegendsCss","IglLegends","legendInfo","design","iglPagetwoCss","IglPagetwo","initializeGuestData","total","newSelectedUnits","prop","handleOnApplicationInfoDataUpdateEvent","categoryIdKey","updatedUnits","handleEventData","selectedBookedByData","isGuestDataIncomplete","isButtonDisabled","isValidProperty","property","comparedBy","isCardDetails","buttonClicked","iglPropertyBookedByCss","IglPropertyBookedBy","arrivalTimeList","expiryMonths","expiryYears","currentMonth","email","firstName","lastName","countryId","isdCode","contactNumber","selectedArrivalTime","emailGuest","cardNumber","cardHolderName","expiryMonth","expiryYear","assignCountryCode","initializeExpiryYears","initializeDateData","populateBookedByData","currentYear","country","getUserDefaultCountry","bookedByData","foundTime","time","handleNumberInput","handleEmailInput","isValidEmail","checkUser","getUserInfo","first_name","last_name","mobile","country_id","emailId","emailPattern","onBlur","countryNode","rows","Fragment","pattern","year","iglTbaBookingViewCss","IglTbaBookingView","highlightSection","allRoomsList","onSelectRoom","componentShouldUpdate","oldValue","propName","categoryIndex","eventIndex","handleHighlightAvailability","handleAssignUnit","assignEvent","addToBeAssignedEvent","assignRoomEvent","highlightToBeAssignedBookingEvent","filteredEvents","calendar_cell","handleCloseAssignment","highlightBookingEvent","iglTbaCategoryViewCss","IglTbaCategoryView","handleAssignRoomEvent","eventDatas","assignUnitEvent","getEventView","categoriesData","onAssignRoomEvent","iglToBeAssignedCss","IglToBeAssigned","isGotoToBeAssignedDate","reArrangeData","updateCategories","categorisedRooms","roomIds","orderedDatesList","sort","a","b","firstKey","showForDate","gotoDate","showDatesList","dateStamp","showUnassignedDate","getDay","dayOfWeek","getLocalizedDayOfWeek","options","weekday","toLocaleDateString","getToBeAssignedEntities","getCategoryView","onAssignUnitEvent","assignmentDetails","removeEventFromCategory","checkAndCleanEmptyCategories","updateSelectedDateCategories","emitUnitReductionEvent","reduceAvailableUnitEvent","loadingMessage","ordDate","RoomService","fetchData","PACKET_TYPES","create","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","Blob","prototype","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","charCodeAt","decode","base64","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","count","decodePayload","encodedPayload","decodedPacket","createPacketEncoderStream","TransformStream","transform","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","chunk","concatChunks","size","shift","j","slice","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","protocol","Emitter","mixin","on","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","callbacks","cb","args","emitReserved","listeners","hasListeners","globalThisShim","self","Function","pick","attr","k","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","c","l","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","TransportError","reason","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","port","secure","Number","encodedQuery","alphabet","seed","prev","yeast","now","XMLHttpRequest","err","hasCORS","XHR","xdomain","createCookieJar","empty","hasXHR2","xhr","responseType","Polling","polling","location","isSSL","xd","forceBase64","withCredentials","cookieJar","poll","doPoll","doWrite","uri","timestampRequests","timestampParam","sid","b64","request","Request","req","method","xhrStatus","pollXhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","onLoad","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","nextTick","isPromiseAvailable","Promise","resolve","WebSocket","MozWebSocket","defaultBinaryType","isReactNative","navigator","product","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","onerror","lastPacket","WT","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","m","exec","host","authority","ipv6uri","pathNames","queryKey","regx","names","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","sendPacket","filterUpgrades","getWritablePackets","shouldCheckPayloadSize","payloadSize","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","url","loc","ipv6","href","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","_placeholder","newData","reconstructPacket","_reconstructPacket","isIndexValid","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","encodeAsString","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","subDestroy","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","hasError","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","sameNamespace","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","listener","sent","emitBuffered","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","newConnection","forceNew","multiplex","iglooCalendarCss","IglooCalendar","visibleCalendarCells","roomService","reachedEndOfCalendar","scrollViewDragPos","onScrollContentMoveHandler","dx","dy","scrollContainer","scrollTop","scrollLeft","scrollViewDragging","onScrollContentMoveEndHandler","ticketChanged","setItem","ticket","initializeApp","baseurl","defaults","baseURL","roomResp","setRoomsData","getCalendarData","async","bookingResp","getCountries","getLegendData","My_Params_Get_Rooming_Data","FROM","endingDate","TO","formatLegendColors","myBookings","toBeAssignedEvents","paymentMethods","item","updateBookingEventsDateRange","transformDateForScroll","startingDay","getStartingDateOfCalendar","months","scrollToElement","msgAsObject","REASON","KEY","PAYLOAD","resasons","transformedBooking","AddOrUpdateRoomBookings","checkBookingAvailability","roomServiceResp","roomsData","calendar_legends","getEndingDateOfCalendar","getLocalizedMonth","addNextTwoMonthsToCalendar","nextTwoMonths","addTwoMonthToDate","nextDay","getNextDay","results","newBookings","newMonths","goToDate","topLeftCell","gotoDay","scrollTo","gotoRect","containerRect","topLeftCellRect","bookings","d","targetScrollClass","handleBookingDatasChange","shouldRenderCalendarView","onOptionSelect","calendarElement","classList","remove","toggle","showLegend","bookingItem","closeSideMenu","dragScrollContent","isPreventPageScroll","hasAncestorWithClass","calendarScrolling","leftSideMenuSize","maxWidth","leftX","rightX","cells","querySelectorAll","monthContainer","monthRect","titleElement","marginLeft","monthWidth","className","currentElement","matches","parentElement","showBookingPopupEventDataHandler","updateEventDataHandler","bookedData","bookedEvent","dragOverEventDataHandler","containerDays","containerRooms","htmlElement","getAttribute","offsetTop","offsetHeight","highlightDragOver","hightLightElement","currentPosition","xElement","yElement","dragOverHighlightElement","moveBookingTo","convertDMYToISO","computeEndDate","onOptionEvent","onScroll","onCloseBookingWindow","onlineResources","isCSS","link","IrCommon","parseRefs","initializeStyles","hrefsChanged","extraResources","resources","appendTag","tagName","attributes","tag","createElement","selectorParts","setAttribute","selector","existingTag","head","appendChild","rel","isJS","irDatePickerCss","IrDatePicker","dateRangeInput","$","daterangepicker","opens","maxSpan","separator","applyLabel","cancelLabel","fromLabel","toLabel","customRangeLabel","weekLabel","daysOfWeek","monthNames","firstDay","dateChanged","irInterceptorCss","IrInterceptor","successMessage","errorMessage","setupAxiosInterceptors","interceptors","use","handleRequest","handleError","response","handleResponse","extractEndpoint","isHandledEndpoint","handledEndpoints","config","defaultMessage","isUnassignedUnit","showToast","handleCompletion","isShown","hideToastAfterDelay","isSuccess","success","renderMessage","viewBox","xmlns","irLoadingScreenCss","IrLoadingScreen","irTooltipCss","IrTooltip","toggleOpen","shouldOpen","tooltipTimeout","onMouseEnter","onMouseLeave","innerHTML"],"sources":["src/components/igloo-calendar/igl-application-info/igl-application-info.css?tag=igl-application-info&encapsulation=scoped","src/components/igloo-calendar/igl-application-info/igl-application-info.tsx","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.css?tag=igl-block-dates-view&encapsulation=scoped","src/components/igloo-calendar/igl-block-dates-view/igl-block-dates-view.tsx","src/services/events.service.ts","src/components/igloo-calendar/igl-book-property/igl-book-property.css?tag=igl-book-property&encapsulation=scoped","src/components/igloo-calendar/igl-book-property/igl-book-property.tsx","src/components/igloo-calendar/igl-booking-event/igl-booking-event.css?tag=igl-booking-event&encapsulation=scoped","src/components/igloo-calendar/igl-booking-event/igl-booking-event.tsx","src/components/igloo-calendar/igl-booking-event-hover/igl-booking-event-hover.css?tag=igl-booking-event-hover&encapsulation=scoped","src/components/igloo-calendar/igl-booking-event-hover/igl-booking-event-hover.tsx","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.css?tag=igl-booking-room-rate-plan&encapsulation=scoped","src/components/igloo-calendar/igl-booking-room-rate-plan/igl-booking-room-rate-plan.tsx","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.css?tag=igl-booking-rooms&encapsulation=scoped","src/components/igloo-calendar/igl-booking-rooms/igl-booking-rooms.tsx","src/components/igloo-calendar/igl-cal-body/igl-cal-body.css?tag=igl-cal-body&encapsulation=scoped","src/components/igloo-calendar/igl-cal-body/igl-cal-body.tsx","src/components/igloo-calendar/igl-cal-footer/igl-cal-footer.css?tag=igl-cal-footer&encapsulation=scoped","src/components/igloo-calendar/igl-cal-footer/igl-cal-footer.tsx","src/services/toBeAssigned.service.ts","src/utils/events.utils.ts","src/components/igloo-calendar/igl-cal-header/igl-cal-header.css?tag=igl-cal-header&encapsulation=scoped","src/components/igloo-calendar/igl-cal-header/igl-cal-header.tsx","src/components/igloo-calendar/igl-date-range/igl-date-range.css?tag=igl-date-range&encapsulation=scoped","src/components/igloo-calendar/igl-date-range/igl-date-range.tsx","src/components/igloo-calendar/igl-legends/igl-legends.css?tag=igl-legends&encapsulation=scoped","src/components/igloo-calendar/igl-legends/igl-legends.tsx","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.css?tag=igl-pagetwo&encapsulation=scoped","src/components/igloo-calendar/igl-pagetwo/igl-pagetwo.tsx","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.css?tag=igl-property-booked-by&encapsulation=scoped","src/components/igloo-calendar/igl-property-booked-by/igl-property-booked-by.tsx","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-booking-view/igl-tba-booking-view.css?tag=igl-tba-booking-view&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-booking-view/igl-tba-booking-view.tsx","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-category-view/igl-tba-category-view.css?tag=igl-tba-category-view&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-tba-category-view/igl-tba-category-view.tsx","src/components/igloo-calendar/igl-to-be-assigned/igl-to-be-assigned.css?tag=igl-to-be-assigned&encapsulation=scoped","src/components/igloo-calendar/igl-to-be-assigned/igl-to-be-assigned.tsx","src/services/room.service.ts","node_modules/.pnpm/engine.io-parser@5.2.1/node_modules/engine.io-parser/build/esm/commons.js","node_modules/.pnpm/engine.io-parser@5.2.1/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/.pnpm/engine.io-parser@5.2.1/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/.pnpm/engine.io-parser@5.2.1/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/.pnpm/engine.io-parser@5.2.1/node_modules/engine.io-parser/build/esm/index.js","node_modules/.pnpm/@socket.io+component-emitter@3.1.0/node_modules/@socket.io/component-emitter/index.mjs","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/globalThis.browser.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/util.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/transport.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/contrib/yeast.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/transports/webtransport.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/transports/index.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/.pnpm/engine.io-client@6.5.3/node_modules/engine.io-client/build/esm/socket.js","node_modules/.pnpm/socket.io-client@4.7.2/node_modules/socket.io-client/build/esm/url.js","node_modules/.pnpm/socket.io-parser@4.2.4/node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/.pnpm/socket.io-parser@4.2.4/node_modules/socket.io-parser/build/esm/binary.js","node_modules/.pnpm/socket.io-parser@4.2.4/node_modules/socket.io-parser/build/esm/index.js","node_modules/.pnpm/socket.io-client@4.7.2/node_modules/socket.io-client/build/esm/on.js","node_modules/.pnpm/socket.io-client@4.7.2/node_modules/socket.io-client/build/esm/socket.js","node_modules/.pnpm/socket.io-client@4.7.2/node_modules/socket.io-client/build/esm/contrib/backo2.js","node_modules/.pnpm/socket.io-client@4.7.2/node_modules/socket.io-client/build/esm/manager.js","node_modules/.pnpm/socket.io-client@4.7.2/node_modules/socket.io-client/build/esm/index.js","src/components/igloo-calendar/igloo-calendar.css?tag=igloo-calendar&encapsulation=scoped","src/components/igloo-calendar/igloo-calendar.tsx","src/common/ir.common.resources.ts","src/components/ir-common/ir-common.tsx","src/components/ir-date-picker/ir-date-picker.css?tag=ir-date-picker&encapsulation=scoped","src/components/ir-date-picker/ir-date-picker.tsx","src/components/ir-interceptor/ir-interceptor.css?tag=ir-interceptor&encapsulation=scoped","src/components/ir-interceptor/ir-interceptor.tsx","src/components/ir-loading-screen/ir-loading-screen.css?tag=ir-loading-screen&encapsulation=scoped","src/components/ir-loading-screen/ir-loading-screen.tsx","src/components/ir-tooltip/ir-tooltip.css?tag=ir-tooltip&encapsulation=scoped","src/components/ir-tooltip/ir-tooltip.tsx"],"sourcesContent":["@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, Watch, State } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\n\r\n@Component({\r\n  tag: 'igl-application-info',\r\n  styleUrl: 'igl-application-info.css',\r\n  scoped: true,\r\n})\r\nexport class IglApplicationInfo {\r\n  @Prop() guestInfo: { [key: string]: any };\r\n  @Prop({ reflect: true, mutable: true }) roomsList: { [key: string]: any }[] = [];\r\n  @Prop() guestRefKey: string;\r\n  @Prop() bedPreferenceType = [];\r\n  @Prop() selectedUnits: number[] = [];\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @Prop() index: number;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() filterdRoomList = [];\r\n  private guestData: { [key: string]: any };\r\n\r\n  componentWillLoad() {\r\n    this.guestData = this.guestInfo ? { ...this.guestInfo } : {};\r\n    this.updateRoomList();\r\n  }\r\n  @Watch('selectedUnits')\r\n  async handleSelctedUnits() {\r\n    this.updateRoomList();\r\n  }\r\n  updateRoomList() {\r\n    const units = [...this.selectedUnits];\r\n    units[this.index] = -1;\r\n    this.filterdRoomList = this.roomsList.filter(e => !units.includes(e.id));\r\n  }\r\n  updateData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      guestRefKey: this.guestRefKey,\r\n      data: { ...this.guestData },\r\n    });\r\n  }\r\n\r\n  handleDataChange(key, value) {\r\n    this.guestData[key] = +value;\r\n    if (value === '') {\r\n      this.guestData['roomName'] = value;\r\n    }\r\n    if (key === 'roomId' && value !== '') {\r\n      this.guestData['roomName'] = this.filterdRoomList.find(room => room.id === +value).name || '';\r\n    }\r\n    this.updateData();\r\n  }\r\n\r\n  handleGuestNameChange(event) {\r\n    // console.log(\"On Guest name Change::\", event.target.value);\r\n    this.guestData.guestName = event.target.value;\r\n    this.updateData();\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.guestInfo, this.roomsList);\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-1\">\r\n          <div class=\"ml-1 mb-1\">\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING' ? (\r\n              <span class=\"h5\">{this.guestInfo.roomCategoryName}</span>\r\n            ) : null}\r\n            <span class=\"ml-1 font-weight-bold\">\r\n              {this.guestInfo.ratePlanName.replace(this.guestInfo.roomCategoryName + '/', '')}\r\n              <ir-tooltip class=\"ml-1 mr-1\" message={this.guestInfo.cancelation + this.guestInfo.guarantee}></ir-tooltip>\r\n            </span>\r\n            <span>{this.guestInfo.adult_child_offering}</span>\r\n          </div>\r\n\r\n          <div class=\"row m-0 p-0 align-items-center\">\r\n            <div class=\"col-5\">\r\n              <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Guest first name & last name\"\r\n                name=\"guestName\"\r\n                onInput={event => this.handleGuestNameChange(event)}\r\n                required\r\n                value={this.guestData.guestName}\r\n              />\r\n            </div>\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' || this.bookingType === 'EDIT_BOOKING' ? (\r\n              <div class=\"col-2 p-0\">\r\n                <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('roomId', (event.target as HTMLInputElement).value)}>\r\n                  <option value=\"\" selected={this.guestData.roomId === ''}>\r\n                    Assign units\r\n                  </option>\r\n                  {this.filterdRoomList.map(room => (\r\n                    <option value={room.id} selected={+this.guestData.roomId === room.id}>\r\n                      {room.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            ) : null}\r\n\r\n            <div class=\"col-3\">\r\n              <select class=\"form-control input-sm\" id={v4()} onChange={event => this.handleDataChange('preference', (event.target as HTMLInputElement).value)}>\r\n                <option value=\"\" selected={this.guestData.preference === ''}>\r\n                  No preference\r\n                </option>\r\n                {this.bedPreferenceType.map(data => (\r\n                  <option value={data.CODE_NAME} selected={this.guestData.preference === data.CODE_NAME}>\r\n                    {data.CODE_VALUE_EN}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div class=\"col-2\">${this.guestInfo.rate}</div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n:host .controlContainer {\r\n  width: 24px;\r\n}\r\n\r\n:host .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n\r\n.releaseTime {\r\n  padding-left: 5px;\r\n}\r\n","import { Component, Host, h, Prop, State, Event, EventEmitter } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries } from '../../../models/IBooking';\r\n\r\n@Component({\r\n  tag: 'igl-block-dates-view',\r\n  styleUrl: 'igl-block-dates-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglBlockDatesView {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() fromDate: string;\r\n  @Prop() toDate: string;\r\n  @Prop({ mutable: true }) entryDate: string;\r\n  @Prop() entryHour: number;\r\n  @Prop() isEventHover: boolean=false;\r\n  @Prop() entryMinute: number;\r\n  @State() renderAgain: boolean = false;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n\r\n  private blockDatesData: { [key: string]: any } = {\r\n    RELEASE_AFTER_HOURS: 0,\r\n    OPTIONAL_REASON: '',\r\n    OUT_OF_SERVICE: false,\r\n  }; // Change of property name might require updates in booking-event-hover\r\n  private releaseList: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  async componentWillLoad() {\r\n    try {\r\n      this.releaseList = await this.bookingService.getBlockedInfo();\r\n      if (this.defaultData) {\r\n        this.blockDatesData = { ...this.defaultData };\r\n      } else {\r\n        this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(this.releaseList[0].CODE_NAME);\r\n        this.emitData();\r\n      }\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleOptionalReason(event) {\r\n    this.blockDatesData.OPTIONAL_REASON = event.target.value;\r\n    this.emitData();\r\n  }\r\n\r\n  handleReleaseAfterChange(evt) {\r\n    if (this.entryDate) this.entryDate = undefined;\r\n    this.blockDatesData.RELEASE_AFTER_HOURS = parseInt(evt.target.value);\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  emitData() {\r\n    this.dataUpdateEvent.emit({\r\n      key: 'blockDatesData',\r\n      data: { ...this.blockDatesData },\r\n    });\r\n  }\r\n\r\n  getReleaseHoursString() {\r\n    // console.log(\"entry date\", this.entryDate);\r\n    // console.log(\"blocked date data\", this.blockDatesData);\r\n    let dt = this.entryDate ? new Date(this.entryDate) : new Date();\r\n    if (this.entryDate && this.entryHour && this.entryMinute) {\r\n      dt.setHours(this.entryHour, this.entryMinute, 0, 0);\r\n    } else {\r\n      dt.setHours(dt.getHours() + this.blockDatesData.RELEASE_AFTER_HOURS, dt.getMinutes(), 0, 0);\r\n    }\r\n\r\n    return dt.toLocaleString('default', { month: 'short' }) + ' ' + dt.getDate() + ', ' + this.formatNumber(dt.getHours()) + ':' + this.formatNumber(dt.getMinutes());\r\n  }\r\n  formatNumber(value: number) {\r\n    return value < 10 ? `0${value}` : value;\r\n  }\r\n  handleOutOfService(evt) {\r\n    this.blockDatesData.OUT_OF_SERVICE = evt.target.checked;\r\n    if (this.blockDatesData.OUT_OF_SERVICE) {\r\n      this.blockDatesData.OPTIONAL_REASON = '';\r\n      this.blockDatesData.RELEASE_AFTER_HOURS = 0;\r\n    }\r\n    this.renderPage();\r\n    this.emitData();\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={`row m-0 p-0 ${!this.isEventHover&&\"ml-1\"} mb-1`}>\r\n          <div class=\"col-12 text-left p-0\">\r\n            <span class=\"pr-1\">\r\n              <span class=\"text-bold-700 font-medium-1\">From: </span>\r\n              {this.fromDate}\r\n            </span>{' '}\r\n            <span class=\"text-bold-700 font-medium-1\">To: </span>\r\n            {this.toDate}\r\n          </div>\r\n        </div>\r\n        <div class={`col mb-1 text-left ${this.isEventHover&&\"p-0\"}` }>\r\n          <div class=\"mb-1 \" >\r\n            <label class=\"p-0 text-bold-700 font-medium-1 m-0 align-middle\">Reason:</label>\r\n            <div class=\"p-0 m-0 pr-1 controlContainer checkBoxContainer d-inline-block align-middle\">\r\n              <input class=\"form-control\" type=\"checkbox\" checked={this.blockDatesData.OUT_OF_SERVICE} id=\"userinput6\" onChange={event => this.handleOutOfService(event)} />\r\n            </div>{' '}\r\n            <span class=\"align-middle\">Out of service</span>\r\n          </div>\r\n          {!this.blockDatesData.OUT_OF_SERVICE ? (\r\n            <div>\r\n              <div class=\"mb-1 d-flex w-100 align-items-center\">\r\n                <span class=\"align-middle\">or </span>\r\n                <div class=\"d-inline-flex col pr-0 align-middle\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Optional reason\"\r\n                    id=\"optReason\"\r\n                    value={this.blockDatesData.OPTIONAL_REASON}\r\n                    onInput={event => this.handleOptionalReason(event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-1 w-100 pr-0 \">\r\n                <span class=\"text-bold-700 font-medium-1\">Automatic release in: </span>\r\n                <div class=\"d-inline-block\">\r\n                  <select class=\"form-control input-sm\" id=\"zSmallSelect\" onChange={evt => this.handleReleaseAfterChange(evt)}>\r\n                    {this.releaseList.map(releaseItem => (\r\n                      <option value={+releaseItem.CODE_NAME} selected={this.blockDatesData.RELEASE_AFTER_HOURS == +releaseItem.CODE_NAME}>\r\n                        {releaseItem.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                {this.blockDatesData.RELEASE_AFTER_HOURS ? (\r\n                  <div class=\"d-inline-block releaseTime\">\r\n                    <em>on {this.getReleaseHoursString()}</em>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport { BookingService } from './booking.service';\r\nimport { getReleaseHoursString } from '../utils/utils';\r\n\r\nexport class EventsService {\r\n  private readonly bookingService: BookingService = new BookingService();\r\n\r\n  async reallocateEvent(pool: string, destination_pr_id: number, from_date: string, to_date: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        console.log(pool, destination_pr_id, from_date, to_date);\r\n        const { data } = await axios.post(`/ReAllocate_Exposed_Room?Ticket=${token}`, { pool, destination_pr_id, from_date, to_date });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data);\r\n        return data;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async deleteEvent(POOL: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/UnBlock_Exposed_Unit?Ticket=${token}`, {\r\n          POOL,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data.My_Result;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n\r\n  public async updateBlockedEvent(bookingEvent: any) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const releaseData = getReleaseHoursString(+bookingEvent.RELEASE_AFTER_HOURS);\r\n        await this.deleteEvent(bookingEvent.POOL);\r\n        const result = await this.bookingService.blockUnit({\r\n          from_date: this.formatDate(bookingEvent.FROM_DATE),\r\n          to_date: this.formatDate(bookingEvent.TO_DATE),\r\n          pr_id: bookingEvent.PR_ID,\r\n          STAY_STATUS_CODE: bookingEvent.OUT_OF_SERVICE ? '004' : bookingEvent.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n          DESCRIPTION: bookingEvent.RELEASE_AFTER_HOURS || '',\r\n          NOTES: bookingEvent.OPTIONAL_REASON || '',\r\n          ...releaseData,\r\n        });\r\n        return result;\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private formatDate(date: string) {\r\n    return date.split('/').join('-');\r\n  }\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 99;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type='button']:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, State, h, Listen } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { dateToFormattedString, getReleaseHoursString } from '../../../utils/utils';\r\nimport { IEntries, RoomBlockDetails, RoomBookingDetails } from '../../../models/IBooking';\r\nimport { IPageTwoDataUpdateProps, PageTwoButtonsTypes } from '../../../models/models';\r\nimport { EventsService } from '../../../services/events.service';\r\nimport { transformNewBLockedRooms, transformNewBooking } from '../../../utils/booking';\r\n\r\n@Component({\r\n  tag: 'igl-book-property',\r\n  styleUrls: ['igl-book-property.css'],\r\n  scoped: true,\r\n})\r\nexport class IglBookProperty {\r\n  @Prop() propertyid: number;\r\n  @Prop() language: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() currency: { id: number; code: string };\r\n  @Prop({ reflect: true, mutable: true }) bookingData: { [key: string]: any };\r\n  @State() sourceOption: { code: string; description: string } = {\r\n    code: '',\r\n    description: '',\r\n  };\r\n  @State() splitBookingId: any = '';\r\n  @State() renderAgain: boolean = false;\r\n  @State() message: string = '';\r\n  @State() isLoading: string;\r\n  @State() isConvertedBooking: boolean;\r\n  @State() dateRangeData: { [key: string]: any };\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n  @Event() closeBookingWindow: EventEmitter<{ [key: string]: any }>;\r\n  @Event() bookingCreated: EventEmitter<{ pool?: string; data: RoomBookingDetails[] }>;\r\n  @Event() blockedCreated: EventEmitter<RoomBlockDetails>;\r\n  private PAGE_ZERO: string = 'page_zero';\r\n  private PAGE_ONE: string = 'page_one';\r\n  private PAGE_TWO: string = 'page_two';\r\n  private PAGE_BLOCK_DATES: string = 'page_block_date';\r\n  private page: string;\r\n  private showSplitBookingOption: boolean = false;\r\n  private sourceOptions: { id: string; value: string }[] = [];\r\n  private selectedRooms: { [key: string]: any } = {};\r\n  private guestData: { [key: string]: any }[] = [];\r\n  private bookedByInfoData: { [key: string]: any } = {};\r\n  private blockDatesData: { [key: string]: any } = {};\r\n  private ratePricingMode: IEntries[] = [];\r\n  private bedPreferenceType: IEntries[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private eventsService = new EventsService();\r\n  componentDidLoad() {\r\n    document.addEventListener('keydown', e => {\r\n      if (e.key === 'Escape') {\r\n        this.closeWindow();\r\n      }\r\n    });\r\n  }\r\n  disconnectedCallback() {\r\n    document.removeEventListener('keydown', () => {});\r\n  }\r\n  async componentWillLoad() {\r\n    if (!this.bookingData.defaultDateRange) {\r\n      return;\r\n    }\r\n\r\n    this.dateRangeData = { ...this.bookingData.defaultDateRange };\r\n\r\n    try {\r\n      const setupEntries = await this.fetchSetupEntries();\r\n      this.setSourceOptions(setupEntries.bookingSource);\r\n      this.setOtherProperties(setupEntries);\r\n\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        this.setEditingRoomInfo();\r\n      }\r\n      //this.bookingData.roomsInfo = [];\r\n      this.page = this.getDefaultPage();\r\n    } catch (error) {\r\n      console.error('Error fetching setup entries:', error);\r\n    }\r\n  }\r\n\r\n  async fetchSetupEntries() {\r\n    return await this.bookingService.fetchSetupEntries();\r\n  }\r\n\r\n  setSourceOptions(bookingSource: any[]) {\r\n    this.sourceOptions = bookingSource.map(source => ({\r\n      id: source.CODE_NAME,\r\n      value: source.CODE_VALUE_EN,\r\n    }));\r\n    this.sourceOption = {\r\n      code: bookingSource[0].CODE_NAME,\r\n      description: bookingSource[0].CODE_VALUE_EN,\r\n    };\r\n  }\r\n\r\n  setOtherProperties(res: any) {\r\n    this.ratePricingMode = res.ratePricingMode;\r\n    this.bookedByInfoData.arrivalTime = res.arrivalTime;\r\n    this.bedPreferenceType = res.bedPreferenceType;\r\n  }\r\n\r\n  setEditingRoomInfo() {\r\n    const category = this.getRoomCategoryByRoomId(this.getBookingPreferenceRoomId());\r\n    const key = `c_${category.id}`;\r\n    this.selectedRooms[key] = {\r\n      [`p_${this.bookingData.RATE_PLAN_ID}`]: {\r\n        adultCount: this.bookingData.ADULTS_COUNT,\r\n        rate: this.bookingData.RATE,\r\n        rateType: this.bookingData.RATE_TYPE,\r\n        ratePlanId: this.bookingData.RATE_PLAN_ID,\r\n        roomCategoryId: category.id,\r\n        roomCategoryName: category.name,\r\n        totalRooms: 1,\r\n        ratePlanName: this.bookingData.RATE_PLAN,\r\n        roomId: this.bookingData.PR_ID,\r\n        guestName: this.bookingData.NAME,\r\n        cancelation: this.bookingData.cancelation,\r\n        guarantee: this.bookingData.guarantee,\r\n        adult_child_offering: this.bookingData.adult_child_offering,\r\n      },\r\n    };\r\n  }\r\n\r\n  async initializeBookingAvailability(from_date: string, to_date: string) {\r\n    try {\r\n      const room_type_ids = this.bookingData.roomsInfo.map(room => room.id);\r\n      const data = await this.bookingService.getBookingAvailability(from_date, to_date, this.propertyid, this.language, room_type_ids, this.currency);\r\n      this.message = '';\r\n      this.bookingData = {\r\n        ...this.bookingData,\r\n        roomsInfo: data.roomtypes,\r\n      };\r\n      this.message = data.tax_statement;\r\n      console.log(data);\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n  getRoomCategoryByRoomId(roomId) {\r\n    return this.bookingData.roomsInfo?.find(roomCategory => {\r\n      return roomCategory.physicalrooms.find(room => room.id === +roomId);\r\n    });\r\n  }\r\n\r\n  getDefaultPage() {\r\n    if (this.bookingData.event_type === 'BLOCK_DATES') {\r\n      return this.PAGE_BLOCK_DATES;\r\n    } else if (this.bookingData.event_type === 'SPLIT_BOOKING') {\r\n      this.showSplitBookingOption = true;\r\n      return this.PAGE_ONE;\r\n    } else {\r\n      // if( || this.bookingData.event_type === \"NEW_BOOKING\")\r\n      return this.PAGE_ONE;\r\n    }\r\n  }\r\n\r\n  getBookingPreferenceRoomId() {\r\n    //console.log(this.bookingData);\r\n    return (this.bookingData.hasOwnProperty('PR_ID') && this.bookingData.PR_ID) || null;\r\n  }\r\n\r\n  getSplitBookings() {\r\n    return (this.bookingData.hasOwnProperty('splitBookingEvents') && this.bookingData.splitBookingEvents) || [];\r\n  }\r\n  isEventType(key: string) {\r\n    return this.bookingData.event_type === key;\r\n  }\r\n\r\n  closeWindow() {\r\n    this.isConvertedBooking = false;\r\n    this.closeBookingWindow.emit();\r\n  }\r\n  isEditBooking() {\r\n    return this.bookingData.event_type === 'EDIT_BOOKING';\r\n  }\r\n  onRoomsDataUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    const { data, key, changedKey } = event.detail;\r\n    const roomCategoryKey = this.getRoomCategoryKey(data.roomCategoryId);\r\n    const ratePlanKey = this.getRatePlanKey(data.ratePlanId);\r\n\r\n    if (this.shouldClearData(key)) {\r\n      this.selectedRooms = {};\r\n    }\r\n\r\n    this.initializeRoomCategoryIfNeeded(roomCategoryKey);\r\n\r\n    if (this.isEditBooking()) {\r\n      if (changedKey === 'rate') {\r\n        if (this.selectedRooms.hasOwnProperty(roomCategoryKey) && this.selectedRooms[roomCategoryKey].hasOwnProperty(ratePlanKey)) {\r\n          this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data);\r\n        }\r\n      } else {\r\n        if (changedKey !== 'rateType') {\r\n          if (changedKey === 'adult_child_offering') {\r\n            if (this.selectedRooms.hasOwnProperty(roomCategoryKey) && this.selectedRooms[roomCategoryKey].hasOwnProperty(ratePlanKey)) {\r\n              this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data);\r\n            }\r\n          } else {\r\n            this.applyBookingEditToSelectedRoom(roomCategoryKey, ratePlanKey, data);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.setSelectedRoomData(roomCategoryKey, ratePlanKey, data);\r\n    }\r\n\r\n    this.cleanupEmptyData(roomCategoryKey, ratePlanKey);\r\n    this.renderPage();\r\n  }\r\n  getRoomCategoryKey(roomCategoryId: string): string {\r\n    return `c_${roomCategoryId}`;\r\n  }\r\n\r\n  getRatePlanKey(ratePlanId: string): string {\r\n    return `p_${ratePlanId}`;\r\n  }\r\n\r\n  shouldClearData(key: string | undefined): boolean {\r\n    return key === 'clearData' || this.isEditBookingEvent(key);\r\n  }\r\n\r\n  isEditBookingEvent(key: string | undefined): boolean {\r\n    return key === 'EDIT_BOOKING';\r\n  }\r\n\r\n  initializeRoomCategoryIfNeeded(roomCategoryKey: string) {\r\n    if (!this.selectedRooms[roomCategoryKey]) {\r\n      this.selectedRooms[roomCategoryKey] = {};\r\n    }\r\n  }\r\n\r\n  setSelectedRoomData(roomCategoryKey: string, ratePlanKey: string, data: any) {\r\n    this.selectedRooms[roomCategoryKey][ratePlanKey] = data;\r\n  }\r\n\r\n  hasSelectedRoomData(roomCategoryKey: string, ratePlanKey: string): boolean {\r\n    return this.selectedRooms[roomCategoryKey] && this.selectedRooms[roomCategoryKey][ratePlanKey];\r\n  }\r\n\r\n  cleanupEmptyData(roomCategoryKey: string, ratePlanKey: string) {\r\n    if (this.selectedRooms[roomCategoryKey][ratePlanKey]?.totalRooms === 0) {\r\n      delete this.selectedRooms[roomCategoryKey][ratePlanKey];\r\n    }\r\n\r\n    if (!Object.keys(this.selectedRooms[roomCategoryKey]).length) {\r\n      delete this.selectedRooms[roomCategoryKey];\r\n    }\r\n  }\r\n\r\n  applyBookingEditToSelectedRoom(roomCategoryKey: string, ratePlanKey: string, data) {\r\n    this.selectedRooms = {\r\n      [roomCategoryKey]: {\r\n        [ratePlanKey]: {\r\n          ...data,\r\n          guestName: this.bookingData.NAME,\r\n          roomId: this.bookingData.PR_ID,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  onDateRangeSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    if (opt.key === 'selectedDateRange') {\r\n      this.dateRangeData = opt.data;\r\n      this.bookingData.defaultDateRange.fromDate = new Date(this.dateRangeData.fromDate);\r\n      this.bookingData.defaultDateRange.toDate = new Date(this.dateRangeData.toDate);\r\n      this.initializeBookingAvailability(dateToFormattedString(this.bookingData.defaultDateRange.fromDate), dateToFormattedString(this.bookingData.defaultDateRange.toDate));\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.blockDatesData = opt.data;\r\n    //console.log(\"blocked date data\", this.blockDatesData);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    //console.log(event);\r\n  }\r\n\r\n  handleGuestInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    const opt = event.detail;\r\n    if (opt.guestRefKey) {\r\n      if (this.isEventType('BAR_BOOKING')) {\r\n        this.guestData[opt.guestRefKey] = {\r\n          ...opt.data,\r\n          roomId: this.bookingData.PR_ID,\r\n        };\r\n      } else this.guestData[opt.guestRefKey] = opt.data;\r\n    }\r\n  }\r\n\r\n  handleBookedByInfoUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookedByInfoData = opt.value.data;\r\n  }\r\n\r\n  isActiveSouceOption(srcIndex) {\r\n    return this.sourceOption === srcIndex ? 'active' : '';\r\n  }\r\n\r\n  handleSourceDropDown(selectedOption) {\r\n    this.sourceOption = {\r\n      code: selectedOption.target.value,\r\n      description: this.sourceOptions.find(opt => opt.id === selectedOption.target.value.toString()).value || '',\r\n    };\r\n  }\r\n\r\n  renderPage() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  @Listen('gotoSplitPageTwoEvent', { target: 'window' })\r\n  gotoSplitPageTwo() {\r\n    this.gotoPage(this.PAGE_TWO);\r\n  }\r\n\r\n  gotoPage(gotoPage) {\r\n    this.page = gotoPage;\r\n    this.renderPage();\r\n  }\r\n\r\n  showSplitBooking() {\r\n    this.showSplitBookingOption = true;\r\n    this.gotoPage(this.PAGE_ONE);\r\n  }\r\n\r\n  getSelectedSplitBookingName(bookingId) {\r\n    let splitBooking = this.getSplitBookings().find(booking => booking.ID === bookingId);\r\n    return splitBooking.ID + ' ' + splitBooking.NAME;\r\n  }\r\n\r\n  isActiveSplitBookingOption(spltIndex) {\r\n    return this.splitBookingId === spltIndex ? 'active' : '';\r\n  }\r\n\r\n  handleSplitBookingDropDown(evt) {\r\n    this.splitBookingId = evt.target.value;\r\n  }\r\n\r\n  isPageZero() {\r\n    return this.page === this.PAGE_ZERO;\r\n  }\r\n\r\n  isPageOne() {\r\n    return this.page === this.PAGE_ONE;\r\n  }\r\n\r\n  isPageTwo() {\r\n    return this.page === this.PAGE_TWO;\r\n  }\r\n\r\n  isPageBlockDates() {\r\n    return this.page === this.PAGE_BLOCK_DATES;\r\n  }\r\n\r\n  getSplitBookingList() {\r\n    return (\r\n      <fieldset class=\"form-group col-12 text-left\">\r\n        <label class=\"h5\">To booking# </label>\r\n        <div class=\"btn-group ml-1\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.handleSplitBookingDropDown(evt)}>\r\n            <option value=\"\" selected={this.splitBookingId != ''}>\r\n              Select\r\n            </option>\r\n            {this.getSplitBookings().map(option => (\r\n              <option value={option.ID} selected={this.splitBookingId === option.ID}>\r\n                {this.getSelectedSplitBookingName(option.ID)}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          {/* <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" name=\"sourceType\" data-toggle=\"dropdown\">\r\n                    {this.splitBookingId!=null ? this.getSelectedSplitBookingName(this.splitBookingId) : \"Select\"}\r\n                </button>\r\n                <div class=\"dropdown-menu\">\r\n                  {this.getSplitBookings().map((option) => <button class={`dropdown-item ${this.isActiveSplitBookingOption(option.ID)}`}  type=\"button\" onClick={() => this.handleSplitBookingDropDown(option.ID)}>{this.getSelectedSplitBookingName(option.ID)}</button>)}\r\n                </div> */}\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n  getSourceNode() {\r\n    return (\r\n      <fieldset class=\"form-group col-12 text-left\">\r\n        <label class=\"h5\">Source </label>\r\n        <div class=\"btn-group ml-1\">\r\n          <select class=\"form-control input-sm\" id=\"xSmallSelect\" onChange={evt => this.handleSourceDropDown(evt)}>\r\n            {this.sourceOptions.map(option => (\r\n              <option value={option.id} selected={this.sourceOption.code === option.id}>\r\n                {option.value}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </fieldset>\r\n    );\r\n  }\r\n\r\n  getRoomsListFromCategoryId(categoryId) {\r\n    let category = this.bookingData.roomsInfo?.find(category => category.id === categoryId);\r\n    return (category && category.physicalrooms) || [];\r\n  }\r\n\r\n  getPageZeroView() {\r\n    return (\r\n      <div class=\"scrollContent\">\r\n        <div class=\"row p-0 mb-1\">\r\n          <div class=\"col-md-3 col-sm-12 mb-1\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.gotoPage(this.PAGE_ONE)}>\r\n              Create New Booking\r\n            </button>\r\n          </div>\r\n          {this.getSplitBookings().length ? (\r\n            <div class=\"col-md-3 col-sm-12 mb-1\">\r\n              <button class=\"btn btn-primary full-width\" onClick={() => this.showSplitBooking()}>\r\n                Add Unit to Existing Booking\r\n              </button>\r\n            </div>\r\n          ) : null}\r\n          <div class=\"col-md-3 col-sm-12 mb-1\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.gotoPage(this.PAGE_BLOCK_DATES)}>\r\n              Block Dates\r\n            </button>\r\n          </div>\r\n          <div class=\"col-md-3 col-sm-12 mb-1\">\r\n            <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPageOneView() {\r\n    return (\r\n      <div class=\"scrollContent\">\r\n        {this.showSplitBookingOption ? this.getSplitBookingList() : this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM') ? null : this.getSourceNode()}\r\n\r\n        <fieldset class=\"form-group col-12 row\">\r\n          <igl-date-range message={this.message} defaultData={this.bookingData.defaultDateRange} onDateSelectEvent={evt => this.onDateRangeSelect(evt)}></igl-date-range>\r\n        </fieldset>\r\n\r\n        <div class=\"col text-left\">\r\n          {this.bookingData.roomsInfo?.map(roomInfo => (\r\n            <igl-booking-rooms\r\n              currency={this.currency}\r\n              ratePricingMode={this.ratePricingMode}\r\n              dateDifference={this.dateRangeData.dateDifference}\r\n              bookingType={this.bookingData.event_type}\r\n              roomTypeData={roomInfo}\r\n              class=\"mt-2 mb-1\"\r\n              defaultData={this.selectedRooms['c_' + roomInfo.id]}\r\n              onDataUpdateEvent={evt => this.onRoomsDataUpdate(evt)}\r\n            ></igl-booking-rooms>\r\n          ))}\r\n        </div>\r\n\r\n        {this.isEventType('EDIT_BOOKING') ? (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class=\"col-6\">\r\n              <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <button class=\"btn btn-primary full-width\" onClick={() => this.gotoPage(this.PAGE_TWO)}>\r\n                Next &gt;&gt;\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class={this.bookingData.event_type === 'PLUS_BOOKING' || this.isEventType('ADD_ROOM') ? 'col-6' : 'col-12'}>\r\n              <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            {this.bookingData.event_type === 'PLUS_BOOKING' || this.isEventType('ADD_ROOM') ? (\r\n              <div class=\"col-6\">\r\n                <button class=\"btn btn-primary full-width\" disabled={Object.keys(this.selectedRooms).length === 0} onClick={() => this.gotoPage(this.PAGE_TWO)}>\r\n                  Next &gt;&gt;\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPageBlockDatesView() {\r\n    return (\r\n      <div class=\"scrollContent blockDatesForm\">\r\n        <igl-block-dates-view\r\n          fromDate={this.dateRangeData.fromDateStr}\r\n          toDate={this.dateRangeData.toDateStr}\r\n          entryDate={this.bookingData.ENTRY_DATE}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"row p-0 mb-1 mt-2\">\r\n          <div class=\"col-6\">\r\n            <button class=\"btn btn-secondary full-width\" onClick={() => this.closeWindow()}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <button class=\"btn btn-primary full-width\" onClick={() => this.handleBlockDate()}>\r\n              Block dates\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleButtonClicked(\r\n    event: CustomEvent<{\r\n      key: PageTwoButtonsTypes;\r\n      data?: CustomEvent;\r\n    }>,\r\n  ) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    switch (event.detail.key) {\r\n      case 'save':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'cancel':\r\n        this.closeWindow();\r\n        break;\r\n      case 'back':\r\n        this.gotoPage(this.PAGE_ONE);\r\n        break;\r\n      case 'book':\r\n        this.bookUser(false);\r\n        break;\r\n      case 'bookAndCheckIn':\r\n        this.bookUser(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  handlePageTwoDataUpdateEvent(event: CustomEvent<IPageTwoDataUpdateProps>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    if (event.detail.key === 'propertyBookedBy') {\r\n      this.handleBookedByInfoUpdate(event);\r\n    } else {\r\n      this.handleGuestInfoUpdate(event);\r\n    }\r\n  }\r\n  async handleBlockDate() {\r\n    const releaseData = getReleaseHoursString(+this.blockDatesData.RELEASE_AFTER_HOURS);\r\n    const result = await this.bookingService.blockUnit({\r\n      from_date: dateToFormattedString(this.bookingData.defaultDateRange.fromDate),\r\n      to_date: dateToFormattedString(this.bookingData.defaultDateRange.toDate),\r\n      NOTES: this.blockDatesData.OPTIONAL_REASON || '',\r\n      pr_id: this.bookingData.PR_ID.toString(),\r\n      STAY_STATUS_CODE: this.blockDatesData.OUT_OF_SERVICE ? '004' : this.blockDatesData.RELEASE_AFTER_HOURS === 0 ? '002' : '003',\r\n      DESCRIPTION: this.blockDatesData.RELEASE_AFTER_HOURS || '',\r\n      ...releaseData,\r\n    });\r\n    const blockedUnit = await transformNewBLockedRooms(result);\r\n    this.blockedCreated.emit(blockedUnit);\r\n    this.closeWindow();\r\n    //window.location.reload();\r\n  }\r\n\r\n  async bookUser(check_in: boolean) {\r\n    this.setLoadingState(check_in);\r\n\r\n    try {\r\n      let booking = {\r\n        pool: '',\r\n        data: [],\r\n      };\r\n      if (['003', '002', '004'].includes(this.bookingData.STATUS_CODE)) {\r\n        this.eventsService.deleteEvent(this.bookingData.POOL);\r\n        booking.pool = this.bookingData.POOL;\r\n      }\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        booking.pool = this.bookingData.POOL;\r\n      }\r\n\r\n      const arrivalTime = this.isEventType('EDIT_BOOKING') ? this.getArrivalTimeForBooking() : '';\r\n      const pr_id = this.isEventType('BAR_BOOKING') ? this.bookingData.PR_ID : undefined;\r\n      const booking_nbr = this.isEventType('EDIT_BOOKING') ? this.bookingData.BOOKING_NUMBER : undefined;\r\n      if (this.isEventType('EDIT_BOOKING')) {\r\n        this.bookedByInfoData.message = this.bookingData.NOTES;\r\n      }\r\n      const result = await this.bookingService.bookUser(\r\n        this.bookedByInfoData,\r\n        check_in,\r\n        this.bookingData.defaultDateRange.fromDate,\r\n        this.bookingData.defaultDateRange.toDate,\r\n        this.guestData,\r\n        this.dateRangeData.dateDifference,\r\n        this.sourceOption,\r\n        this.propertyid,\r\n        this.currency,\r\n        booking_nbr,\r\n        this.bookingData.GUEST,\r\n        arrivalTime,\r\n        pr_id,\r\n      );\r\n      if (check_in || this.isEventType('EDIT_BOOKING')) {\r\n        const newBookings: RoomBookingDetails[] = transformNewBooking(result);\r\n        booking.data = newBookings;\r\n        //this.bookingCreated.emit(booking);\r\n      }\r\n      //window.location.reload();\r\n      //console.log(\"booking data \", this.bookingData);\r\n    } catch (error) {\r\n      //  toastr.error(error);\r\n    } finally {\r\n      this.resetLoadingState();\r\n    }\r\n  }\r\n\r\n  setLoadingState(assign_units: boolean) {\r\n    if (this.isEventType('EDIT_BOOKING')) {\r\n      this.isLoading = 'save';\r\n    } else {\r\n      this.isLoading = assign_units ? 'bookAndCheckIn' : 'book';\r\n    }\r\n  }\r\n\r\n  getArrivalTimeForBooking(): string {\r\n    return this.bookedByInfoData.arrivalTime.find(e => e.CODE_VALUE_EN === this.bookingData.ARRIVAL_TIME).CODE_NAME;\r\n  }\r\n\r\n  resetLoadingState() {\r\n    this.isLoading = '';\r\n    setTimeout(() => {\r\n      this.closeWindow();\r\n    }, 100);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"background-overlay\" onClick={() => this.closeWindow()}></div>\r\n        <div class={'sideWindow ' + (this.isPageBlockDates() ? 'col-sm-12 col-md-6 col-lg-5 col-xl-4' : 'col-sm-12 col-md-11 col-lg-9 col-xl-8')}>\r\n          <div class=\"card mb-0 shadow-none p-0\">\r\n            <div class=\"card-header\">\r\n              <h3 class=\"card-title text-left pb-1 font-medium-2\">{this.isPageBlockDates() ? this.bookingData.BLOCK_DATES_TITLE : this.bookingData.TITLE}</h3>\r\n              <button type=\"button\" class=\"close close-icon\" onClick={() => this.closeWindow()}>\r\n                <i class=\"ft-x\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {this.isPageZero() && this.getPageZeroView()}\r\n\r\n          {this.isPageOne() && this.getPageOneView()}\r\n\r\n          {this.isPageTwo() && (\r\n            <igl-pagetwo\r\n              showPaymentDetails={this.showPaymentDetails}\r\n              selectedGuestData={this.guestData}\r\n              countryNodeList={this.countryNodeList}\r\n              isLoading={this.isLoading}\r\n              selectedRooms={this.selectedRooms}\r\n              bedPreferenceType={this.bedPreferenceType}\r\n              dateRangeData={this.dateRangeData}\r\n              bookingData={this.bookingData}\r\n              showSplitBookingOption={this.showSplitBookingOption}\r\n              language={this.language}\r\n              bookedByInfoData={this.bookedByInfoData}\r\n              isEditOrAddRoomEvent={this.isEventType('EDIT_BOOKING') || this.isEventType('ADD_ROOM')}\r\n              onDataUpdateEvent={event => this.handlePageTwoDataUpdateEvent(event)}\r\n              onButtonClicked={event => this.handleButtonClicked(event)}\r\n            ></igl-pagetwo>\r\n          )}\r\n\r\n          {this.isPageBlockDates() ? this.getPageBlockDatesView() : null}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n  position: absolute;\r\n}\r\n\r\n.bookingEventBase {\r\n  position: absolute;\r\n  background-color: rgb(49, 190, 241);\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: skewX(-22deg);\r\n}\r\n\r\n.bookingEventHiddenBase {\r\n  position: absolute;\r\n  top: 0;\r\n  left: -4px;\r\n  width: calc(100% + 8);\r\n}\r\n\r\n.bookingEventDragHandle {\r\n  position: absolute;\r\n  top: 0;\r\n  width: 15px;\r\n  height: 100%;\r\n  opacity: 0.1;\r\n  background-color: rgba(0, 0, 0, 0.15);\r\n  transform: skewX(-22deg);\r\n  /* display: none; */\r\n  cursor: pointer;\r\n}\r\n\r\n.splitBooking {\r\n  border-right: 2px solid #000000;\r\n}\r\n\r\n:host:hover .bookingEventDragHandle {\r\n  display: block;\r\n  opacity: 1;\r\n}\r\n\r\n:host.newEvent:hover .bookingEventDragHandle {\r\n  display: none;\r\n  opacity: 1;\r\n}\r\n\r\n.leftSide {\r\n  left: 0;\r\n}\r\n\r\n.rightSide {\r\n  right: 0;\r\n}\r\n\r\n.bookingEventTitle {\r\n  color: #fff;\r\n  font-size: 0.8em;\r\n  position: relative;\r\n  max-width: calc(100% - 10px);\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  top: 2px;\r\n  left: 5px;\r\n}\r\n\r\n.legend_circle {\r\n  border-radius: 100%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 3px 3px 3px 2px;\r\n  border: 1px solid #fff;\r\n}\r\n\r\n.noteIcon {\r\n  position: absolute;\r\n  bottom: -8px;\r\n  left: 2px;\r\n}\r\n\r\n.balanceIcon {\r\n  position: absolute;\r\n  top: -8px;\r\n  right: 2px;\r\n}\r\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, h } from '@stencil/core';\r\nimport { EventsService } from '../../../services/events.service';\r\n\r\n@Component({\r\n  tag: 'igl-booking-event',\r\n  styleUrl: 'igl-booking-event.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingEvent {\r\n  @Element() private element: HTMLElement;\r\n  @Prop() currency;\r\n  @Prop() is_vacation_rental: boolean = false;\r\n  @Event({ bubbles: true, composed: true }) hideBubbleInfo: EventEmitter;\r\n\r\n  @Event() updateEventData: EventEmitter;\r\n  @Event() dragOverEventData: EventEmitter;\r\n\r\n  @Prop() bookingEvent: { [key: string]: any };\r\n  @Prop() allBookingEvents: { [key: string]: any } = [];\r\n  @Prop() countryNodeList;\r\n\r\n  @State() renderElement: boolean = false;\r\n  @State() position: { [key: string]: any };\r\n\r\n  dayWidth: number = 0;\r\n  eventSpace: number = 8;\r\n  vertSpace: number = 10;\r\n\r\n  /* show bubble */\r\n  private showInfoPopup: boolean = false;\r\n  private bubbleInfoTopSide: boolean = false;\r\n  private eventsService = new EventsService();\r\n  private isStreatch = false;\r\n  /* Resize props */\r\n  resizeSide: string = '';\r\n  isDragging: boolean = false;\r\n  initialX: number;\r\n  initialY: number;\r\n  currentX: number;\r\n  currentY: number;\r\n  initialWidth: number;\r\n  initialLeft: number;\r\n  finalWidth: number;\r\n  dragInitPos: { [key: string]: any };\r\n  dragEndPos: { [key: string]: any };\r\n  elementRect: { [key: string]: any };\r\n  isTouchStart: boolean;\r\n  moveDiffereneX: number;\r\n  moveDiffereneY: number;\r\n\r\n  handleMouseMoveBind = this.handleMouseMove.bind(this);\r\n  handleMouseUpBind = this.handleMouseUp.bind(this);\r\n  handleClickOutsideBind = this.handleClickOutside.bind(this);\r\n\r\n  componentWillLoad() {\r\n    window.addEventListener('click', this.handleClickOutsideBind);\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (this.isNewEvent()) {\r\n      if (!this.bookingEvent.hideBubble) {\r\n        /* auto matically open the popup, calling the method shows bubble either top or bottom based on available space. */\r\n        setTimeout(() => {\r\n          this.showEventInfo(true);\r\n          this.renderAgain();\r\n        }, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    window.removeEventListener('click', this.handleClickOutsideBind);\r\n  }\r\n\r\n  @Listen('click', { target: 'window' })\r\n  handleClickOutside(event: Event) {\r\n    const clickedElement = event.target as HTMLElement;\r\n    // Check if the clicked element is not within the target div\r\n    if (!this.element.contains(clickedElement)) {\r\n      // The click occurred outside the target div\r\n      this.showEventInfo(false);\r\n    }\r\n  }\r\n\r\n  @Listen('hideBubbleInfo', { target: 'window' })\r\n  hideBubbleInfoPopup(event: CustomEvent) {\r\n    if (event.detail.currentInfoBubbleId != this.getBookingId() || (event.detail.key === 'hidebubble' && event.detail.currentInfoBubbleId === this.getBookingId())) {\r\n      this.showInfoPopup = false;\r\n      this.renderAgain();\r\n    }\r\n  }\r\n\r\n  @Listen('moveBookingTo', { target: 'window' })\r\n  async moveBookingToHandler(event: CustomEvent) {\r\n    try {\r\n      if (event.detail.bookingId !== this.getBookingId()) {\r\n        this.showEventInfo(false);\r\n        return;\r\n      }\r\n\r\n      if (event.detail.moveToDay === 'revert' || event.detail.toRoomId === 'revert') {\r\n        event.detail.moveToDay = this.bookingEvent.FROM_DATE;\r\n        event.detail.toRoomId = event.detail.fromRoomId;\r\n        if (this.isTouchStart && this.moveDiffereneX <= 5 && this.moveDiffereneY <= 5) {\r\n          this.showEventInfo(true);\r\n        }\r\n      } else {\r\n        if (this.isTouchStart && this.moveDiffereneX <= 5 && this.moveDiffereneY <= 5) {\r\n          this.showEventInfo(true);\r\n        } else {\r\n          const { pool, from_date, to_date, toRoomId } = event.detail as any;\r\n\r\n          if (this.checkIfSlotOccupied(toRoomId, from_date, to_date) && !this.isStreatch) {\r\n            this.element.style.top = `${this.dragInitPos.top}px`;\r\n            this.element.style.left = `${this.dragInitPos.left}px`;\r\n\r\n            this.dragEndPos = {\r\n              ...this.dragInitPos,\r\n              id: this.getBookingId(),\r\n              fromRoomId: this.getBookedRoomId(),\r\n            };\r\n\r\n            this.dragOverEventData.emit({ id: 'DRAG_OVER_END', data: this.dragEndPos });\r\n          }\r\n\r\n          const result = await this.eventsService.reallocateEvent(pool, toRoomId, from_date, to_date);\r\n          this.bookingEvent.POOL = result.My_Result.POOL;\r\n        }\r\n      }\r\n\r\n      if (event.detail.fromRoomId === this.getBookedRoomId()) {\r\n        this.onMoveUpdateBooking(event.detail);\r\n        this.renderAgain();\r\n      }\r\n    } catch (error) {}\r\n  }\r\n  checkIfSlotOccupied(toRoomId, from_date, to_date) {\r\n    const fromTime = new Date(from_date).getTime();\r\n    const toTime = new Date(to_date).getTime();\r\n\r\n    const isOccupied = this.allBookingEvents.some(event => {\r\n      const eventFromTime = new Date(event.FROM_DATE).getTime();\r\n      const eventToTime = new Date(event.TO_DATE).getTime();\r\n\r\n      return event.PR_ID === +toRoomId && eventToTime > fromTime && eventFromTime < toTime;\r\n    });\r\n\r\n    return isOccupied;\r\n  }\r\n  renderAgain() {\r\n    this.renderElement = !this.renderElement;\r\n  }\r\n\r\n  getUniqueId() {\r\n    return new Date().getTime();\r\n  }\r\n\r\n  onMoveUpdateBooking(data) {\r\n    this.bookingEvent.PR_ID = data.toRoomId;\r\n    this.bookingEvent.FROM_DATE = data.moveToDay.split('_').reverse().join('/');\r\n    let tempDate = new Date(this.bookingEvent.FROM_DATE);\r\n    tempDate.setDate(tempDate.getDate() + this.getStayDays());\r\n    this.bookingEvent.TO_DATE = tempDate.getFullYear() + '/' + (tempDate.getMonth() + 1) + '/' + tempDate.getDate();\r\n  }\r\n  /* End of Resize props */\r\n\r\n  isSplitBooking() {\r\n    return !!this.bookingEvent.SPLIT_BOOKING;\r\n  }\r\n\r\n  isNewEvent() {\r\n    return this.getBookingId() === 'NEW_TEMP_EVENT';\r\n  }\r\n\r\n  isHighlightEventType() {\r\n    return this.getEventType() === 'HIGH_LIGHT';\r\n  }\r\n\r\n  getBookingId() {\r\n    return this.bookingEvent.ID;\r\n  }\r\n\r\n  getBookingStatus() {\r\n    return this.bookingEvent.STATUS;\r\n  }\r\n\r\n  getBookedBy() {\r\n    return this.bookingEvent.NAME;\r\n  }\r\n\r\n  getBookedRoomId() {\r\n    return this.bookingEvent.PR_ID;\r\n  }\r\n\r\n  getEventStartingDate() {\r\n    return new Date(this.bookingEvent.FROM_DATE);\r\n  }\r\n\r\n  getEventEndingDate() {\r\n    return new Date(this.bookingEvent.TO_DATE);\r\n  }\r\n\r\n  getEventType() {\r\n    return this.bookingEvent.event_type;\r\n  }\r\n\r\n  getEventLegend() {\r\n    // console.log(this.getBookingStatus());\r\n    let status = this.bookingEvent?.legendData.statusId[this.getBookingStatus()];\r\n    let orderRide = this.isNewEvent() ? { color: '#f9f9c9' } : {};\r\n    return {\r\n      ...this.bookingEvent?.legendData[status.id],\r\n      ...status,\r\n      ...orderRide,\r\n    };\r\n  }\r\n\r\n  getLegendOfStatus(aStatusId) {\r\n    // console.log(aStatusId);\r\n    let status = this.bookingEvent?.legendData.statusId[aStatusId];\r\n    return { ...this.bookingEvent.legendData[status.id], ...status };\r\n  }\r\n\r\n  getNoteNode() {\r\n    if (this.bookingEvent.NOTES || this.bookingEvent.INTERNAL_NOTE) {\r\n      return this.getLegendOfStatus('NOTES');\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getBalanceNode() {\r\n    if (this.bookingEvent.BALANCE) {\r\n      return this.getLegendOfStatus('OUTSTANDING-BALANCE');\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setStayDays(aStayDays: number) {\r\n    this.bookingEvent.NO_OF_DAYS = aStayDays;\r\n    this.renderAgain();\r\n    // this.updateData({id: this.getBookedRoomId(), data: { NO_OF_DAYS: aStayDays }});\r\n  }\r\n\r\n  getStayDays() {\r\n    return this.bookingEvent.NO_OF_DAYS;\r\n  }\r\n\r\n  getPosition() {\r\n    let startingDate = this.getEventStartingDate();\r\n    let startingCellClass = '.room_' + this.getBookedRoomId() + '_' + startingDate.getDate() + '_' + (startingDate.getMonth() + 1) + '_' + startingDate.getFullYear();\r\n    let bodyContainer = document.querySelector('.bodyContainer');\r\n    let startingCell = document.querySelector(startingCellClass);\r\n    let pos = { top: '0', left: '0', width: '0', height: '20px' };\r\n    if (startingCell && bodyContainer && startingCell.getBoundingClientRect() && bodyContainer.getBoundingClientRect()) {\r\n      let bodyContainerRect = bodyContainer.getBoundingClientRect();\r\n      let boundingRect = startingCell.getBoundingClientRect();\r\n      this.dayWidth = this.dayWidth || boundingRect.width;\r\n      pos.top = boundingRect.top + boundingRect.height / 2 - this.vertSpace - bodyContainerRect.top + 'px';\r\n      pos.left = boundingRect.left + this.dayWidth / 2 + this.eventSpace / 2 - bodyContainerRect.left + 'px';\r\n      pos.width = this.getStayDays() * this.dayWidth - this.eventSpace + 'px';\r\n    } else {\r\n      console.log('Locating event cell failed ', startingCellClass);\r\n    }\r\n    //console.log(pos);\r\n    return pos;\r\n  }\r\n\r\n  getNumber(aData) {\r\n    return aData ? parseFloat(aData) : 0;\r\n  }\r\n\r\n  startDragging(event: any, side: string) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n\r\n    if (this.isNewEvent() || this.isHighlightEventType()) {\r\n      return null;\r\n    }\r\n\r\n    this.resizeSide = side;\r\n    this.isDragging = true;\r\n\r\n    this.showEventInfo(false); // Hide bubble;\r\n    this.isStreatch = side !== 'move';\r\n    if (side === 'move') {\r\n      this.initialX = event.clientX || event.touches[0].clientX;\r\n      this.initialY = event.clientY || event.touches[0].clientY;\r\n      this.elementRect = this.element.getBoundingClientRect();\r\n      const offsetX = 0; //this.initialX - this.elementRect.left - 18;\r\n      const offsetY = 0; // this.initialY - this.elementRect.top - (this.elementRect.height/2);\r\n      this.dragInitPos = {\r\n        id: this.getBookingId(),\r\n        fromRoomId: this.getBookedRoomId(),\r\n        top: this.getNumber(this.element.style.top) + offsetY,\r\n        left: this.getNumber(this.element.style.left) + offsetX,\r\n      };\r\n      this.dragInitPos.x = this.dragInitPos.left; // + 18;\r\n      this.dragInitPos.y = this.dragInitPos.top; // + (this.elementRect.height/2);\r\n      this.dragEndPos = { ...this.dragInitPos };\r\n      this.element.style.top = `${this.dragInitPos.top}px`;\r\n      this.element.style.left = `${this.dragInitPos.left}px`;\r\n      this.isTouchStart = true; // !!(event.touches && event.touches.length);\r\n      this.dragOverEventData.emit({\r\n        id: 'CALCULATE_DRAG_OVER_BOUNDS',\r\n        data: this.dragInitPos,\r\n      });\r\n    } else {\r\n      this.initialWidth = this.element.offsetWidth;\r\n      this.initialLeft = this.element.offsetLeft;\r\n      this.initialX = event.clientX || event.touches[0].clientX;\r\n      this.dragOverEventData.emit({\r\n        id: 'CALCULATE_DRAG_OVER_BOUNDS',\r\n        data: {\r\n          id: this.getBookingId(),\r\n          fromRoomId: this.getBookedRoomId(),\r\n          top: this.getNumber(this.element.style.top),\r\n          left: this.initialLeft,\r\n          x: this.initialX,\r\n          y: event.clientY || event.touches[0].clientY,\r\n        },\r\n      });\r\n    }\r\n\r\n    document.addEventListener('mousemove', this.handleMouseMoveBind);\r\n    document.addEventListener('touchmove', this.handleMouseMoveBind);\r\n    document.addEventListener('pointermove', this.handleMouseMoveBind);\r\n\r\n    document.addEventListener('mouseup', this.handleMouseUpBind);\r\n    document.addEventListener('touchup', this.handleMouseUpBind);\r\n    document.addEventListener('pointerup', this.handleMouseUpBind);\r\n  }\r\n\r\n  handleMouseMove(event: any) {\r\n    if (this.isDragging) {\r\n      this.currentX = event.clientX || event.touches[0].clientX;\r\n      let distanceX = this.currentX - this.initialX;\r\n      if (this.resizeSide === 'move') {\r\n        this.currentY = event.clientY || event.touches[0].clientY;\r\n        let distanceY = this.currentY - this.initialY;\r\n        this.element.style.top = `${this.dragInitPos.top + distanceY}px`;\r\n        this.element.style.left = `${this.dragInitPos.left + distanceX}px`;\r\n        this.dragEndPos = {\r\n          id: this.getBookingId(),\r\n          fromRoomId: this.getBookedRoomId(),\r\n          top: this.dragInitPos.top + distanceY,\r\n          left: this.dragInitPos.left + distanceX,\r\n        };\r\n        this.dragEndPos.x = this.dragEndPos.left; // + 18;\r\n        this.dragEndPos.y = this.dragEndPos.top; // + (this.elementRect.height/2);\r\n        this.dragOverEventData.emit({ id: 'DRAG_OVER', data: this.dragEndPos });\r\n      } else {\r\n        let newWidth = this.initialWidth;\r\n        if (this.resizeSide == 'rightSide') {\r\n          newWidth = this.initialWidth + distanceX;\r\n          newWidth = Math.min(newWidth, this.initialX + this.element.offsetWidth);\r\n          newWidth = Math.max(this.dayWidth - this.eventSpace, newWidth);\r\n          this.element.style.width = `${newWidth}px`;\r\n        } else if (this.resizeSide == 'leftSide') {\r\n          newWidth = Math.max(this.dayWidth - this.eventSpace, this.initialWidth - distanceX);\r\n          let newLeft = this.initialLeft + (this.initialWidth - newWidth);\r\n          this.element.style.left = `${newLeft}px`;\r\n          this.element.style.width = `${newWidth}px`;\r\n        }\r\n        this.finalWidth = newWidth;\r\n      }\r\n    } else {\r\n      console.log('still mouse move listening...');\r\n    }\r\n  }\r\n\r\n  handleMouseUp() {\r\n    if (this.isDragging) {\r\n      if (this.resizeSide === 'move') {\r\n        // console.log(\"Initial X::\"+this.dragInitPos.x);\r\n        // console.log(\"Initial Y::\"+this.dragInitPos.y);\r\n        // console.log(\"End X::\"+this.dragEndPos.x);\r\n        // console.log(\"End Y::\"+this.dragEndPos.y);\r\n        if (this.isTouchStart) {\r\n          this.moveDiffereneX = Math.abs(this.dragEndPos.x - this.dragInitPos.x);\r\n          this.moveDiffereneY = Math.abs(this.dragEndPos.y - this.dragInitPos.y);\r\n        }\r\n        this.dragOverEventData.emit({\r\n          id: 'DRAG_OVER_END',\r\n          data: {\r\n            ...this.dragEndPos,\r\n            pool: this.bookingEvent.POOL,\r\n            nbOfDays: this.bookingEvent.NO_OF_DAYS,\r\n          },\r\n        });\r\n      } else {\r\n        let numberOfDays = Math.round(this.finalWidth / this.dayWidth);\r\n        let initialStayDays = this.getStayDays();\r\n        if (initialStayDays != numberOfDays) {\r\n          this.setStayDays(numberOfDays);\r\n          if (this.resizeSide == 'leftSide') {\r\n            this.element.style.left = `${this.initialLeft + (initialStayDays - numberOfDays) * this.dayWidth}px`;\r\n            // set FROM_DATE = TO_DATE - numberOfDays\r\n          } else {\r\n            // set TO_DATE = FROM_DATE + numberOfDays\r\n          }\r\n          this.dragOverEventData.emit({\r\n            id: 'STRETCH_OVER_END',\r\n            data: {\r\n              id: this.getBookingId(),\r\n              fromRoomId: +this.getBookedRoomId(),\r\n              x: +this.element.style.left.replace('px', ''),\r\n              y: +this.element.style.top.replace('px', ''),\r\n              pool: this.bookingEvent.POOL,\r\n              nbOfDays: this.bookingEvent.NO_OF_DAYS,\r\n            },\r\n          });\r\n          this.element.style.width = `${numberOfDays * this.dayWidth - this.eventSpace}px`;\r\n        } else {\r\n          this.element.style.left = `${this.initialLeft}px`;\r\n          this.element.style.width = `${numberOfDays * this.dayWidth - this.eventSpace}px`;\r\n        }\r\n      }\r\n    } else {\r\n      console.log('still mouse up listening...');\r\n    }\r\n    this.isDragging = false;\r\n    document.removeEventListener('mousemove', this.handleMouseMoveBind);\r\n    document.removeEventListener('touchmove', this.handleMouseMoveBind);\r\n    document.removeEventListener('pointermove', this.handleMouseMoveBind);\r\n\r\n    document.removeEventListener('mouseup', this.handleMouseUpBind);\r\n    document.removeEventListener('touchup', this.handleMouseUpBind);\r\n    document.removeEventListener('pointerup', this.handleMouseUpBind);\r\n  }\r\n\r\n  updateData(data: any) {\r\n    this.updateEventData.emit(data);\r\n  }\r\n\r\n  showEventInfo(showInfo) {\r\n    if (this.isHighlightEventType() || this.bookingEvent.hideBubble) {\r\n      return null;\r\n    }\r\n\r\n    if (showInfo) {\r\n      // Calculate which side we need to show the bubble, top side or bottom.\r\n      let bodyContainer = document.querySelector('.calendarScrollContainer');\r\n      let bodyContainerRect: { [key: string]: any } = bodyContainer.getBoundingClientRect();\r\n      let elementRect: { [key: string]: any } = this.element.getBoundingClientRect();\r\n      let midPoint = bodyContainerRect.height / 2 + bodyContainerRect.top;\r\n      // let topDifference = elementRect.top - bodyContainerRect.top;\r\n      // let bottomDifference = bodyContainerRect.bottom - elementRect.bottom;\r\n\r\n      if (elementRect.top < midPoint) {\r\n        this.bubbleInfoTopSide = false;\r\n      } else {\r\n        this.bubbleInfoTopSide = true;\r\n      }\r\n    }\r\n\r\n    // showInfo = true;\r\n    if (showInfo) {\r\n      this.hideBubbleInfo.emit({\r\n        key: 'hidePopup',\r\n        currentInfoBubbleId: this.getBookingId(),\r\n      });\r\n    }\r\n    this.showInfoPopup = showInfo;\r\n    this.renderAgain();\r\n  }\r\n\r\n  render() {\r\n    // onMouseLeave={()=>this.showEventInfo(false)}\r\n    let legend = this.getEventLegend();\r\n    let noteNode = this.getNoteNode();\r\n    let balanceNode = this.getBalanceNode();\r\n\r\n    return (\r\n      <Host\r\n        class={`bookingEvent ${this.isNewEvent() || this.isHighlightEventType() ? 'newEvent' : ''} ${legend.clsName}`}\r\n        style={this.getPosition()}\r\n        id={'event_' + this.getBookingId()}\r\n      >\r\n        {/* onMouseOver={() =>this.showEventInfo(true)}  */}\r\n        <div\r\n          class={`bookingEventBase  ${this.isSplitBooking() ? 'splitBooking' : ''}`}\r\n          style={{ backgroundColor: legend.color }}\r\n          onTouchStart={event => this.startDragging(event, 'move')}\r\n          onMouseDown={event => this.startDragging(event, 'move')}\r\n        ></div>\r\n        {noteNode ? <div class=\"legend_circle noteIcon\" style={{ backgroundColor: noteNode.color }}></div> : null}\r\n        {balanceNode ? <div class=\"legend_circle balanceIcon\" style={{ backgroundColor: balanceNode.color }}></div> : null}\r\n        {/* onMouseOver={() => this.showEventInfo(true)}  */}\r\n        <div class=\"bookingEventTitle\" onTouchStart={event => this.startDragging(event, 'move')} onMouseDown={event => this.startDragging(event, 'move')}>\r\n          {this.getBookedBy()}\r\n        </div>\r\n        <div\r\n          class=\"bookingEventDragHandle leftSide\"\r\n          onTouchStart={event => this.startDragging(event, 'leftSide')}\r\n          onMouseDown={event => this.startDragging(event, 'leftSide')}\r\n        ></div>\r\n        <div\r\n          class=\"bookingEventDragHandle rightSide\"\r\n          onTouchStart={event => this.startDragging(event, 'rightSide')}\r\n          onMouseDown={event => this.startDragging(event, 'rightSide')}\r\n        ></div>\r\n        {this.showInfoPopup ? (\r\n          <igl-booking-event-hover\r\n            is_vacation_rental={this.is_vacation_rental}\r\n            countryNodeList={this.countryNodeList}\r\n            currency={this.currency}\r\n            class=\"top\"\r\n            bookingEvent={this.bookingEvent}\r\n            bubbleInfoTop={this.bubbleInfoTopSide}\r\n          ></igl-booking-event-hover>\r\n        ) : null}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: block;\r\n  position: relative;\r\n  z-index: 100;\r\n}\r\n\r\n.btn {\r\n  padding-left: 4px !important;\r\n  padding-right: 4px !important;\r\n}\r\n\r\n.pointerContainer {\r\n  position: absolute;\r\n  left: 50%;\r\n  height: 10px;\r\n  width: 350px;\r\n  transform: translate(-50%, 0);\r\n}\r\n\r\n.pointerContainerTop {\r\n  top: -26px;\r\n}\r\n\r\n.iglPopOver {\r\n  max-width: 350px;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  border: 1px solid #656ee7;\r\n  border-radius: 6px;\r\n  position: absolute;\r\n  transform: translate(-50%, 10px);\r\n  left: 50%;\r\n  box-shadow: 1px 0px 20px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.iglPopOver.infoBubble {\r\n  width: 350px;\r\n}\r\n\r\n.iglPopOver.blockedView {\r\n  max-width: 400px;\r\n  width: 400px;\r\n}\r\n\r\n.iglPopOver.newBookingOptions {\r\n  width: 230px;\r\n}\r\n\r\n.bubblePointer {\r\n  position: absolute;\r\n  width: 0;\r\n  height: 0;\r\n  left: 50%;\r\n  border-left: 10px solid transparent;\r\n  border-right: 10px solid transparent;\r\n  transform: translate(-50%, 0px);\r\n}\r\n\r\n.bubblePointTop {\r\n  border-top: 10px solid #656ee7;\r\n}\r\n\r\n.bubblePointBottom {\r\n  border-bottom: 10px solid #656ee7;\r\n}\r\n\r\n.bubbleInfoAbove {\r\n  bottom: 35px;\r\n}\r\n\r\n.updateBtnIcon {\r\n  margin-right: 4px;\r\n}\r\n.icon-image {\r\n  margin-right: 5px;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State } from '@stencil/core';\r\nimport { findCountry, getCurrencySymbol } from '../../../utils/utils';\r\nimport { ICountry } from '../../../models/IBooking';\r\nimport { EventsService } from '../../../services/events.service';\r\nimport { transformNewBLockedRooms } from '../../../utils/booking';\r\n\r\n@Component({\r\n  tag: 'igl-booking-event-hover',\r\n  styleUrl: 'igl-booking-event-hover.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingEventHover {\r\n  @Prop({ mutable: true }) bookingEvent: { [key: string]: any };\r\n  @Prop() bubbleInfoTop: boolean = false;\r\n  @Prop() currency;\r\n  @Prop() countryNodeList: ICountry[];\r\n  @Prop() is_vacation_rental: boolean = false;\r\n  @State() isLoading: string;\r\n  @Event() showBookingPopup: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) hideBubbleInfo: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) deleteButton: EventEmitter<string>;\r\n  @Event() bookingCreated: EventEmitter<{ pool?: string; data: any[] }>;\r\n  private fromTimeStamp: number;\r\n  private toTimeStamp: number;\r\n  private todayTimeStamp: number = new Date().setHours(0, 0, 0, 0);\r\n  private eventService = new EventsService();\r\n  getBookingId() {\r\n    return this.bookingEvent.ID;\r\n  }\r\n\r\n  getTotalOccupants() {\r\n    return this.bookingEvent.ADULTS_COUNT;\r\n  }\r\n\r\n  getPhoneNumber() {\r\n    return this.bookingEvent.PHONE;\r\n  }\r\n\r\n  getCountry() {\r\n    return findCountry(this.bookingEvent.COUNTRY, this.countryNodeList).name;\r\n  }\r\n  getPhoneCode() {\r\n    return findCountry(this.bookingEvent.COUNTRY, this.countryNodeList).phone_prefix;\r\n  }\r\n  renderPhone() {\r\n    return this.bookingEvent.COUNTRY ? `${this.bookingEvent.is_direct ? this.getPhoneCode() + '-' : ''}${this.getPhoneNumber()} - ${this.getCountry()}` : this.getPhoneNumber();\r\n  }\r\n\r\n  getGuestNote() {\r\n    return this.bookingEvent.NOTES;\r\n  }\r\n\r\n  getInternalNote() {\r\n    return this.bookingEvent.INTERNAL_NOTE;\r\n  }\r\n\r\n  getTotalPrice() {\r\n    return this.bookingEvent.TOTAL_PRICE;\r\n  }\r\n\r\n  getCheckInDate() {\r\n    return this.bookingEvent.FROM_DATE_STR;\r\n  }\r\n\r\n  getCheckOutDate() {\r\n    return this.bookingEvent.TO_DATE_STR;\r\n  }\r\n\r\n  getArrivalTime() {\r\n    return this.bookingEvent.ARRIVAL_TIME;\r\n  }\r\n\r\n  getRatePlan() {\r\n    return this.bookingEvent.RATE_PLAN;\r\n  }\r\n\r\n  getEntryDate() {\r\n    return this.bookingEvent.ENTRY_DATE;\r\n  }\r\n\r\n  getReleaseAfterHours() {\r\n    return this.bookingEvent.RELEASE_AFTER_HOURS;\r\n  }\r\n\r\n  isNewBooking() {\r\n    return this.getBookingId() === 'NEW_TEMP_EVENT';\r\n  }\r\n\r\n  isCheckedIn() {\r\n    return this.bookingEvent.STATUS === 'CHECKED-IN';\r\n  }\r\n\r\n  isCheckedOut() {\r\n    return this.bookingEvent.STATUS === 'CHECKED-OUT';\r\n  }\r\n\r\n  isBlockedDateEvent() {\r\n    return this.bookingEvent.STATUS === 'BLOCKED' || this.bookingEvent.STATUS === 'BLOCKED-WITH-DATES';\r\n  }\r\n\r\n  getRoomId() {\r\n    return this.bookingEvent.PR_ID;\r\n  }\r\n\r\n  getCategoryByRoomId(roomId) {\r\n    // console.log(\"room id \",roomId)\r\n    // console.log(\"booking event\",this.bookingEvent)\r\n    return this.bookingEvent.roomsInfo.find(roomCategory => roomCategory.physicalrooms.find(room => room.id === roomId));\r\n  }\r\n\r\n  hasSplitBooking() {\r\n    return this.bookingEvent.hasOwnProperty('splitBookingEvents') && this.bookingEvent.splitBookingEvents.length;\r\n  }\r\n\r\n  canCheckIn() {\r\n    if (!this.fromTimeStamp) {\r\n      let dt = new Date(this.getCheckInDate());\r\n      dt.setHours(0, 0, 0, 0);\r\n      this.fromTimeStamp = dt.getTime();\r\n    }\r\n    if (!this.toTimeStamp) {\r\n      let dt = new Date(this.getCheckOutDate());\r\n      dt.setHours(0, 0, 0, 0);\r\n      this.toTimeStamp = dt.getTime();\r\n    }\r\n    if (this.isCheckedIn() || this.isCheckedOut()) {\r\n      return false;\r\n    }\r\n    if (this.fromTimeStamp <= this.todayTimeStamp && this.todayTimeStamp <= this.toTimeStamp) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  canCheckOut() {\r\n    if (this.isCheckedIn() && this.todayTimeStamp <= this.toTimeStamp) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  handleBlockDateUpdate(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.bookingEvent = { ...this.bookingEvent, ...opt.data };\r\n    //console.log(\"blocked date booking event\", this.bookingEvent);\r\n  }\r\n\r\n  handleEditBooking() {\r\n    // console.log(\"Edit booking\");\r\n    this.bookingEvent.TITLE = 'Edit Room';\r\n    this.handleBookingOption('EDIT_BOOKING');\r\n  }\r\n\r\n  getStringDateFormat(dt) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n\r\n  handleAddRoom() {\r\n    let fromDate = new Date();\r\n    fromDate.setHours(0, 0, 0, 0);\r\n    let from_date_str = this.getStringDateFormat(fromDate);\r\n\r\n    let toDate = new Date();\r\n    toDate.setDate(toDate.getDate() + 1);\r\n    toDate.setHours(0, 0, 0, 0);\r\n    let to_date_str = this.getStringDateFormat(toDate);\r\n\r\n    let eventData = {\r\n      ID: '',\r\n      NAME: '',\r\n      FROM_DATE: from_date_str, // \"2023-07-09\",\r\n      TO_DATE: to_date_str, // \"2023-07-11\",\r\n      roomsInfo: this.bookingEvent.roomsInfo,\r\n      ADD_ROOM_TO_BOOKING: this.bookingEvent.ID,\r\n      TITLE: 'Add Room to #' + this.bookingEvent.ID + ' - ' + this.bookingEvent.NAME,\r\n      event_type: 'ADD_ROOM',\r\n      defaultDateRange: {\r\n        fromDate: fromDate, //new Date(\"2023-09-10\"),\r\n        fromDateStr: '', //\"10 Sep 2023\",\r\n        toDate: toDate, //new Date(\"2023-09-15\"),\r\n        toDateStr: '', // \"15 Sep 2023\",\r\n        dateDifference: 0,\r\n        editabled: true,\r\n        message: 'Including 5.00% City Tax - Excluding 11.00% VAT',\r\n      },\r\n    };\r\n\r\n    this.handleBookingOption('ADD_ROOM', eventData);\r\n  }\r\n\r\n  handleCustomerCheckIn() {\r\n    console.log('Handle Customer Check In');\r\n  }\r\n\r\n  handleCustomerCheckOut() {\r\n    console.log('Handle Customer Check Out');\r\n  }\r\n  handleDeleteEvent() {\r\n    this.deleteButton.emit(this.bookingEvent.POOL);\r\n    console.log('Delete Event');\r\n  }\r\n\r\n  async handleUpdateBlockedDates() {\r\n    try {\r\n      this.isLoading = 'update';\r\n      const result = await this.eventService.updateBlockedEvent(this.bookingEvent);\r\n      const blockedUnit = await transformNewBLockedRooms(result);\r\n      this.bookingCreated.emit({ pool: this.bookingEvent.POOL, data: [blockedUnit] });\r\n      this.hideBubbleInfo.emit({\r\n        key: 'hidebubble',\r\n        currentInfoBubbleId: this.getBookingId(),\r\n      });\r\n      this.isLoading = '';\r\n      console.log('Updated blocked dates');\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleConvertBlockedDateToBooking() {\r\n    this.handleBookingOption('BAR_BOOKING');\r\n  }\r\n\r\n  getRoomInfo() {\r\n    const roomIdToFind = +this.bookingEvent.PR_ID;\r\n    let selectedRoom: any = {};\r\n\r\n    for (const room of this.bookingEvent.roomsInfo) {\r\n      for (const physicalRoom of room.physicalrooms) {\r\n        if (roomIdToFind === physicalRoom.id) {\r\n          selectedRoom.CATEGORY = room.name;\r\n          selectedRoom.ROOM_NAME = physicalRoom.name;\r\n          selectedRoom.ROOMS_INFO = room;\r\n          return selectedRoom;\r\n        }\r\n      }\r\n    }\r\n\r\n    return selectedRoom;\r\n  }\r\n  handleBookingOption(eventType, roomData = null) {\r\n    const roomInfo = this.getRoomInfo();\r\n    let data = roomData ? roomData : this.bookingEvent;\r\n    data.event_type = eventType;\r\n    if (['003', '002', '004'].includes(this.bookingEvent.STATUS_CODE)) {\r\n      data.roomsInfo = [roomInfo.ROOMS_INFO];\r\n    }\r\n    this.showBookingPopup.emit({\r\n      key: 'add',\r\n      data: {\r\n        ...data,\r\n        TITLE: `New Booking for ${roomInfo.CATEGORY} ${roomInfo.ROOM_NAME}`,\r\n        //roomsInfo: [roomInfo.ROOMS_INFO],\r\n      },\r\n    });\r\n    this.hideBubbleInfo.emit({\r\n      key: 'hidebubble',\r\n      currentInfoBubbleId: this.getBookingId(),\r\n    });\r\n  }\r\n\r\n  getInfoElement() {\r\n    return (\r\n      <div class={`iglPopOver infoBubble ${this.bubbleInfoTop ? 'bubbleInfoAbove' : ''} text-left`}>\r\n        <div class=\"row p-0 m-0 pb-1\">\r\n          <div class=\"pl-0 col-8 font-weight-bold font-medium-1 d-flex align-items-center\">\r\n            <img src={this.bookingEvent.origin.Icon} alt=\"icon\" class={'icon-image'} />\r\n            <p class={'p-0 m-0'}>{!this.bookingEvent.is_direct ? this.bookingEvent.channel_booking_nbr : this.bookingEvent.BOOKING_NUMBER}</p>\r\n          </div>\r\n          <div class=\"pr-0 col-4 text-right\">\r\n            {getCurrencySymbol(this.currency.code)}\r\n            {this.getTotalPrice()}\r\n          </div>\r\n        </div>\r\n        <div class=\"row p-0 m-0\">\r\n          <div class=\"pl-0 pr-0 col-12\">\r\n            <span class=\"font-weight-bold\">In: </span>\r\n            {this.getCheckInDate()} - <span class=\"font-weight-bold\">Out: </span>\r\n            {this.getCheckOutDate()}\r\n          </div>\r\n        </div>\r\n        {this.getArrivalTime() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12\">\r\n              <span class=\"font-weight-bold\">Arrival time: </span>\r\n              {this.getArrivalTime()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getTotalOccupants() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12\">\r\n              <span class=\"font-weight-bold\">Occupancy: </span>\r\n              {this.getTotalOccupants()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getPhoneNumber() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12 text-wrap\">\r\n              <span class=\"font-weight-bold\">Phone: </span>\r\n              {this.renderPhone()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getRatePlan() && (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"pl-0 pr-0 col-12\">\r\n              <span class=\"font-weight-bold\">Rate plan: </span>\r\n              {this.getRatePlan()}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.getGuestNote() ? (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"col-12 pl-0 pr-0 text-wrap\">\r\n              <sapn class=\"font-weight-bold\">Note: </sapn>\r\n              {this.getGuestNote()}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.getInternalNote() ? (\r\n          <div class=\"row p-0 m-0\">\r\n            <div class=\"col-12 pl-0 pr-0 text-wrap\">\r\n              <span class=\"font-weight-bold\">Internal remark: </span>\r\n              {this.getInternalNote()}\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div class=\"row p-0 m-0 mt-2\">\r\n          <div class=\"full-width btn-group btn-group-sm font-small-3\" role=\"group\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary mr-1\"\r\n              onClick={_ => {\r\n                this.handleEditBooking();\r\n              }}\r\n              disabled={!this.bookingEvent.IS_EDITABLE}\r\n            >\r\n              <i class=\"ft ft-edit font-small-3\"></i> Edit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary mr-1\"\r\n              onClick={_ => {\r\n                this.handleAddRoom();\r\n              }}\r\n              disabled={!this.bookingEvent.IS_EDITABLE}\r\n            >\r\n              <i class=\"ft ft-plus-circle font-small-3\"></i> Add room\r\n            </button>\r\n            {this.canCheckIn() ? (\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary p-0 mr-1\"\r\n                onClick={_ => {\r\n                  this.handleCustomerCheckIn();\r\n                }}\r\n                disabled={!this.bookingEvent.IS_EDITABLE}\r\n              >\r\n                <i class=\"ft ft-edit font-small-3\"></i> Check-in\r\n              </button>\r\n            ) : null}\r\n            {this.canCheckOut() ? (\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary p-0 mr-1\"\r\n                onClick={_ => {\r\n                  this.handleCustomerCheckOut();\r\n                }}\r\n                disabled={!this.bookingEvent.IS_EDITABLE}\r\n              >\r\n                <i class=\"ft ft-log-out font-small-3\"></i> Check-out\r\n              </button>\r\n            ) : null}\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-danger p-0\"\r\n              onClick={_ => {\r\n                this.handleDeleteEvent();\r\n              }}\r\n              disabled={!this.bookingEvent.IS_EDITABLE || this.is_vacation_rental}\r\n            >\r\n              <i class=\"ft ft-trash-2 font-small-3\"></i> Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getNewBookingOptions() {\r\n    return (\r\n      <div class={`iglPopOver newBookingOptions ${this.bubbleInfoTop ? 'bubbleInfoAbove' : ''} text-left`}>\r\n        <button\r\n          type=\"button\"\r\n          class=\"d-block full-width btn btn-sm btn-primary mb-1 font-small-3 square\"\r\n          onClick={_ => {\r\n            this.handleBookingOption('BAR_BOOKING');\r\n          }}\r\n        >\r\n          Create new booking\r\n        </button>\r\n        {this.hasSplitBooking() ? (\r\n          <button\r\n            type=\"button\"\r\n            class=\"d-block full-width btn btn-sm btn-primary mb-1 font-small-3 square\"\r\n            onClick={_ => {\r\n              this.handleBookingOption('SPLIT_BOOKING');\r\n            }}\r\n          >\r\n            Assign unit to existing booking\r\n          </button>\r\n        ) : null}\r\n        <button\r\n          type=\"button\"\r\n          class=\"d-block full-width btn btn-sm btn-primary font-small-3 square\"\r\n          onClick={_ => {\r\n            this.handleBookingOption('BLOCK_DATES');\r\n          }}\r\n        >\r\n          Block dates\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBlockedView() {\r\n    // let defaultData = {RELEASE_AFTER_HOURS: 0, OPTIONAL_REASON: \"\", OUT_OF_SERVICE: false};\r\n    return (\r\n      <div class={`iglPopOver blockedView ${this.bubbleInfoTop ? 'bubbleInfoAbove' : ''} text-left`}>\r\n        <igl-block-dates-view\r\n          isEventHover={true}\r\n          entryHour={this.bookingEvent.ENTRY_HOUR}\r\n          entryMinute={this.bookingEvent.ENTRY_MINUTE}\r\n          defaultData={this.bookingEvent}\r\n          fromDate={this.getCheckInDate()}\r\n          toDate={this.getCheckOutDate()}\r\n          entryDate={this.getEntryDate()}\r\n          onDataUpdateEvent={event => this.handleBlockDateUpdate(event)}\r\n        ></igl-block-dates-view>\r\n        <div class=\"row p-0 m-0 mt-2\">\r\n          <div class=\"full-width btn-group btn-group-sm font-small-3\" role=\"group\">\r\n            <button\r\n              disabled={this.isLoading === 'update'}\r\n              type=\"button\"\r\n              class=\"btn btn-primary mr-1\"\r\n              onClick={_ => {\r\n                this.handleUpdateBlockedDates();\r\n              }}\r\n            >\r\n              {this.isLoading === 'update' ? <i class=\"la la-circle-o-notch spinner mx-1\"></i> : <i class=\"ft ft-edit font-small-3 updateBtnIcon\"></i>}\r\n              Update\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              onClick={_ => {\r\n                this.handleConvertBlockedDateToBooking();\r\n              }}\r\n            >\r\n              Convert to booking\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-danger ml-1\"\r\n              onClick={_ => {\r\n                this.handleDeleteEvent();\r\n              }}\r\n            >\r\n              <i class=\"ft ft-trash-2 font-small-3\"></i> Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class={`pointerContainer ${this.bubbleInfoTop ? 'pointerContainerTop' : ''}`}>\r\n          <div class={`bubblePointer ${this.bubbleInfoTop ? 'bubblePointTop' : 'bubblePointBottom'}`}></div>\r\n        </div>\r\n        {this.isBlockedDateEvent() ? this.getBlockedView() : null}\r\n        {this.isNewBooking() ? this.getNewBookingOptions() : null}\r\n        {!this.isBlockedDateEvent() && !this.isNewBooking() ? this.getInfoElement() : null}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n}\r\n","import { Component, Host, Prop, h, State, Event, EventEmitter, Watch } from '@stencil/core';\r\nimport { v4 } from 'uuid';\r\nimport { getCurrencySymbol } from '../../../utils/utils';\r\n@Component({\r\n  tag: 'igl-booking-room-rate-plan',\r\n  styleUrl: 'igl-booking-room-rate-plan.css',\r\n  scoped: true,\r\n})\r\nexport class IglBookingRoomRatePlan {\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop({ mutable: true }) ratePlanData: { [key: string]: any };\r\n  @Prop() totalAvailableRooms: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency: any;\r\n  @Prop({ reflect: true }) dateDifference: number;\r\n  @Prop() bookingType: string = 'PLUS_BOOKING';\r\n  @State() sourceOption: number;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() gotoSplitPageTwoEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedData: { [key: string]: any };\r\n  @State() plan: { [key: string]: any };\r\n  componentWillLoad() {\r\n    this.selectedData = {\r\n      ratePlanId: this.ratePlanData.id,\r\n      adult_child_offering: this.ratePlanData.variations[0].adult_child_offering,\r\n      rateType: 1,\r\n      totalRooms: 0,\r\n      rate: this.ratePlanData.variations[0].amount,\r\n      ratePlanName: this.ratePlanData.name,\r\n      adultCount: this.ratePlanData.variations[0].adult_nbr,\r\n      childrenCount: this.ratePlanData.variations[0].child_nbr,\r\n      cancelation: this.ratePlanData.cancelation,\r\n      guarantee: this.ratePlanData.guarantee,\r\n      isRateModified: false,\r\n      defaultSelectedRate: 0,\r\n    };\r\n    if (this.defaultData) {\r\n      for (const [key, value] of Object.entries(this.defaultData)) {\r\n        this.selectedData[key] = value;\r\n      }\r\n    }\r\n  }\r\n\r\n  getSelectedOffering(value: any) {\r\n    return this.ratePlanData.variations.find(variation => variation.adult_child_offering === value);\r\n  }\r\n  @Watch('ratePlanData')\r\n  async ratePlanDataChanged() {\r\n    this.selectedData = {\r\n      ...this.selectedData,\r\n      rate: this.handleRateDaysUpdate(),\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: 'rate',\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  handleRateDaysUpdate() {\r\n    let rate = this.selectedData.defaultSelectedRate;\r\n    if (this.selectedData.isRateModified) {\r\n      return this.selectedData.rateType === 1 ? rate * this.dateDifference : rate;\r\n    }\r\n    return this.getSelectedOffering(this.selectedData.adult_child_offering).amount;\r\n  }\r\n\r\n  handleInput(event: InputEvent) {\r\n    this.selectedData.isRateModified = true;\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let inputValue = inputElement.value;\r\n    const numericRegex = /^[0-9]+$/;\r\n    if (!numericRegex.test(inputValue)) {\r\n      inputValue = inputValue.replace(/[^0-9]/g, '');\r\n      inputElement.value = inputValue;\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange('rate', event);\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, evt) {\r\n    if (key === 'adult_child_offering') {\r\n      const offering = this.getSelectedOffering(evt.target.value);\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        [key]: evt.target.value,\r\n        adultCount: offering.adult_nbr,\r\n        childrenCount: offering.child_nbr,\r\n        rate: offering.amount,\r\n      };\r\n    } else {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        [key]: evt.target.value === '' ? 0 : parseInt(evt.target.value),\r\n      };\r\n    }\r\n    if (key === 'rate' && evt.target.value === '') {\r\n      this.selectedData = {\r\n        ...this.selectedData,\r\n        totalRooms: 0,\r\n      };\r\n    }\r\n    if (key === 'rate') {\r\n      this.selectedData.defaultSelectedRate = this.selectedData.rateType === 1 ? parseInt(evt.target.value) / this.dateDifference : parseInt(evt.target.value);\r\n    }\r\n    this.dataUpdateEvent.emit({\r\n      key: 'roomRatePlanUpdate',\r\n      changedKey: key,\r\n      data: this.selectedData,\r\n    });\r\n  }\r\n\r\n  bookProperty() {\r\n    this.dataUpdateEvent.emit({ key: 'clearData', data: this.selectedData });\r\n    this.handleDataChange('totalRooms', { target: { value: '1' } });\r\n    this.gotoSplitPageTwoEvent.emit({ key: 'gotoSplitPage', data: '' });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"row m-0 p-0\">\r\n          <div class=\"col-md-6 col-sm-12 p-0 align-self-center\">\r\n            <span>{this.ratePlanData.name}</span>\r\n            <ir-tooltip message={this.ratePlanData.cancelation + this.ratePlanData.guarantee}></ir-tooltip>\r\n          </div>\r\n          <div class=\"col-md-6 col-sm-12 row pr-0\">\r\n            <div class=\"col-4\">\r\n              <fieldset class=\"position-relative\">\r\n                <select class=\"form-control input-sm\" id={v4()} onChange={evt => this.handleDataChange('adult_child_offering', evt)}>\r\n                  {this.ratePlanData.variations.map(variation => (\r\n                    <option value={variation.adult_child_offering} selected={this.selectedData.adult_child_offering === variation.adult_child_offering}>\r\n                      {variation.adult_child_offering}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n            <div class=\"row col-6 m-0 p-0\">\r\n              <fieldset class=\"position-relative has-icon-left col-6 m-0 p-0\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control input-sm\"\r\n                  value={this.selectedData.rateType === 1 ? this.selectedData.rate : this.selectedData.rate / this.dateDifference}\r\n                  id={v4()}\r\n                  placeholder=\"Rate\"\r\n                  onInput={(event: InputEvent) => this.handleInput(event)}\r\n                />\r\n                <span class=\"form-control-position\">{getCurrencySymbol(this.currency.code)}</span>\r\n              </fieldset>\r\n              <fieldset class=\"position-relative m-0 p-0\">\r\n                <select class=\"form-control input-sm\" id={v4()} onChange={evt => this.handleDataChange('rateType', evt)}>\r\n                  {this.ratePricingMode.map(data => (\r\n                    <option value={data.CODE_NAME} selected={this.selectedData.rateType === +data.CODE_NAME}>\r\n                      {data.CODE_VALUE_EN}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </fieldset>\r\n            </div>\r\n\r\n            {this.bookingType === 'PLUS_BOOKING' || this.bookingType === 'ADD_ROOM' ? (\r\n              <div class=\"col-2 m-0 p-0\">\r\n                <fieldset class=\"position-relative\">\r\n                  <select disabled={this.selectedData.rate === 0} class=\"form-control input-sm\" id={v4()} onChange={evt => this.handleDataChange('totalRooms', evt)}>\r\n                    {Array.from({ length: this.totalAvailableRooms + 1 }, (_, i) => i).map(i => (\r\n                      <option value={i} selected={this.selectedData.totalRooms === i}>\r\n                        {i}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </fieldset>\r\n              </div>\r\n            ) : null}\r\n\r\n            {this.bookingType === 'EDIT_BOOKING' ? (\r\n              <div class=\"col-2 m-0 p-0 align-self-center\">\r\n                <fieldset class=\"position-relative\">\r\n                  <input type=\"radio\" name=\"ratePlanGroup\" value=\"1\" onChange={evt => this.handleDataChange('totalRooms', evt)} checked={this.selectedData.totalRooms === 1} />\r\n                </fieldset>\r\n              </div>\r\n            ) : null}\r\n\r\n            {this.bookingType === 'BAR_BOOKING' || this.bookingType === 'SPLIT_BOOKING' ? (\r\n              <button disabled={this.selectedData.rate === 0} type=\"button\" class=\"btn mb-1 btn-primary btn-sm\" onClick={() => this.bookProperty()}>\r\n                Book\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  h,\r\n  Prop,\r\n  Event,\r\n  EventEmitter,\r\n  State,\r\n} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-booking-rooms\",\r\n  styleUrl: \"igl-booking-rooms.css\",\r\n  scoped: true,\r\n})\r\nexport class IglBookingRooms {\r\n  @Prop({ reflect: true, mutable: true }) roomTypeData: { [key: string]: any };\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Prop() bookingType: string = \"PLUS_BOOKING\";\r\n  @Prop({ reflect: true }) dateDifference: number;\r\n  @Prop() ratePricingMode = [];\r\n  @Prop() currency;\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() selectedRooms: number[] = [];\r\n  @State() roomsDistributions: number[] = [];\r\n  private validBookingTypes = [\"PLUS_BOOKING\", \"ADD_ROOM\", \"EDIT_BOOKING\"];\r\n  private totalRooms: number;\r\n  componentWillLoad() {\r\n    this.totalRooms = this.roomTypeData.physicalrooms.length;\r\n    this.selectedRooms = new Array(this.totalRooms).fill(0);\r\n    this.roomsDistributions = new Array(this.totalRooms).fill(this.totalRooms);\r\n  }\r\n\r\n  onRoomDataUpdate(event: CustomEvent<{ [key: string]: any }>, index: number) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    const opt: { [key: string]: any } = event.detail;\r\n    let data = { ...opt.data };\r\n    if (opt.changedKey === \"totalRooms\") {\r\n      let newValue = data.totalRooms;\r\n      this.selectedRooms[index] = newValue;\r\n      this.updateRatePlanTotalRooms(index);\r\n    }\r\n    data.roomCategoryId = this.roomTypeData.id;\r\n    data.roomCategoryName = this.roomTypeData.name;\r\n    data.inventory = this.roomTypeData.inventory;\r\n    this.dataUpdateEvent.emit({\r\n      key: opt.key,\r\n      data: data,\r\n      changedKey: opt.changedKey,\r\n    });\r\n  }\r\n  updateRatePlanTotalRooms(ratePlanIndex: number) {\r\n    const calculateTotalSelectedRoomsExcludingIndex = (excludedIndex) => {\r\n      return this.selectedRooms.reduce(\r\n        (acc, rooms, idx) => (idx !== excludedIndex ? acc + rooms : acc),\r\n        0\r\n      );\r\n    };\r\n    this.roomsDistributions = this.roomsDistributions.map((ratePlan, index) => {\r\n      if (index === ratePlanIndex) {\r\n        return ratePlan;\r\n      }\r\n      const totalSelectedRoomsExcludingCurrent =\r\n        calculateTotalSelectedRoomsExcludingIndex(index);\r\n      const availableRooms =\r\n        this.totalRooms - totalSelectedRoomsExcludingCurrent;\r\n\r\n      return availableRooms > 0 ? availableRooms : 0;\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.validBookingTypes.includes(this.bookingType) && (\r\n          <div class=\"font-weight-bold font-medium-1\">\r\n            {this.roomTypeData.name}\r\n          </div>\r\n        )}\r\n        {this.roomTypeData.rateplans.map((ratePlan, index) => {\r\n          if (ratePlan.variations !== null) {\r\n            return (\r\n              <igl-booking-room-rate-plan\r\n                ratePricingMode={this.ratePricingMode}\r\n                class={\r\n                  this.validBookingTypes.includes(this.bookingType)\r\n                    ? \"ml-1\"\r\n                    : \"\"\r\n                }\r\n                currency={this.currency}\r\n                dateDifference={this.dateDifference}\r\n                ratePlanData={ratePlan}\r\n                totalAvailableRooms={this.roomsDistributions[index]}\r\n                bookingType={this.bookingType}\r\n                defaultData={\r\n                  (this.defaultData && this.defaultData[\"p_\" + ratePlan.id]) ||\r\n                  null\r\n                }\r\n                onDataUpdateEvent={(evt) => this.onRoomDataUpdate(evt, index)}\r\n              ></igl-booking-room-rate-plan>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        })}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.bodyContainer {\r\n  position: relative;\r\n}\r\n\r\n.roomRow {\r\n  width: max-content;\r\n}\r\n\r\n.roomRow:first-child {\r\n  margin-top: 80px;\r\n}\r\n.categoryName {\r\n  font-weight: bold;\r\n}\r\n\r\n\r\n.cellData {\r\n  width: 70px;\r\n  height: 30px;\r\n  display: inline-grid;\r\n  border-top: 1px solid #e0e0e0;\r\n  border-left: 1px solid #e0e0e0;\r\n  vertical-align: top;\r\n  padding-left: 15px;\r\n}\r\n\r\n.cellData:nth-child(2) {\r\n  border-left: 0px;\r\n}\r\n\r\n.cellData:last-child {\r\n  border-right: 1px solid #e0e0e0;\r\n}\r\n\r\n.roomHeaderCell {\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  left: 0;\r\n  background: #fff;\r\n  border-right: 1px solid #ccc;\r\n  width: 170px;\r\n  z-index: 1;\r\n}\r\n\r\n.currentDay {\r\n  background-color: #e3f3fa;\r\n}\r\n\r\n.dragOverHighlight {\r\n  background-color: #f5f5dc !important;\r\n}\r\n\r\n.selectedDay {\r\n  background-color: #f9f9c9 !important;\r\n}\r\n\r\n.categoryTitle {\r\n  grid-template-columns: 1fr 20px;\r\n  padding-left: 10px;\r\n  cursor: pointer;\r\n  height: 40px;\r\n  font-size: 0.9em;\r\n}\r\n.categoryTitle > :nth-child(1) {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.roomTitle {\r\n  padding-left: 20px;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.roomTitle > :nth-child(1) {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.roomTitle.pl10 {\r\n  padding-left: 10px;\r\n}\r\n\r\n.categoryPriceColumn {\r\n  font-size: 0.75em;\r\n  align-items: center;\r\n  height: 40px;\r\n}\r\n\r\n/* BOOKING EVENT */\r\n.bookingEventsContainer {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n","import { Component, Host, Listen, Prop, State, h, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-cal-body',\r\n  styleUrl: 'igl-cal-body.css',\r\n  scoped: true,\r\n})\r\nexport class IglCalBody {\r\n  @Event() showBookingPopup: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) scrollPageToRoom: EventEmitter;\r\n  @Prop() isScrollViewDragging: boolean;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() today: String;\r\n  @Prop() currency;\r\n  @Prop() countryNodeList;\r\n  @State() dragOverElement: string = '';\r\n  @State() renderAgain: boolean = false;\r\n  @Event() addBookingDatasEvent: EventEmitter<any[]>;\r\n  private selectedRooms: { [key: string]: any } = {};\r\n  private fromRoomId: number = -1;\r\n  private newEvent: { [key: string]: any };\r\n  private currentDate = new Date();\r\n\r\n  componentWillLoad() {\r\n    this.currentDate.setHours(0, 0, 0, 0);\r\n  }\r\n\r\n  @Listen('dragOverHighlightElement', { target: 'window' })\r\n  dragOverHighlightElementHandler(event: CustomEvent) {\r\n    this.dragOverElement = event.detail.dragOverElement;\r\n  }\r\n\r\n  @Listen('gotoRoomEvent', { target: 'window' })\r\n  gotoRoom(event: CustomEvent) {\r\n    let roomId = event.detail.roomId;\r\n    let category = this.getRoomCategoryByRoomId(roomId);\r\n    if (!category.expanded) {\r\n      this.toggleCategory(category);\r\n      setTimeout(() => {\r\n        this.scrollToRoom(roomId);\r\n      }, 10);\r\n    } else {\r\n      this.scrollToRoom(roomId);\r\n    }\r\n  }\r\n\r\n  @Listen('addToBeAssignedEvent', { target: 'window' })\r\n  addToBeAssignedEvents(event: CustomEvent) {\r\n    // let roomId = event.detail.roomId;\r\n    this.addBookingDatas(event.detail.data);\r\n    this.renderElement();\r\n  }\r\n\r\n  scrollToRoom(roomId) {\r\n    this.scrollPageToRoom.emit({\r\n      key: 'scrollPageToRoom',\r\n      id: roomId,\r\n      refClass: 'room_' + roomId,\r\n    });\r\n  }\r\n\r\n  getRoomCategoryByRoomId(roomId) {\r\n    return this.calendarData.roomsInfo.find(roomCategory => {\r\n      return this.getCategoryRooms(roomCategory).find(room => this.getRoomId(room) === roomId);\r\n    });\r\n  }\r\n\r\n  getCategoryName(roomCategory) {\r\n    return roomCategory.name;\r\n  }\r\n\r\n  getCategoryId(roomCategory) {\r\n    return roomCategory.id;\r\n  }\r\n\r\n  getTotalPhysicalRooms(roomCategory) {\r\n    return this.getCategoryRooms(roomCategory).length;\r\n  }\r\n\r\n  getCategoryRooms(roomCategory) {\r\n    return (roomCategory && roomCategory.physicalrooms) || [];\r\n  }\r\n\r\n  getRoomName(roomInfo) {\r\n    return roomInfo.name;\r\n  }\r\n\r\n  getRoomId(roomInfo) {\r\n    return roomInfo.id;\r\n  }\r\n\r\n  getRoomById(physicalRooms, roomId) {\r\n    return physicalRooms.find(physical_room => this.getRoomId(physical_room) === roomId);\r\n  }\r\n\r\n  getBookingData() {\r\n    return this.calendarData.bookingEvents;\r\n  }\r\n\r\n  addBookingDatas(aData) {\r\n    this.addBookingDatasEvent.emit(aData);\r\n  }\r\n\r\n  getSelectedCellRefName(roomId, selectedDay) {\r\n    return 'room_' + roomId + '_' + selectedDay.currentDate;\r\n  }\r\n\r\n  getSplitBookingEvents(newEvent) {\r\n    return this.getBookingData().filter(bookingEvent => newEvent.FROM_DATE === bookingEvent.TO_DATE);\r\n  }\r\n\r\n  @Listen('closeBookingWindow', { target: 'window' })\r\n  closeWindow() {\r\n    let ind = this.getBookingData().findIndex(ev => ev.ID === 'NEW_TEMP_EVENT');\r\n    if (ind !== -1) {\r\n      this.getBookingData().splice(ind, 1);\r\n      console.log('removed item..');\r\n      this.renderElement();\r\n    }\r\n  }\r\n\r\n  addNewEvent(roomCategory) {\r\n    let keys = Object.keys(this.selectedRooms);\r\n    let startDate, endDate;\r\n\r\n    if (this.selectedRooms[keys[0]].currentDate < this.selectedRooms[keys[1]].currentDate) {\r\n      startDate = new Date(this.selectedRooms[keys[0]].currentDate);\r\n      endDate = new Date(this.selectedRooms[keys[1]].currentDate);\r\n    } else {\r\n      startDate = new Date(this.selectedRooms[keys[1]].currentDate);\r\n      endDate = new Date(this.selectedRooms[keys[0]].currentDate);\r\n    }\r\n\r\n    this.newEvent = {\r\n      ID: 'NEW_TEMP_EVENT',\r\n      NAME: <span>&nbsp;</span>,\r\n      EMAIL: '',\r\n      PHONE: '',\r\n      convertBooking: false,\r\n      REFERENCE_TYPE: 'PHONE',\r\n      FROM_DATE: startDate.getFullYear() + '-' + this.getTwoDigitNumStr(startDate.getMonth() + 1) + '-' + this.getTwoDigitNumStr(startDate.getDate()),\r\n      TO_DATE: endDate.getFullYear() + '-' + this.getTwoDigitNumStr(endDate.getMonth() + 1) + '-' + this.getTwoDigitNumStr(endDate.getDate()),\r\n      BALANCE: '',\r\n      NOTES: '',\r\n      RELEASE_AFTER_HOURS: 0,\r\n      PR_ID: this.selectedRooms[keys[0]].roomId,\r\n      ENTRY_DATE: '',\r\n      NO_OF_DAYS: (endDate - startDate) / 86400000,\r\n      ADULTS_COUNT: 1,\r\n      COUNTRY: '',\r\n      INTERNAL_NOTE: '',\r\n      RATE: '',\r\n      TOTAL_PRICE: '',\r\n      RATE_PLAN: '',\r\n      ARRIVAL_TIME: '',\r\n      TITLE: 'New Booking for ',\r\n      roomsInfo: [roomCategory],\r\n      CATEGORY: roomCategory.name,\r\n      event_type: 'BAR_BOOKING',\r\n      STATUS: 'PENDING-CONFIRMATION',\r\n      defaultDateRange: {\r\n        fromDate: null,\r\n        fromDateStr: '',\r\n        toDate: null,\r\n        toDateStr: '',\r\n        dateDifference: (endDate - startDate) / 86400000,\r\n        editable: false,\r\n        message: 'Including 5.00% City Tax - Excluding 11.00% VAT',\r\n      },\r\n    };\r\n\r\n    let popupTitle = roomCategory.name + ' ' + this.getRoomName(this.getRoomById(this.getCategoryRooms(roomCategory), this.selectedRooms[keys[0]].roomId));\r\n    this.newEvent.BLOCK_DATES_TITLE = 'Block Dates for ' + popupTitle;\r\n    this.newEvent.TITLE += popupTitle;\r\n    this.newEvent.defaultDateRange.toDate = new Date(this.newEvent.TO_DATE + 'T00:00:00');\r\n    this.newEvent.defaultDateRange.fromDate = new Date(this.newEvent.FROM_DATE + 'T00:00:00');\r\n    this.newEvent.defaultDateRange.fromDateStr = this.getDateStr(this.newEvent.defaultDateRange.fromDate);\r\n    this.newEvent.defaultDateRange.toDateStr = this.getDateStr(this.newEvent.defaultDateRange.toDate);\r\n    this.newEvent.ENTRY_DATE = new Date().toISOString();\r\n    this.newEvent.legendData = this.calendarData.formattedLegendData;\r\n\r\n    let splitBookingEvents = this.getSplitBookingEvents(this.newEvent);\r\n    if (splitBookingEvents.length) {\r\n      this.newEvent.splitBookingEvents = splitBookingEvents;\r\n    }\r\n\r\n    this.getBookingData().push(this.newEvent);\r\n    return this.newEvent;\r\n  }\r\n\r\n  getTwoDigitNumStr(num) {\r\n    return num <= 9 ? '0' + num : num;\r\n  }\r\n\r\n  getDateStr(date, locale = 'default') {\r\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\r\n  }\r\n\r\n  removeNewEvent() {\r\n    this.calendarData.bookingEvents = this.calendarData.bookingEvents.filter(events => events.ID !== 'NEW_TEMP_EVENT');\r\n    this.newEvent = null;\r\n  }\r\n\r\n  clickCell(roomId, selectedDay, roomCategory) {\r\n    if (!this.isScrollViewDragging && selectedDay.currentDate >= this.currentDate.getTime()) {\r\n      let refKey = this.getSelectedCellRefName(roomId, selectedDay);\r\n      if (this.selectedRooms.hasOwnProperty(refKey)) {\r\n        this.removeNewEvent();\r\n        delete this.selectedRooms[refKey];\r\n        this.renderElement();\r\n        return;\r\n      } else if (Object.keys(this.selectedRooms).length != 1 || this.fromRoomId != roomId) {\r\n        this.removeNewEvent();\r\n        this.selectedRooms = {};\r\n        this.selectedRooms[refKey] = { ...selectedDay, roomId };\r\n        this.fromRoomId = roomId;\r\n        this.renderElement();\r\n      } else {\r\n        // create bar;\r\n        this.selectedRooms[refKey] = { ...selectedDay, roomId };\r\n        this.addNewEvent(roomCategory);\r\n        this.selectedRooms = {};\r\n        this.renderElement();\r\n        this.showNewBookingPopup(this.newEvent);\r\n      }\r\n    }\r\n  }\r\n\r\n  showNewBookingPopup(data) {\r\n    console.log(data);\r\n    // this.showBookingPopup.emit({key: \"add\", data});\r\n  }\r\n\r\n  renderElement() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  getGeneralCategoryDayColumns(addClass: string, isCategory: boolean = false, index: number) {\r\n    return this.calendarData.days.map(dayInfo => (\r\n      <div class={`cellData pl-0 categoryPriceColumn ${addClass + '_' + dayInfo.day} ${dayInfo.day === this.today ? 'currentDay' : ''}`}>\r\n        {isCategory ? (\r\n          <span>\r\n            {dayInfo.rate[index].inventory}\r\n            <br />\r\n            <u>$ {dayInfo.rate[index].rate}</u>\r\n          </span>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  getGeneralRoomDayColumns(roomId: string, roomCategory) {\r\n    // onDragOver={event => this.handleDragOver(event)} onDrop={event => this.handleDrop(event, addClass+\"_\"+dayInfo.day)}\r\n    return this.calendarData.days.map(dayInfo => (\r\n      <div\r\n        class={`cellData pl-0 ${'room_' + roomId + '_' + dayInfo.day} ${dayInfo.day === this.today ? 'currentDay' : ''} ${\r\n          this.dragOverElement === roomId + '_' + dayInfo.day ? 'dragOverHighlight' : ''\r\n        } ${this.selectedRooms.hasOwnProperty(this.getSelectedCellRefName(roomId, dayInfo)) ? 'selectedDay' : ''}`}\r\n        onClick={() => this.clickCell(roomId, dayInfo, roomCategory)}\r\n      ></div>\r\n    ));\r\n  }\r\n\r\n  toggleCategory(roomCategory) {\r\n    roomCategory.expanded = !roomCategory.expanded;\r\n    this.renderElement();\r\n  }\r\n\r\n  getRoomCategoryRow(roomCategory, index) {\r\n    if (this.getTotalPhysicalRooms(roomCategory) <= 1) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div class=\"roomRow\">\r\n        <div\r\n          class={`cellData text-left align-items-center roomHeaderCell categoryTitle ${'category_' + this.getCategoryId(roomCategory)}`}\r\n          onClick={() => this.toggleCategory(roomCategory)}\r\n        >\r\n          <div class={'categoryName'}>{this.getCategoryName(roomCategory)}</div> <i class={`la la-angle-${roomCategory.expanded ? 'down' : 'right'}`}></i>\r\n        </div>\r\n        {this.getGeneralCategoryDayColumns('category_' + this.getCategoryId(roomCategory), true, index)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getRoomsByCategory(roomCategory) {\r\n    // Check accordion is expanded.\r\n    if (!roomCategory.expanded) {\r\n      return [];\r\n    }\r\n\r\n    return this.getCategoryRooms(roomCategory)?.map(room => (\r\n      <div class=\"roomRow\">\r\n        <div\r\n          class={`cellData text-left align-items-center roomHeaderCell  roomTitle ${this.getTotalPhysicalRooms(roomCategory) <= 1 ? 'pl10' : ''} ${'room_' + this.getRoomId(room)}`}\r\n          data-room={this.getRoomId(room)}\r\n        >\r\n          <div>{this.getTotalPhysicalRooms(roomCategory) <= 1 ? this.getCategoryName(roomCategory) : this.getRoomName(room)}</div>\r\n        </div>\r\n        {this.getGeneralRoomDayColumns(this.getRoomId(room), roomCategory)}\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  getRoomRows() {\r\n    return this.calendarData.roomsInfo.map((roomCategory, index) => [this.getRoomCategoryRow(roomCategory, index), this.getRoomsByCategory(roomCategory)]);\r\n  }\r\n\r\n  render() {\r\n    // onDragStart={event => this.handleDragStart(event)} draggable={true}\r\n    return (\r\n      <Host>\r\n        <div class=\"bodyContainer\">\r\n          {this.getRoomRows()}\r\n          <div class=\"bookingEventsContainer preventPageScroll\">\r\n            {this.getBookingData()?.map(bookingEvent => (\r\n              <igl-booking-event\r\n                is_vacation_rental={this.calendarData.is_vacation_rental}\r\n                countryNodeList={this.countryNodeList}\r\n                currency={this.currency}\r\n                data-component-id={bookingEvent.ID}\r\n                bookingEvent={bookingEvent}\r\n                allBookingEvents={this.getBookingData()}\r\n              ></igl-booking-event>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n  position: sticky;\r\n  bottom: 0;\r\n  width: max-content;\r\n  z-index: 3;\r\n}\r\n\r\n.footerCell {\r\n  display: -moz-inline-grid;\r\n  display: -ms-inline-grid;\r\n  display: inline-grid;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  bottom: 0;\r\n  width: 70px;\r\n  height: 40px;\r\n  /* color: #b8b6b7; */\r\n  background: #fff;\r\n  vertical-align: top;\r\n  border-top: 1px solid #e0e0e0;\r\n}\r\n\r\n.bottomLeftCell {\r\n  left: -1px;\r\n  z-index: 2;\r\n  width: 170px;\r\n  text-align: left;\r\n  padding-left: 15px;\r\n  color: #000000;\r\n}\r\n\r\n.footerCell i {\r\n  margin-right: 5px;\r\n}\r\n\r\n.legendBtn {\r\n  color: #41bff3;\r\n  cursor: pointer;\r\n}\r\n\r\n.isOnline i {\r\n  color: #2f9c3f;\r\n  font-weight: bold;\r\n}\r\n\r\n.isOffline i {\r\n  font-weight: bold;\r\n}\r\n\r\n.isOffline {\r\n  color: #a40000;\r\n}\r\n\r\n.dayTitle {\r\n  font-size: 0.8em;\r\n  font-weight: 600;\r\n  display: grid;\r\n\r\n  /* height: 100%;\r\n  \r\n  align-items: center;\r\n  text-align: center;\r\n  width: 100%; */\r\n}\r\n\r\n.currentDay .dayTitle {\r\n  font-weight: bold;\r\n  /* color: #262b31; */\r\n}\r\n\r\n.currentDay {\r\n  background-color: #e3f3fa;\r\n}\r\n\r\n.dayCapacityPercent {\r\n  font-size: 0.75em;\r\n}\r\n\r\n.badge-pill {\r\n  padding-left: 1em;\r\n  padding-right: 1em;\r\n  font-size: 0.7em;\r\n  margin-bottom: 2px;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, h } from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-cal-footer\",\r\n  styleUrl: \"igl-cal-footer.css\",\r\n  scoped: true,\r\n})\r\nexport class IglCalFooter {\r\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() today: String;\r\n  // private isOnline:boolean = false;\r\n\r\n  handleOptionEvent(key, data = \"\") {\r\n    this.optionEvent.emit({ key, data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"footerContainer\">\r\n        <div class=\"footerCell bottomLeftCell align-items-center preventPageScroll\">\r\n          <div\r\n            class=\"legendBtn\"\r\n            onClick={() => this.handleOptionEvent(\"showLegend\")}\r\n          >\r\n            <i class=\"la la-square\"></i>\r\n            <u>Legend</u>\r\n          </div>\r\n          {/* <div class={`${this.isOnline ? 'isOnline' : 'isOffline'}`}>\r\n            <i class=\"la la-share-alt isOffline\"></i><span>{this.isOnline ? \"Connected\": \"Offline\"}</span>\r\n          </div> */}\r\n        </div>\r\n        {this.calendarData.days.map((dayInfo) => (\r\n          <div class=\"footerCell align-items-center\">\r\n            <div\r\n              class={`dayTitle full-height align-items-center ${\r\n                dayInfo.day === this.today ? \"currentDay\" : \"\"\r\n              }`}\r\n            >\r\n              {dayInfo.dayDisplayName}\r\n            </div>\r\n\r\n            {/* <div class=\"dayTitle\">{dayInfo.dayDisplayName}</div>\r\n              <div class=\"dayCapacityPercent\">28.57%</div>\r\n              <div class=\"preventPageScroll\">\r\n                <span class=\"badge badge-primary badge-pill\">\r\n                  {index}\r\n                </span>\r\n              </div> */}\r\n          </div>\r\n        ))}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport { IAvailableRoom, IRoomCategory, IUnassignedDates, InnerRecord } from '../models/tobeassigned';\r\nimport { dateDifference, dateToFormattedString } from '../utils/utils';\r\n\r\nexport class ToBeAssignedService {\r\n  public async getUnassignedDates(propertyid: number, from_date: string, to_date: string) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_UnAssigned_Dates?Ticket=${token}`, {\r\n          propertyid,\r\n          from_date,\r\n          to_date,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return this.convertUnassignedDates(data.My_Result);\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async getUnassignedRooms(propertyid: number, specific_date: string, roomInfo: any, formattedLegendData: any) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Get_Aggregated_UnAssigned_Rooms?Ticket=${token}`, {\r\n          propertyid,\r\n          specific_date,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return this.transformToAssignable(data, roomInfo, formattedLegendData);\r\n      } else {\r\n        throw new Error('Invalid Token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  public async assignUnit(booking_nbr: string, identifier: string, pr_id: number) {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem('token'));\r\n      if (token) {\r\n        const { data } = await axios.post(`/Assign_Exposed_Room?Ticket=${token}`, {\r\n          booking_nbr,\r\n          identifier,\r\n          pr_id,\r\n        });\r\n        if (data.ExceptionMsg !== '') {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        console.log(data);\r\n        return data['My_Result'];\r\n      } else {\r\n        throw new Error('Invalid token');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n  private cleanSpacesAndSpecialChars(str: string) {\r\n    const regex = /[^a-zA-Z0-9]+/g;\r\n    return str.replace(regex, '');\r\n  }\r\n\r\n  private transformToAssignable(data: any, roomInfo, formattedLegendData): IRoomCategory[] {\r\n    const result: IRoomCategory[] = [];\r\n    data.My_Result.forEach((customer: any) => {\r\n      customer.unassigned_rooms.forEach((room: any) => {\r\n        let roomCategory: IRoomCategory = {\r\n          roomTypeName: room.room_type_name,\r\n          ID: room.identifier,\r\n          NAME: room.guest_name,\r\n          identifier: room.identifier,\r\n          FROM_DATE: room.unassigned_date,\r\n          TO_DATE: room.unassigned_date,\r\n          BOOKING_NUMBER: room.book_nbr,\r\n          STATUS: 'IN-HOUSE',\r\n          defaultDateRange: {\r\n            fromDate: undefined,\r\n            toDate: undefined,\r\n            fromDateTimeStamp: 0,\r\n            toDateTimeStamp: 0,\r\n            fromDateStr: '',\r\n            toDateStr: '',\r\n            dateDifference: 0,\r\n          },\r\n          NO_OF_DAYS: 1,\r\n          roomsInfo: roomInfo,\r\n          legendData: formattedLegendData,\r\n          availableRooms: [],\r\n          RT_ID: this.getRoomTypeId(room.room_type_name, roomInfo),\r\n        };\r\n        this.updateAvailableRooms(room, roomCategory, formattedLegendData, roomInfo);\r\n        this.addDefaultDateRange(roomCategory);\r\n        result.push(roomCategory);\r\n      });\r\n    });\r\n    return result;\r\n  }\r\n  addDefaultDateRange(roomCategory: IRoomCategory) {\r\n    roomCategory.defaultDateRange.fromDate = new Date(roomCategory.FROM_DATE + 'T00:00:00');\r\n    roomCategory.defaultDateRange.fromDateStr = dateToFormattedString(roomCategory.defaultDateRange.fromDate);\r\n    roomCategory.defaultDateRange.fromDateTimeStamp = roomCategory.defaultDateRange.fromDate.getTime();\r\n\r\n    roomCategory.defaultDateRange.toDate = new Date(roomCategory.TO_DATE + 'T00:00:00');\r\n    roomCategory.defaultDateRange.toDateStr = dateToFormattedString(roomCategory.defaultDateRange.toDate);\r\n    roomCategory.defaultDateRange.toDateTimeStamp = roomCategory.defaultDateRange.toDate.getTime();\r\n\r\n    roomCategory.defaultDateRange.dateDifference = roomCategory.NO_OF_DAYS;\r\n  }\r\n  private getRoomTypeId(roomName: string, roomInfo: any) {\r\n    return roomInfo.find(room => this.cleanSpacesAndSpecialChars(room.name) === this.cleanSpacesAndSpecialChars(roomName)).id || null;\r\n  }\r\n  private updateAvailableRooms(room: any, roomCategory: IRoomCategory, formattedLegendData, roomsInfo): void {\r\n    const rooms: IAvailableRoom[] = [];\r\n    room.assignable_units.forEach((unit: any) => {\r\n      if (unit.Is_Fully_Available && !unit.Is_Not_Available) {\r\n        const days = dateDifference(unit.from_date, unit.to_date);\r\n        rooms.push({\r\n          RT_ID: roomCategory.RT_ID,\r\n          STATUS: 'PENDING-CONFIRMATION',\r\n          FROM_DATE: unit.from_date,\r\n          roomName: unit.name,\r\n          PR_ID: unit.pr_id,\r\n          TO_DATE: unit.to_date,\r\n          NO_OF_DAYS: days,\r\n          ID: 'NEW_TEMP_EVENT',\r\n          NAME: '',\r\n          NOTES: '',\r\n          BALANCE: '',\r\n          INTERNAL_NOTE: '',\r\n          hideBubble: true,\r\n          legendData: formattedLegendData,\r\n          roomsInfo,\r\n        });\r\n        roomCategory.TO_DATE = unit.to_date;\r\n        roomCategory.NO_OF_DAYS = days;\r\n      }\r\n    });\r\n    roomCategory.availableRooms = rooms;\r\n  }\r\n\r\n  private convertUnassignedDates(dates: IUnassignedDates[]): Record<number, InnerRecord> {\r\n    let convertedDates: Record<number, InnerRecord> = {};\r\n    dates.forEach(date => {\r\n      let newDate = new Date(date.date);\r\n      newDate.setHours(0, 0, 0, 0);\r\n      convertedDates[newDate.getTime()] = {\r\n        categories: {},\r\n        dateStr: date.description,\r\n      };\r\n    });\r\n    return convertedDates;\r\n  }\r\n}\r\n","import moment from 'moment';\r\nimport { ToBeAssignedService } from '../services/toBeAssigned.service';\r\nimport { dateToFormattedString } from './utils';\r\n\r\nexport async function updateCategories(key, calendarData, property_id, unassignedDates) {\r\n  try {\r\n    const toBeAssignedService = new ToBeAssignedService();\r\n    let categorisedRooms = {};\r\n    const result = await toBeAssignedService.getUnassignedRooms(property_id, dateToFormattedString(new Date(+key)), calendarData.roomsInfo, calendarData.formattedLegendData);\r\n    result.forEach(room => {\r\n      if (!categorisedRooms.hasOwnProperty(room.RT_ID)) {\r\n        categorisedRooms[room.RT_ID] = [room];\r\n      } else {\r\n        categorisedRooms[room.RT_ID].push(room);\r\n      }\r\n    });\r\n    unassignedDates[key].categories = categorisedRooms;\r\n  } catch (error) {\r\n    //  toastr.error(error);\r\n  }\r\n}\r\nexport function transformDateFormatWithMoment(dateStr: string) {\r\n  var dateObj = moment(dateStr, 'ddd, DD MMM YYYY');\r\n  return dateObj.format('D_M_YYYY');\r\n}\r\n","@import url('../../../assets/feather/style.min.css');\r\n@import url('../../../assets/fontawesome/css/all.css');\r\n@import url('../../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  height: 100%;\r\n}\r\n.darkGrey {\r\n  background: #ececec;\r\n}\r\n.btn {\r\n  pointer-events: auto;\r\n}\r\n\r\n.stickyCell {\r\n  display: -ms-inline-grid;\r\n  display: -moz-inline-grid;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0px;\r\n  height: 82px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n  z-index: 2;\r\n}\r\n\r\n.headersContainer {\r\n  background-color: #ffffff;\r\n}\r\n\r\n.headerCell {\r\n  display: inline-grid;\r\n  width: 70px;\r\n  height: 60px;\r\n  vertical-align: top;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.datePickerHidden {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  opacity: 0;\r\n}\r\n\r\n.monthsContainer {\r\n  height: 20px;\r\n  background-color: #ffffff;\r\n  margin-bottom: 0.2em;\r\n}\r\n\r\n.monthCell {\r\n  display: inline-grid;\r\n  height: 20px;\r\n  background-color: #ececec;\r\n  border-right: 1px solid #c7c7c7;\r\n  vertical-align: top;\r\n}\r\n\r\n.monthCell:nth-child(odd) {\r\n  background-color: #dddddd;\r\n}\r\n\r\n.monthTitle {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-size: 0.9em;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n}\r\n\r\n.topLeftCell {\r\n  left: 0px;\r\n  z-index: 3;\r\n  width: 170px;\r\n  background-color: #ffffff;\r\n  display: inline-grid;\r\n  display: -ms-inline-grid;\r\n  display: -moz-inline-grid;\r\n}\r\n\r\n.caledarBtns {\r\n  position: relative;\r\n  cursor: pointer;\r\n  font-size: 1.75em;\r\n  line-height: 1em;\r\n  padding: 0.4rem;\r\n}\r\n\r\n.caledarBtns .la {\r\n  font-size: 1.1em;\r\n}\r\n\r\n.caledarBtns:hover {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n.dayTitle {\r\n  font-size: 0.8em;\r\n  font-weight: 600;\r\n}\r\n\r\n.currentDay .dayTitle {\r\n  font-weight: bold;\r\n}\r\n\r\n.currentDay {\r\n  background-color: #e3f3fa;\r\n}\r\n\r\n.dayCapacityPercent {\r\n  font-size: 0.75em;\r\n}\r\n\r\n.badge-pill {\r\n  padding: 3px 1em;\r\n  font-size: 0.8em;\r\n}\r\n\r\n.pointer {\r\n  cursor: pointer;\r\n}\r\n\r\n.searchContiner {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n}\r\n\r\n.searchListContainer {\r\n  background: #fff;\r\n  border: 1px solid #ccc;\r\n  border-bottom: none;\r\n}\r\n\r\n.searchListItem {\r\n  background: white;\r\n  border-bottom: 1px solid #ccc;\r\n  padding-left: 8px;\r\n}\r\n\r\n.badge-light {\r\n  background-color: #999999;\r\n}\r\n.min-width-full {\r\n  min-width: 100%;\r\n}\r\n","import { Component, Event, EventEmitter, Element, Host, Prop, h, State, Listen, Watch } from '@stencil/core';\r\nimport { ToBeAssignedService } from '../../../services/toBeAssigned.service';\r\nimport { dateToFormattedString } from '../../../utils/utils';\r\nimport { transformDateFormatWithMoment } from '../../../utils/events.utils';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  tag: 'igl-cal-header',\r\n  styleUrl: 'igl-cal-header.css',\r\n  scoped: true,\r\n})\r\nexport class IglCalHeader {\r\n  @Element() private element: HTMLElement;\r\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event({ bubbles: true, composed: true }) gotoRoomEvent: EventEmitter<{\r\n    [key: string]: any;\r\n  }>;\r\n  @Event({ bubbles: true, composed: true }) gotoToBeAssignedDate: EventEmitter<{\r\n    [key: string]: any;\r\n  }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() today: String;\r\n  @Prop() propertyid: number;\r\n  @Prop() unassignedDates = {};\r\n  @Prop() to_date: string;\r\n  @State() renderAgain: boolean = false;\r\n  @State() unassignedRoomsNumber: any = {};\r\n  private searchValue: string = '';\r\n  private searchList: { [key: string]: any }[] = [];\r\n  private roomsList: { [key: string]: any }[] = [];\r\n  private toBeAssignedService = new ToBeAssignedService();\r\n  componentWillLoad() {\r\n    try {\r\n      this.initializeRoomsList();\r\n\r\n      if (!this.calendarData.is_vacation_rental && Object.keys(this.unassignedDates).length > 0) {\r\n        this.fetchAndAssignUnassignedRooms();\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in componentWillLoad:', error);\r\n    }\r\n  }\r\n  @Watch('unassignedDates')\r\n  handleCalendarDataChanged() {\r\n    this.fetchAndAssignUnassignedRooms();\r\n  }\r\n  private initializeRoomsList() {\r\n    this.roomsList = [];\r\n    this.calendarData.roomsInfo.forEach(category => {\r\n      this.roomsList = this.roomsList.concat(...category.physicalrooms);\r\n    });\r\n  }\r\n\r\n  private async fetchAndAssignUnassignedRooms() {\r\n    //const days = await this.toBeAssignedService.getUnassignedDates(this.propertyid, dateToFormattedString(new Date()), this.to_date);\r\n    const days = this.unassignedDates;\r\n    await this.assignRoomsToDate(days);\r\n  }\r\n\r\n  private async assignRoomsToDate(days) {\r\n    for (const day of Object.keys(days)) {\r\n      const result = await this.toBeAssignedService.getUnassignedRooms(\r\n        this.propertyid,\r\n        dateToFormattedString(new Date(+day)),\r\n        this.calendarData.roomsInfo,\r\n        this.calendarData.formattedLegendData,\r\n      );\r\n      this.unassignedRoomsNumber = { ...this.unassignedRoomsNumber, [transformDateFormatWithMoment(days[day].dateStr)]: result.length };\r\n    }\r\n  }\r\n\r\n  @Listen('reduceAvailableUnitEvent', { target: 'window' })\r\n  handleReduceAvailableUnitEvent(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    const data = opt.data;\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    // return {day, dayDisplayName, currentDate, tobeAssignedCount: dates[currentDate]};\r\n    if (opt.key === 'reduceAvailableDays') {\r\n      const selectedDate = moment(+data.selectedDate).format('D_M_YYYY');\r\n      this.unassignedRoomsNumber[selectedDate] = this.unassignedRoomsNumber[selectedDate] - 1;\r\n      this.renderView();\r\n    }\r\n  }\r\n\r\n  showToBeAssigned(dayInfo) {\r\n    if (this.unassignedRoomsNumber[dayInfo.day] || 0) {\r\n      this.handleOptionEvent('showAssigned');\r\n      setTimeout(() => {\r\n        this.gotoToBeAssignedDate.emit({\r\n          key: 'gotoToBeAssignedDate',\r\n          data: dayInfo.currentDate,\r\n        });\r\n      }, 100);\r\n    } else {\r\n      // do nothing as the value is 0;\r\n    }\r\n  }\r\n\r\n  handleOptionEvent(key, data: any = '') {\r\n    this.optionEvent.emit({ key, data });\r\n  }\r\n\r\n  handleDateSelect(event: Event) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let selectedDate = inputElement.value;\r\n\r\n    // // Manually close the date picker - for Safari\r\n    const picker = this.element.querySelector('.datePickerHidden') as HTMLInputElement;\r\n    picker.blur();\r\n    if (selectedDate) {\r\n      this.handleOptionEvent('calendar', selectedDate);\r\n    }\r\n  }\r\n\r\n  handleClearSearch() {\r\n    this.searchValue = '';\r\n    this.searchList = [];\r\n    this.renderView();\r\n  }\r\n\r\n  handleFilterRooms(event: Event) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    let value = inputElement.value.trim();\r\n    this.searchValue = value;\r\n    value = value.toLowerCase();\r\n    if (value === '') {\r\n      this.handleClearSearch();\r\n    } else {\r\n      this.searchList = this.roomsList.filter(room => room.name.toLocaleLowerCase().indexOf(value) != -1);\r\n    }\r\n    this.renderView();\r\n  }\r\n\r\n  handleScrollToRoom(roomId) {\r\n    this.handleClearSearch();\r\n    this.gotoRoomEvent.emit({ key: 'gotoRoom', roomId });\r\n  }\r\n\r\n  getStringDateFormat(dt) {\r\n    return dt.getFullYear() + '-' + (dt.getMonth() < 9 ? '0' : '') + (dt.getMonth() + 1) + '-' + (dt.getDate() <= 9 ? '0' : '') + dt.getDate();\r\n  }\r\n\r\n  getNewBookingModel() {\r\n    let today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    let from_date = this.getStringDateFormat(today);\r\n    today.setDate(today.getDate() + 1);\r\n    today.setHours(0, 0, 0, 0);\r\n    let to_date = this.getStringDateFormat(today);\r\n    return {\r\n      ID: '',\r\n      NAME: '',\r\n      EMAIL: '',\r\n      PHONE: '',\r\n      REFERENCE_TYPE: 'PHONE',\r\n      FROM_DATE: from_date, // \"2023-07-09\",\r\n      TO_DATE: to_date, // \"2023-07-11\",\r\n      roomsInfo: this.calendarData.roomsInfo,\r\n      TITLE: 'New Booking',\r\n      event_type: 'PLUS_BOOKING',\r\n      legendData: this.calendarData.formattedLegendData,\r\n      defaultDateRange: {\r\n        fromDate: new Date(from_date), //new Date(\"2023-09-10\"),\r\n        fromDateStr: '', //\"10 Sep 2023\",\r\n        toDate: new Date(to_date), //new Date(\"2023-09-15\"),\r\n        toDateStr: '', // \"15 Sep 2023\",\r\n        dateDifference: 0,\r\n        editabled: true,\r\n        message: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"stickyCell align-items-center topLeftCell preventPageScroll\">\r\n          <div class=\"row justify-content-around no-gutters\">\r\n            {!this.calendarData.is_vacation_rental && (\r\n              <div class=\"caledarBtns\" onClick={() => this.handleOptionEvent('showAssigned')} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Unassigned Units\">\r\n                <i class=\"la la-tasks\"></i>\r\n              </div>\r\n            )}\r\n            <div class=\"caledarBtns\" onClick={() => this.handleOptionEvent('calendar')} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Navigate\">\r\n              <i class=\"la la-calendar-o\"></i>\r\n              <input class=\"datePickerHidden\" type=\"date\" onChange={this.handleDateSelect.bind(this)} title=\"\" />\r\n            </div>\r\n            <div class=\"caledarBtns\" onClick={() => this.handleOptionEvent('gotoToday')} data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Today\">\r\n              <i class=\"la la-clock-o\"></i>\r\n            </div>\r\n            <div\r\n              class=\"caledarBtns\"\r\n              onClick={() => this.handleOptionEvent('add', this.getNewBookingModel())}\r\n              data-toggle=\"tooltip\"\r\n              data-placement=\"bottom\"\r\n              title=\"Create new booking\"\r\n            >\r\n              <i class=\"la la-plus\"></i>\r\n            </div>\r\n          </div>\r\n          <div class=\"row justify-content-around no-gutters searchContiner\">\r\n            <fieldset class={`form-group position-relative ${this.searchValue != '' ? 'show' : ''}`}>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-sm input-sm\"\r\n                id=\"iconLeft7\"\r\n                value={this.searchValue}\r\n                placeholder=\"Find unit\"\r\n                onInput={event => this.handleFilterRooms(event)}\r\n              />\r\n              {this.searchValue !== '' ? (\r\n                <div\r\n                  class=\"form-control-position pointer\"\r\n                  onClick={() => this.handleClearSearch()}\r\n                  data-toggle=\"tooltip\"\r\n                  data-placement=\"top\"\r\n                  data-original-title=\"Clear Selection\"\r\n                >\r\n                  <i class=\"la la-close font-small-4\"></i>\r\n                </div>\r\n              ) : null}\r\n\r\n              {this.searchList.length ? (\r\n                <div class=\"position-absolute searchListContainer dropdown-menu dropdown-menu-left min-width-full\">\r\n                  {this.searchList.map(room => (\r\n                    <div class=\"searchListItem1 dropdown-item px-1 text-left pointer\" onClick={() => this.handleScrollToRoom(room.id)}>\r\n                      {room.name}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : null}\r\n            </fieldset>\r\n          </div>\r\n        </div>\r\n        <div class=\"stickyCell headersContainer\">\r\n          <div class=\"monthsContainer\">\r\n            {this.calendarData.monthsInfo.map(monthInfo => (\r\n              <div class=\"monthCell\" style={{ width: monthInfo.daysCount * 70 + 'px' }}>\r\n                <div class=\"monthTitle\">{monthInfo.monthName}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {this.calendarData.days.map(dayInfo => (\r\n            <div class={`headerCell align-items-center ${'day-' + dayInfo.day} ${dayInfo.day === this.today ? 'currentDay' : ''}`} data-day={dayInfo.day}>\r\n              {!this.calendarData.is_vacation_rental && (\r\n                <div class=\"preventPageScroll\">\r\n                  <span\r\n                    class={`badge badge-${this.unassignedRoomsNumber[dayInfo.day] || dayInfo.unassigned_units_nbr !== 0 ? 'info pointer' : 'light'} badge-pill`}\r\n                    onClick={() => this.showToBeAssigned(dayInfo)}\r\n                  >\r\n                    {this.unassignedRoomsNumber[dayInfo.day] || dayInfo.unassigned_units_nbr}\r\n                  </span>\r\n                </div>\r\n              )}\r\n              <div class=\"dayTitle\">{dayInfo.dayDisplayName}</div>\r\n              <div class=\"dayCapacityPercent\">{dayInfo.occupancy}%</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: flex;\r\n  text-align: left;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n.date-range-input {\r\n  border: 0;\r\n  outline: 0;\r\n  margin: 0;\r\n  flex: 1;\r\n}\r\n.date-range-input:focus {\r\n  border: 0;\r\n  outline: 0;\r\n}\r\n.iglRangePicker {\r\n  margin: 0;\r\n  border: 1px solid #379ff2;\r\n  border-radius: 6px;\r\n  min-width: 300px;\r\n  max-width: 320px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  text-align: center;\r\n  margin-right: 5px;\r\n  padding: 5px 2rem;\r\n}\r\n.calendarPickerContainer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  /*align-items: center;*/\r\n}\r\n\r\n.dateRangeLabel {\r\n  margin-right: 5px;\r\n}\r\n\r\n.taxMessage {\r\n  padding: 5px;\r\n  display: inline-block;\r\n}\r\n@media only screen and (min-width: 600px) {\r\n  :host {\r\n    flex-direction: row;\r\n  }\r\n  .calendarPickerContainer {\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n}","import {\r\n  Component,\r\n  Host,\r\n  h,\r\n  State,\r\n  Event,\r\n  EventEmitter,\r\n  Prop,\r\n} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-date-range\",\r\n  styleUrl: \"igl-date-range.css\",\r\n  scoped: true,\r\n})\r\nexport class IglDateRange {\r\n  @Prop({ reflect: true }) message: string = \"\";\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dateSelectEvent: EventEmitter<{ [key: string]: any }>;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  private totalNights: number = 0;\r\n  private fromDate: Date;\r\n  private toDate: Date;\r\n  private fromDateStr: string = \"from\";\r\n  private toDateStr: string = \"to\";\r\n  dateRangeInput: HTMLElement;\r\n\r\n  getStringDateFormat(dt) {\r\n    return (\r\n      dt.getFullYear() +\r\n      \"-\" +\r\n      (dt.getMonth() < 9 ? \"0\" : \"\") +\r\n      (dt.getMonth() + 1) +\r\n      \"-\" +\r\n      (dt.getDate() <= 9 ? \"0\" : \"\") +\r\n      dt.getDate()\r\n    );\r\n  }\r\n\r\n  componentWillLoad() {\r\n    let dt = new Date();\r\n    dt.setHours(0, 0, 0, 0);\r\n    dt.setDate(dt.getDate() + 1);\r\n    if (this.defaultData) {\r\n      if (this.defaultData.fromDate) {\r\n        this.fromDate = new Date(this.defaultData.fromDate);\r\n        this.fromDate.setHours(0, 0, 0, 0);\r\n        this.fromDateStr = this.getFormattedDateString(this.fromDate);\r\n      }\r\n      if (this.defaultData.toDate) {\r\n        this.toDate = new Date(this.defaultData.toDate);\r\n        this.toDate.setHours(0, 0, 0, 0);\r\n        this.toDateStr = this.getFormattedDateString(this.toDate);\r\n      }\r\n    }\r\n    if (this.fromDate && this.toDate) {\r\n      this.calculateTotalNights();\r\n      this.handleDateSelectEvent(\"selectedDateRange\", {\r\n        fromDate: this.fromDate.getTime(),\r\n        toDate: this.toDate.getTime(),\r\n        fromDateStr: this.fromDateStr,\r\n        toDateStr: this.toDateStr,\r\n        dateDifference: this.totalNights,\r\n      });\r\n    }\r\n  }\r\n\r\n  calculateTotalNights() {\r\n    this.totalNights = Math.floor(\r\n      (this.toDate.getTime() - this.fromDate.getTime()) / 86400000\r\n    );\r\n  }\r\n  getFormattedDateString(dt) {\r\n    return (\r\n      dt.getDate() +\r\n      \" \" +\r\n      dt.toLocaleString(\"default\", { month: \"short\" }).toLowerCase() +\r\n      \" \" +\r\n      dt.getFullYear()\r\n    );\r\n  }\r\n\r\n  handleDateSelectEvent(key, data: any = \"\") {\r\n    this.dateSelectEvent.emit({ key, data });\r\n  }\r\n  handleDateChange(evt) {\r\n    const { start, end } = evt.detail;\r\n    this.fromDate = start.toDate();\r\n    this.toDate = end.toDate();\r\n    this.calculateTotalNights();\r\n    this.handleDateSelectEvent(\"selectedDateRange\", {\r\n      fromDate: this.fromDate.getTime(),\r\n      toDate: this.toDate.getTime(),\r\n      fromDateStr: start.format(\"DD MMM YYYY\"),\r\n      toDateStr: end.format(\"DD MMM YYYY\"),\r\n      dateDifference: this.totalNights,\r\n    });\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"calendarPickerContainer ml-0\">\r\n          <h5 class=\"dateRangeLabel\">Dates</h5>\r\n          <div class=\"iglRangePicker\">\r\n            <ir-date-picker\r\n              fromDate={this.fromDate}\r\n              toDate={this.toDate}\r\n              autoApply\r\n              onDateChanged={(evt) => {\r\n                this.handleDateChange(evt);\r\n              }}\r\n            ></ir-date-picker>\r\n\r\n            {this.totalNights ? (\r\n              <span class=\"iglRangeNights\">\r\n                {this.totalNights +\r\n                  (this.totalNights > 1 ? \" nights\" : \" night\")}\r\n              </span>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div class=\"taxMessage display-inline\">{this.message}</div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n/* Legend */\r\n\r\n.legendHeader {\r\n  font-weight: 500;\r\n  letter-spacing: 0.05rem;\r\n  font-size: 1.12rem;\r\n  padding-top: 5px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.legendCloseBtn {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  font-size: 1.75em;\r\n  line-height: 1em;\r\n  padding: 0.4rem;\r\n}\r\n\r\n.legendCloseBtn:hover {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n.stickyHeader {\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: #ffffff;\r\n  z-index: 1;\r\n}\r\n\r\n.legendRow {\r\n  position: relative;\r\n  vertical-align: middle;\r\n  margin-bottom: 0.3rem;\r\n}\r\n\r\n.legendRow div {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n\r\n.legend_skew,\r\n.legend_skewsplit {\r\n  transform: skew(-30deg);\r\n  width: 15px;\r\n  height: 16px;\r\n}\r\n\r\n.legend_circle {\r\n  border-radius: 100%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 3px 3px 3px 2px;\r\n}\r\n\r\n.legend_skewsplit {\r\n  border-right: 2px solid #000000;\r\n}\r\n\r\n.blueColor {\r\n  background-color: #31bef1;\r\n}\r\n.greenColor {\r\n  background-color: #45b16d;\r\n}\r\n.yellowColor {\r\n  background-color: #f4d552;\r\n}\r\n.greyColor {\r\n  background-color: #a0a0a0;\r\n}\r\n.redColor {\r\n  background-color: #f34752;\r\n}\r\n.pinkColor {\r\n  background-color: #f9b4b7;\r\n}\r\n\r\n/* Legend Calendar */\r\n\r\n.legendCalendar .legendRow {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.legendCalendar .legendRow:first-child .legendCal {\r\n  background-color: #ececec;\r\n}\r\n\r\n.legendCalendar .legendRow div {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n}\r\n\r\n.legendCalendar .legendCal {\r\n  width: 80px;\r\n  height: 25px;\r\n  text-align: center;\r\n  display: inline-grid !important;\r\n  align-content: center;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.legendCalendar .legendCal .badge {\r\n  margin-top: 0.2rem;\r\n}\r\n\r\n.legendCalendar .legendCal.legendCal-h2 {\r\n  height: 40px;\r\n}\r\n\r\n.br-t {\r\n  border-top: 1px solid #a0a0a0;\r\n}\r\n.br-s {\r\n  border-left: 1px solid #a0a0a0;\r\n  border-right: 1px solid #a0a0a0;\r\n}\r\n.br-bt {\r\n  border-bottom: 1px solid #a0a0a0;\r\n}\r\n\r\n.highphenLegend {\r\n  font-size: 0.9em;\r\n}\r\n\r\n.highphenLegend::before {\r\n  width: 12px;\r\n  height: 0.5px;\r\n  content: \" \";\r\n  background-color: #000000;\r\n  vertical-align: middle;\r\n  display: inline-block;\r\n  margin-left: 5px;\r\n  margin-right: 5px;\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'igl-legends',\r\n  styleUrl: 'igl-legends.css',\r\n  scoped: true,\r\n})\r\nexport class IglLegends {\r\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() legendData: { [key: string]: any };\r\n  handleOptionEvent(key, data = '') {\r\n    this.optionEvent.emit({ key, data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"legendContainer pr-1 text-left\">\r\n        <div>\r\n          <div>\r\n            <div class=\"stickyHeader\">\r\n              <div class=\"legendHeader pt-1\">Legend</div>\r\n              <div class=\"legendCloseBtn pt-1\" onClick={() => this.handleOptionEvent('closeSideMenu')}>\r\n                <i class=\"ft-chevrons-left\"></i>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n            <div class=\"mt-2 pl-1\">\r\n              {this.legendData.map(legendInfo => (\r\n                <div class=\"legendRow \">\r\n                  <div class={`legend_${legendInfo.design} mr-1`} style={{ backgroundColor: legendInfo.color }}></div>\r\n                  <span class=\"font-small-3\">{legendInfo.name}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <hr />\r\n            <div class=\"mt-2\">\r\n              <div class=\"legendCalendar\">\r\n                <div class=\"legendRow align-items-center\">\r\n                  <div class=\"legendCal br-t br-s br-bt\">\r\n                    <strong>MAR 2022</strong>\r\n                  </div>\r\n                  <div class=\"highphenLegend\">Month and Year</div>\r\n                </div>\r\n                <div class=\"legendRow\">\r\n                  <div class=\"legendCal pl-2 pr-2 br-s\">\r\n                    <span class=\"badge badge-primary badge-pill\">3</span>\r\n                  </div>\r\n                  <div class=\"highphenLegend\">\r\n                    <div>Unassigned Units (Click to Assign)</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"legendRow\">\r\n                  <div class=\"legendCal br-s\">FRI 18</div>\r\n                  <div class=\"highphenLegend\">Date</div>\r\n                </div>\r\n                <div class=\"legendRow\">\r\n                  <div class=\"legendCal br-s br-bt font-small-3\">15%</div>\r\n                  <div class=\"highphenLegend\">Occupancy</div>\r\n                </div>\r\n                <div class=\"legendRow\">\r\n                  <div class=\"legendCal br-s font-small-3\">20</div>\r\n                  <div class=\"highphenLegend\">Inventory</div>\r\n                </div>\r\n                <div class=\"legendRow align-items-center\">\r\n                  <div class=\"legendCal br-s br-bt font-small-2\">\r\n                    <u>R$100,00</u>\r\n                  </div>\r\n                  <div class=\"highphenLegend\">\r\n                    <div>Rate (Click to Change)</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 10000;\r\n  /* min-width: 450px; */\r\n}\r\n\r\n.card-title {\r\n  border-bottom: 1px solid #e4e5ec;\r\n}\r\n\r\n.scrollContent {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n  position: relative;\r\n}\r\n\r\n.background-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.formContainer {\r\n  height: calc(100% - 79px);\r\n  overflow: auto;\r\n}\r\n\r\n.sideWindow {\r\n  /* display: grid; */\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  background-color: #ffffff;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  line-height: 1;\r\n  color: #000;\r\n  text-shadow: 0 1px 0 #fff;\r\n  opacity: 0.5;\r\n\r\n  padding: 0;\r\n  background-color: transparent;\r\n  border: 0;\r\n  appearance: none;\r\n}\r\n\r\n.close-icon {\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 33px;\r\n  outline: none;\r\n}\r\n\r\nbutton:not(:disabled),\r\n[type=\"button\"]:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n","import { Component, Prop, h, Event, EventEmitter, Host, State } from '@stencil/core';\r\nimport { IPageTwoDataUpdateProps, PageTwoButtonsTypes } from '../../../models/models';\r\n@Component({\r\n  tag: 'igl-pagetwo',\r\n  styleUrl: 'igl-pagetwo.css',\r\n  scoped: true,\r\n})\r\nexport class IglPagetwo {\r\n  @Prop() showPaymentDetails: boolean;\r\n  @Prop({ reflect: true }) isEditOrAddRoomEvent: boolean;\r\n  @Prop() dateRangeData: { [key: string]: any };\r\n  @Prop() bookingData: { [key: string]: any };\r\n  @Prop() showSplitBookingOption: boolean;\r\n  @Prop() language: string;\r\n  @Prop() bookedByInfoData: { [key: string]: any };\r\n  @Prop() bedPreferenceType: any;\r\n  @Prop() selectedRooms: any;\r\n  @Prop({ reflect: true }) isLoading: string;\r\n  @Prop() countryNodeList;\r\n  @Prop() selectedGuestData;\r\n  @Event() dataUpdateEvent: EventEmitter<IPageTwoDataUpdateProps>;\r\n  @Event() buttonClicked: EventEmitter<{\r\n    key: PageTwoButtonsTypes;\r\n    data?: CustomEvent;\r\n  }>;\r\n  @State() selectedBookedByData;\r\n  @State() guestData: any;\r\n\r\n  @State() selectedUnits: { [key: string]: any } = {};\r\n\r\n  componentWillLoad() {\r\n    this.initializeGuestData();\r\n  }\r\n  initializeGuestData() {\r\n    let total = 0;\r\n    const newSelectedUnits = { ...this.selectedUnits };\r\n\r\n    for (const key in this.selectedRooms) {\r\n      for (const prop in this.selectedRooms[key]) {\r\n        const totalRooms = this.selectedRooms[key][prop].totalRooms;\r\n        newSelectedUnits[key] = Array(totalRooms).fill(-1);\r\n      }\r\n    }\r\n\r\n    this.selectedUnits = newSelectedUnits;\r\n    this.guestData = [];\r\n    for (const key of Object.keys(this.selectedRooms)) {\r\n      for (const prop of Object.keys(this.selectedRooms[key])) {\r\n        for (let i = 1; i <= this.selectedRooms[key][prop].totalRooms; i++) {\r\n          this.guestData.push({\r\n            guestName: '',\r\n            roomId: '',\r\n            preference: '',\r\n            ...this.selectedRooms[key][prop],\r\n          });\r\n        }\r\n        total += this.selectedRooms[key][prop].totalRooms * this.selectedRooms[key][prop].rate;\r\n      }\r\n    }\r\n    this.bookingData.TOTAL_PRICE = total;\r\n  }\r\n\r\n  getRoomsListFromCategoryId(categoryId) {\r\n    let category = this.bookingData.roomsInfo?.find(category => category.id === categoryId);\r\n    return (category && category.physicalrooms) || [];\r\n  }\r\n  handleOnApplicationInfoDataUpdateEvent(event: CustomEvent, index: number) {\r\n    const opt = event.detail;\r\n    const categoryIdKey = `c_${opt.data.roomCategoryId}`;\r\n    const updatedUnits = [...(this.selectedUnits[categoryIdKey] || [])];\r\n    updatedUnits[index] = opt.data.roomId;\r\n    this.selectedUnits = {\r\n      ...this.selectedUnits,\r\n      [categoryIdKey]: updatedUnits,\r\n    };\r\n    this.dataUpdateEvent.emit({\r\n      key: 'applicationInfoUpdateEvent',\r\n      value: event.detail,\r\n    });\r\n  }\r\n\r\n  handleEventData(event: any, key: string, index: number) {\r\n    if (key === 'application-info') {\r\n      this.handleOnApplicationInfoDataUpdateEvent(event, index);\r\n    } else {\r\n      this.selectedBookedByData = event.detail.data;\r\n      this.dataUpdateEvent.emit({\r\n        key: 'propertyBookedBy',\r\n        value: event.detail,\r\n      });\r\n    }\r\n  }\r\n  isGuestDataIncomplete() {\r\n    if (this.selectedGuestData.length !== this.guestData.length) {\r\n      return true;\r\n    }\r\n    for (const data of this.selectedGuestData) {\r\n      if (data.guestName === '' || data.preference === '' || data.roomId === '') {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isButtonDisabled(key: string) {\r\n    const isValidProperty = (property, key, comparedBy) => {\r\n      if (!property) {\r\n        return true;\r\n      }\r\n      if (property === this.selectedGuestData) {\r\n        return this.isGuestDataIncomplete();\r\n      }\r\n      const isCardDetails = ['cardNumber', 'cardHolderName', 'expiryMonth', 'expiryYear'].includes(key);\r\n      if (!this.showPaymentDetails && isCardDetails) {\r\n        return false;\r\n      }\r\n      return property[key] === comparedBy || property[key] === undefined;\r\n    };\r\n\r\n    return (\r\n      this.isLoading === key ||\r\n      isValidProperty(this.selectedGuestData, 'guestName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'isdCode', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'contactNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'firstName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'lastName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'countryId', -1) ||\r\n      isValidProperty(this.selectedBookedByData, 'selectedArrivalTime', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'email', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'cardNumber', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'cardHolderName', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'expiryMonth', '') ||\r\n      isValidProperty(this.selectedBookedByData, 'expiryYear', '')\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"scrollContent\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6 text-left p-0\">\r\n            <span class=\"mr-1 font-weight-bold font-medium-1\">\r\n              {this.dateRangeData.fromDateStr} - {this.dateRangeData.toDateStr}\r\n            </span>\r\n            {this.dateRangeData.dateDifference} nights\r\n          </div>\r\n          <div class=\"col-6 text-right\">\r\n            Total price <span class=\"font-weight-bold font-medium-1\">{'$' + this.bookingData.TOTAL_PRICE || '$0.00'}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {this.guestData.map((roomInfo, index) => (\r\n          <igl-application-info\r\n            bedPreferenceType={this.bedPreferenceType}\r\n            index={index}\r\n            selectedUnits={this.selectedUnits[`c_${roomInfo.roomCategoryId}`]}\r\n            guestInfo={roomInfo}\r\n            guestRefKey={index}\r\n            bookingType={this.bookingData.event_type}\r\n            roomsList={this.getRoomsListFromCategoryId(roomInfo.roomCategoryId)}\r\n            onDataUpdateEvent={event =>\r\n              //this.handleOnApplicationInfoDataUpdateEvent(event, index)\r\n              this.handleEventData(event, 'application-info', index)\r\n            }\r\n          ></igl-application-info>\r\n        ))}\r\n\r\n        {this.isEditOrAddRoomEvent || this.showSplitBookingOption ? null : (\r\n          <igl-property-booked-by\r\n            countryNodeList={this.countryNodeList}\r\n            language={this.language}\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            defaultData={this.bookedByInfoData}\r\n            onDataUpdateEvent={event =>\r\n              // this.dataUpdateEvent.emit({\r\n              //   key: \"propertyBookedBy\",\r\n              //   value: event.detail,\r\n              // })\r\n              this.handleEventData(event, 'propertyBookedBy', 0)\r\n            }\r\n          ></igl-property-booked-by>\r\n        )}\r\n\r\n        {this.isEditOrAddRoomEvent ? (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class=\"col-6\">\r\n              <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'cancel' })}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <button\r\n                disabled={this.isLoading === 'save' || this.isGuestDataIncomplete()}\r\n                type=\"button\"\r\n                class=\"btn btn-primary full-width\"\r\n                onClick={() => this.buttonClicked.emit({ key: 'save' })}\r\n              >\r\n                {this.isLoading === 'save' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div class=\"row p-0 mb-1 mt-2\">\r\n            <div class=\"col-4\">\r\n              <button type=\"button\" class=\"btn btn-secondary full-width\" onClick={() => this.buttonClicked.emit({ key: 'back' })}>\r\n                &lt;&lt; Back\r\n              </button>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <button disabled={this.isButtonDisabled('book')} type=\"button\" class=\"btn btn-primary full-width\" onClick={() => this.buttonClicked.emit({ key: 'book' })}>\r\n                {this.isLoading === 'book' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                Book\r\n              </button>\r\n            </div>\r\n            <div class=\"col-4\">\r\n              <button\r\n                disabled={this.isButtonDisabled('bookAndCheckIn')}\r\n                type=\"button\"\r\n                class=\"btn btn-primary full-width\"\r\n                onClick={() => this.buttonClicked.emit({ key: 'bookAndCheckIn' })}\r\n              >\r\n                {this.isLoading === 'bookAndCheckIn' && <i class=\"la la-circle-o-notch spinner mx-1\"></i>}\r\n                Book & check in\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.row {\r\n  padding: 0 0 0 15px;\r\n  margin: 0;\r\n}\r\n\r\n.bookedByEmailContainer {\r\n  flex: auto;\r\n  max-width: 250px;\r\n}\r\n\r\n.bookedDetailsForm label {\r\n  min-width: 125px;\r\n  max-width: 125px;\r\n}\r\n\r\n.bookedDetailsForm .controlContainer {\r\n  width: calc(100% - 127px);\r\n}\r\n\r\n.bookedDetailsForm .form-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n\r\n.bookedDetailsForm .checkBoxContainer input {\r\n  height: 1.2rem !important;\r\n  width: 30px;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Fragment } from '@stencil/core';\r\nimport { BookingService } from '../../../services/booking.service';\r\nimport { IEntries, ICountry } from '../../../models/IBooking';\r\nimport { v4 } from 'uuid';\r\n\r\n@Component({\r\n  tag: 'igl-property-booked-by',\r\n  styleUrl: 'igl-property-booked-by.css',\r\n  scoped: true,\r\n})\r\nexport class IglPropertyBookedBy {\r\n  @Prop() language: string;\r\n  @Prop() showPaymentDetails: boolean = false;\r\n  @Prop() defaultData: { [key: string]: any };\r\n  @Event() dataUpdateEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() countryNodeList: ICountry[] = [];\r\n  private bookingService: BookingService = new BookingService();\r\n  private arrivalTimeList: IEntries[] = [];\r\n  private expiryMonths: string[] = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\r\n  private expiryYears: string[] = [];\r\n  private currentMonth: string = '01';\r\n  @State() bookedByData: { [key: string]: any } = {\r\n    id: undefined,\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    countryId: '',\r\n    isdCode: '',\r\n    contactNumber: '',\r\n    selectedArrivalTime: {\r\n      code: '',\r\n      description: '',\r\n    },\r\n    emailGuest: false,\r\n    message: '',\r\n    cardNumber: '',\r\n    cardHolderName: '',\r\n    expiryMonth: '',\r\n    expiryYear: '',\r\n  };\r\n\r\n  async componentWillLoad() {\r\n    this.assignCountryCode();\r\n    this.initializeExpiryYears();\r\n    this.initializeDateData();\r\n    this.populateBookedByData();\r\n  }\r\n\r\n  private initializeExpiryYears() {\r\n    const currentYear = new Date().getFullYear();\r\n    this.expiryYears = Array.from({ length: 4 }, (_, index) => (currentYear + index).toString());\r\n  }\r\n  private async assignCountryCode() {\r\n    const country = await this.bookingService.getUserDefaultCountry();\r\n    console.log(country);\r\n    const countryId = country['COUNTRY_ID'];\r\n    console.log(countryId);\r\n    this.bookedByData = { ...this.bookedByData, isdCode: countryId.toString(), countryId };\r\n  }\r\n  private initializeDateData() {\r\n    const dt = new Date();\r\n    const month = dt.getMonth() + 1;\r\n    this.currentMonth = month < 10 ? `0${month}` : month.toString();\r\n  }\r\n\r\n  private populateBookedByData() {\r\n    this.bookedByData = this.defaultData ? { ...this.defaultData } : {};\r\n    this.arrivalTimeList = this.defaultData?.arrivalTime || [];\r\n\r\n    if (!this.bookedByData.expiryMonth) {\r\n      this.bookedByData.expiryMonth = this.currentMonth;\r\n    }\r\n    if (!this.bookedByData.expiryYear) {\r\n      this.bookedByData.expiryYear = new Date().getFullYear();\r\n    }\r\n  }\r\n\r\n  handleDataChange(key, event) {\r\n    const foundTime = this.arrivalTimeList.find(time => time.CODE_NAME === event.target.value);\r\n\r\n    this.bookedByData[key] =\r\n      key === 'emailGuest'\r\n        ? event.target.checked\r\n        : key === 'arrivalTime'\r\n        ? {\r\n            code: event.target.value,\r\n            description: (foundTime && foundTime.CODE_VALUE_EN) || '',\r\n          }\r\n        : event.target.value;\r\n    this.dataUpdateEvent.emit({\r\n      key: 'bookedByInfoUpdated',\r\n      data: { ...this.bookedByData },\r\n    });\r\n    if (key === 'countryId') {\r\n      this.bookedByData = {\r\n        ...this.bookedByData,\r\n        isdCode: event.target.value,\r\n      };\r\n    }\r\n  }\r\n\r\n  handleNumberInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n\r\n    // Regular expression to match only numeric characters (0-9)\r\n    const numericRegex = /^[0-9]+$/;\r\n\r\n    if (!numericRegex.test(inputValue)) {\r\n      // If the input is not numeric, prevent it from being entered\r\n      inputElement.value = inputValue.replace(/[^0-9]/g, '');\r\n    }\r\n    if (inputValue === inputElement.value) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n\r\n  async handleEmailInput(key, event: InputEvent) {\r\n    const inputElement = event.target as HTMLInputElement;\r\n    const inputValue = inputElement.value;\r\n    if (this.isValidEmail(inputValue)) {\r\n      this.handleDataChange(key, event);\r\n    }\r\n  }\r\n  async checkUser() {\r\n    try {\r\n      const email = this.bookedByData.email;\r\n      if (this.isValidEmail(email)) {\r\n        const res = await this.bookingService.getUserInfo(email);\r\n        if (res !== null) {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: res.id,\r\n            firstName: res.first_name,\r\n            lastName: res.last_name,\r\n            contactNumber: res.mobile,\r\n            countryId: res.country_id,\r\n            isdCode: res.country_id.toString(),\r\n          };\r\n        } else {\r\n          this.bookedByData = {\r\n            ...this.bookedByData,\r\n            id: undefined,\r\n            firstName: '',\r\n            lastName: '',\r\n            contactNumber: '',\r\n            countryId: '',\r\n            isdCode: '',\r\n          };\r\n        }\r\n        this.dataUpdateEvent.emit({\r\n          key: 'bookedByInfoUpdated',\r\n          data: { ...this.bookedByData },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n  isValidEmail(emailId) {\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    return emailPattern.test(emailId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"text-left mt-3\">\r\n          <div class=\"form-group row text-left align-items-center\">\r\n            <label class=\"p-0 m-0 label-control mr-1 font-weight-bold\">Booked by</label>\r\n            <div class=\"bookedByEmailContainer\">\r\n              <input\r\n                id={v4()}\r\n                type=\"email\"\r\n                class=\"form-control\"\r\n                placeholder=\"Email address\"\r\n                name=\"bookeyByEmail\"\r\n                value={this.bookedByData.email}\r\n                onInput={event => this.handleEmailInput('email', event)}\r\n                required\r\n                onBlur={() => this.checkUser()}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"bookedDetailsForm text-left mt-2 font-small-3\">\r\n          <div class=\"row\">\r\n            <div class=\"p-0 col-md-6\">\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">First name</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"First name\"\r\n                    id={v4()}\r\n                    value={this.bookedByData.firstName}\r\n                    onInput={event => this.handleDataChange('firstName', event)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Last name</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <input\r\n                    class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Last name\"\r\n                    id={v4()}\r\n                    value={this.bookedByData.lastName}\r\n                    onInput={event => this.handleDataChange('lastName', event)}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Country</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('countryId', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.countryId === ''}>\r\n                      Select\r\n                    </option>\r\n                    {this.countryNodeList.map(countryNode => (\r\n                      <option value={countryNode.id} selected={this.bookedByData.countryId === countryNode.id}>\r\n                        {countryNode.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Mobile phone</label>\r\n                <div class=\"p-0 m-0 pr-1 row controlContainer\">\r\n                  <div class=\"col-3 p-0 m-0\">\r\n                    <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('isdCode', event)}>\r\n                      <option value=\"\" selected={this.bookedByData.isdCode === ''}>\r\n                        ISD\r\n                      </option>\r\n                      {this.countryNodeList.map(country => (\r\n                        <option value={country.id} selected={this.bookedByData.isdCode === country.id.toString()}>\r\n                          {country.phone_prefix}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-9 p-0 m-0\">\r\n                    <input\r\n                      class=\"form-control\"\r\n                      type=\"tel\"\r\n                      placeholder=\"Contact Number\"\r\n                      id={v4()}\r\n                      value={this.bookedByData.contactNumber}\r\n                      onInput={event => this.handleNumberInput('contactNumber', event)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Your arrival time</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('selectedArrivalTime', event)}>\r\n                    <option value=\"\" selected={this.bookedByData.selectedArrivalTime === ''}>\r\n                      -\r\n                    </option>\r\n                    {this.arrivalTimeList.map(time => (\r\n                      <option value={time.CODE_NAME} selected={this.bookedByData.selectedArrivalTime === time.CODE_NAME}>\r\n                        {time.CODE_VALUE_EN}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Email the guest</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer checkBoxContainer\">\r\n                  <input class=\"form-control\" type=\"checkbox\" checked={this.bookedByData.emailGuest} id={v4()} onChange={event => this.handleDataChange('emailGuest', event)} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6 p-0\">\r\n              <div class=\"form-group row p-0 align-items-center\">\r\n                <label class=\"p-0 m-0\">Any message for us?</label>\r\n                <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                  <textarea\r\n                    id={v4()}\r\n                    rows={4}\r\n                    class=\"form-control\"\r\n                    name=\"message\"\r\n                    value={this.bookedByData.message}\r\n                    onInput={event => this.handleDataChange('message', event)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              {this.showPaymentDetails && (\r\n                <Fragment>\r\n                  <div class=\"form-group row p-0 align-items-center\">\r\n                    <label class=\"p-0 m-0\">Card Number</label>\r\n                    <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardNumber}\r\n                        onInput={event => this.handleNumberInput('cardNumber', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group row p-0 align-items-center\">\r\n                    <label class=\"p-0 m-0\">Card holder name</label>\r\n                    <div class=\"p-0 m-0 pr-1 controlContainer\">\r\n                      <input\r\n                        class=\"form-control\"\r\n                        type=\"text\"\r\n                        placeholder=\"\"\r\n                        pattern=\"0-9 \"\r\n                        id={v4()}\r\n                        value={this.bookedByData.cardHolderName}\r\n                        onInput={event => this.handleDataChange('cardHolderName', event)}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group row p-0 align-items-center\">\r\n                    <label class=\"p-0 m-0\">Expiry Date</label>\r\n                    <div class=\"p-0 m-0 row pr-1 controlContainer\">\r\n                      <div class=\"p-0 m-0\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryMonth', event)}>\r\n                          {this.expiryMonths.map(month => (\r\n                            <option value={month} selected={month === this.bookedByData.expiryMonth}>\r\n                              {month}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div class=\"p-0 m-0 ml-1\">\r\n                        <select class=\"form-control input-sm pr-0\" id={v4()} onChange={event => this.handleDataChange('expiryYear', event)}>\r\n                          {this.expiryYears.map((year, index) => (\r\n                            <option value={year} selected={index === this.bookedByData.expiryYear}>\r\n                              {year}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../../assets/feather/style.min.css\");\r\n@import url(\"../../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.guestTitle {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  padding: 2px;\r\n  margin-bottom: 5px;\r\n  margin-top: 5px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  /* margin-bottom: 5px; */\r\n}\r\n\r\n.guestTitle.selectedOrder {\r\n  background-color: #f9f9c9;\r\n}\r\n\r\n.pointer {\r\n  cursor: pointer;\r\n}\r\n\r\nhr {\r\n  margin-top: 8px;\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.bookingContainer {\r\n  background-color: #ececec;\r\n}\r\n\r\n.actionsContainer {\r\n  padding: 5px !important;\r\n  padding-right: 0px !important;\r\n}\r\n\r\n.selectContainer {\r\n  width: 195px;\r\n  margin-right: 8px;\r\n}\r\n\r\n.buttonsContainer {\r\n  width: 100px;\r\n}\r\n.btn-secondary {\r\n  margin-right: 8px !important;\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter, Listen, State } from '@stencil/core';\r\nimport { ToBeAssignedService } from '../../../../services/toBeAssigned.service';\r\nimport { v4 } from 'uuid';\r\nimport { transformNewBooking } from '../../../../utils/booking';\r\n\r\n@Component({\r\n  tag: 'igl-tba-booking-view',\r\n  styleUrl: 'igl-tba-booking-view.css',\r\n  scoped: true,\r\n})\r\nexport class IglTbaBookingView {\r\n  // @Element() private element: HTMLElement;\r\n  @Event({ bubbles: true, composed: true })\r\n  highlightToBeAssignedBookingEvent: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) addToBeAssignedEvent: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) scrollPageToRoom: EventEmitter;\r\n  @Event() assignRoomEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() selectedDate;\r\n  @Prop() eventData: { [key: string]: any } = {};\r\n  @Prop() categoriesData: { [key: string]: any } = {};\r\n  @Prop() categoryId;\r\n  @Prop() categoryIndex;\r\n  @Prop() eventIndex;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  @State() selectedRoom: number = -1;\r\n  private highlightSection: boolean = false;\r\n  private allRoomsList: { [key: string]: any }[] = [];\r\n  private toBeAssignedService = new ToBeAssignedService();\r\n  onSelectRoom(evt) {\r\n    if (evt.stopImmediatePropagation) {\r\n      evt.stopImmediatePropagation();\r\n      evt.stopPropagation();\r\n    }\r\n    this.selectedRoom = parseInt(evt.target.value);\r\n  }\r\n\r\n  // componentDidLoad(){\r\n  //   this.initializeToolTips();\r\n  // }\r\n\r\n  componentShouldUpdate(newValue: string, oldValue: string, propName: string): boolean {\r\n    if (propName === 'selectedDate' && newValue !== oldValue) {\r\n      this.highlightSection = false;\r\n      this.selectedRoom = -1;\r\n      return true; // Prevent update for a specific prop value\r\n    } else if (propName === 'eventData' && newValue !== oldValue) {\r\n      this.selectedRoom = -1;\r\n      return true;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentWillLoad() {\r\n    if (this.categoryIndex === 0 && this.eventIndex === 0) {\r\n      setTimeout(() => {\r\n        this.handleHighlightAvailability();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  async handleAssignUnit(event) {\r\n    try {\r\n      event.stopImmediatePropagation();\r\n      event.stopPropagation();\r\n      if (this.selectedRoom) {\r\n        const result = await this.toBeAssignedService.assignUnit(this.eventData.BOOKING_NUMBER, this.eventData.ID, this.selectedRoom);\r\n        let assignEvent = transformNewBooking(result);\r\n        const newEvent = { ...this.eventData, ...assignEvent[0], ID: this.eventData.ID };\r\n        console.log(newEvent);\r\n        //this.calendarData.bookingEvents.push(newEvent);\r\n        //console.log(newEvent);\r\n        this.addToBeAssignedEvent.emit({\r\n          key: 'tobeAssignedEvents',\r\n          data: [assignEvent[0]],\r\n        });\r\n        this.assignRoomEvent.emit({ key: 'assignRoom', data: newEvent });\r\n      }\r\n    } catch (error) {\r\n      //   toastr.error(error);\r\n    }\r\n  }\r\n\r\n  handleHighlightAvailability() {\r\n    this.highlightToBeAssignedBookingEvent.emit({\r\n      key: 'highlightBookingId',\r\n      data: { bookingId: this.eventData.ID },\r\n    });\r\n    if (!this.selectedDate) {\r\n      return;\r\n    }\r\n    let filteredEvents = [];\r\n    let allRoomsList = [];\r\n    filteredEvents = this.eventData.availableRooms.map(room => {\r\n      allRoomsList.push({\r\n        calendar_cell: null,\r\n        id: room.PR_ID,\r\n        name: room.roomName,\r\n      });\r\n      return {\r\n        ...room,\r\n        defaultDateRange: this.eventData.defaultDateRange,\r\n        identifier: this.eventData.identifier,\r\n        // roomsInfo: this.eventData.roomsInfo,\r\n        // legendData: this.eventData.legendData,\r\n      };\r\n    });\r\n    this.allRoomsList = allRoomsList;\r\n    this.addToBeAssignedEvent.emit({\r\n      key: 'tobeAssignedEvents',\r\n      data: filteredEvents,\r\n    });\r\n\r\n    this.scrollPageToRoom.emit({\r\n      key: 'scrollPageToRoom',\r\n      id: this.categoryId,\r\n      refClass: 'category_' + this.categoryId,\r\n    });\r\n    // ID: \"NEW_TEMP_EVENT\",\r\n    // STATUS: \"PENDING_CONFIRMATION\"\r\n    this.renderView();\r\n  }\r\n\r\n  handleCloseAssignment(event) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n    this.highlightSection = false;\r\n    this.highlightToBeAssignedBookingEvent.emit({\r\n      key: 'highlightBookingId',\r\n      data: { bookingId: '----' },\r\n    });\r\n    this.onSelectRoom({ target: { value: '' } });\r\n    this.addToBeAssignedEvent.emit({ key: 'tobeAssignedEvents', data: [] });\r\n    this.renderView();\r\n  }\r\n\r\n  @Listen('highlightToBeAssignedBookingEvent', { target: 'window' })\r\n  highlightBookingEvent(event: CustomEvent) {\r\n    let data = event.detail.data;\r\n    if (data.bookingId != this.eventData.ID) {\r\n      this.highlightSection = false;\r\n      this.selectedRoom = -1;\r\n      this.renderView();\r\n    } else {\r\n      this.highlightSection = true;\r\n      this.renderView();\r\n    }\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n    // this.initializeToolTips();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"bookingContainer\" onClick={() => this.handleHighlightAvailability()}>\r\n          <div\r\n            class={`guestTitle ${this.highlightSection ? 'selectedOrder' : ''} pointer font-small-3`}\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Click to assign unit\"\r\n          >\r\n            {`Book# ${this.eventData.BOOKING_NUMBER} , ${this.eventData.NAME}`}\r\n          </div>\r\n          <div class=\"row m-0 p-0 actionsContainer\">\r\n            <div class=\"d-inline-block p-0 selectContainer\">\r\n              <select class=\"form-control input-sm\" id={v4()} onChange={evt => this.onSelectRoom(evt)}>\r\n                <option value=\"\" selected={this.selectedRoom == -1}>\r\n                  Assign unit\r\n                </option>\r\n                {this.allRoomsList.map(room => (\r\n                  <option value={room.id} selected={this.selectedRoom == room.id}>\r\n                    {room.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            {this.highlightSection ? (\r\n              <div class=\"d-inline-block text-right buttonsContainer\">\r\n                <button type=\"button\" class=\"btn btn-secondary btn-sm\" onClick={evt => this.handleCloseAssignment(evt)}>\r\n                  X\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary btn-sm\" onClick={evt => this.handleAssignUnit(evt)} disabled={this.selectedRoom === -1}>\r\n                  Assign\r\n                </button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../../assets/feather/style.min.css\");\r\n@import url(\"../../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n","import {\r\n  Component,\r\n  Host,\r\n  Prop,\r\n  State,\r\n  h,\r\n  Event,\r\n  EventEmitter,\r\n} from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"igl-tba-category-view\",\r\n  styleUrl: \"igl-tba-category-view.css\",\r\n  scoped: true,\r\n})\r\nexport class IglTbaCategoryView {\r\n  @Event() assignUnitEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Prop() calendarData: { [key: string]: any };\r\n  @Prop() selectedDate;\r\n  @Prop() categoriesData: { [key: string]: any } = {};\r\n  @Prop() categoryId;\r\n  @Prop({ mutable: true }) eventDatas;\r\n  @Prop() categoryIndex;\r\n  @State() renderAgain: boolean = false;\r\n\r\n  // private localEventDatas;\r\n\r\n  componentWillLoad() {\r\n    // this.localEventDatas = this.eventDatas;\r\n  }\r\n\r\n  handleAssignRoomEvent(event: CustomEvent<{ [key: string]: any }>) {\r\n    event.stopImmediatePropagation();\r\n    event.stopPropagation();\r\n\r\n    const opt: { [key: string]: any } = event.detail;\r\n    this.eventDatas = this.eventDatas.filter(\r\n      (eventData) => eventData.ID != opt.data.ID\r\n    );\r\n    this.calendarData.bookingEvents.push(opt.data);\r\n    this.assignUnitEvent.emit({\r\n      key: \"assignUnit\",\r\n      data: {\r\n        RT_ID: this.categoryId,\r\n        selectedDate: this.selectedDate,\r\n        assignEvent: opt.data,\r\n        calendarData: this.calendarData,\r\n      },\r\n    });\r\n    // if(this.localEventDatas.length){\r\n    this.renderView();\r\n    // }\r\n  }\r\n\r\n  getEventView(categoryId, eventDatas) {\r\n    return eventDatas.map((eventData, ind) => (\r\n      <igl-tba-booking-view\r\n        calendarData={this.calendarData}\r\n        selectedDate={this.selectedDate}\r\n        eventData={eventData}\r\n        categoriesData={this.categoriesData}\r\n        categoryId={categoryId}\r\n        categoryIndex={this.categoryIndex}\r\n        eventIndex={ind}\r\n        onAssignRoomEvent={(evt) => this.handleAssignRoomEvent(evt)}\r\n      ></igl-tba-booking-view>\r\n    ));\r\n  }\r\n\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"sectionContainer\">\r\n          <div class=\"font-weight-bold mt-1 font-small-3\">\r\n            {this.categoriesData[this.categoryId].name}\r\n          </div>\r\n          {this.getEventView(this.categoryId, this.eventDatas)}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","@import url(\"../../../assets/feather/style.min.css\");\r\n@import url(\"../../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  display: block;\r\n}\r\n\r\n.tobeAssignedHeader {\r\n  font-weight: 500;\r\n  letter-spacing: 0.05rem;\r\n  font-size: 1.12rem;\r\n  padding-top: 5px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.closeBtn {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  cursor: pointer;\r\n  font-size: 1.75em;\r\n  line-height: 1em;\r\n  padding: 0.4rem;\r\n}\r\n\r\n.closeBtn:hover {\r\n  background-color: #f6f6f6;\r\n}\r\n\r\n.stickyHeader {\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: #ffffff;\r\n  z-index: 1;\r\n}\r\n\r\n.pointer {\r\n  cursor: pointer;\r\n}\r\n","import { Component, Host, h, Prop, Event, EventEmitter, State, Listen, Fragment } from '@stencil/core';\r\nimport { ToBeAssignedService } from '../../../services/toBeAssigned.service';\r\nimport { dateToFormattedString } from '../../../utils/utils';\r\n//import { updateCategories } from '../../../utils/events.utils';\r\n\r\n@Component({\r\n  tag: 'igl-to-be-assigned',\r\n  styleUrl: 'igl-to-be-assigned.css',\r\n  scoped: true,\r\n})\r\nexport class IglToBeAssigned {\r\n  @Prop() propertyid: number;\r\n  @Prop() from_date: string;\r\n  @Prop() to_date: string;\r\n  @Prop() loadingMessage: string = 'Fetching unassigned units';\r\n  @Prop({ mutable: true }) calendarData: { [key: string]: any };\r\n  @Event() optionEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event({ bubbles: true, composed: true })\r\n  reduceAvailableUnitEvent: EventEmitter<{ [key: string]: any }>;\r\n  @Event() showBookingPopup: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) addToBeAssignedEvent: EventEmitter;\r\n  @Event({ bubbles: true, composed: true })\r\n  highlightToBeAssignedBookingEvent: EventEmitter;\r\n  @State() showDatesList: boolean = false;\r\n  @State() renderAgain: boolean = false;\r\n  @State() orderedDatesList: any[] = [];\r\n  private isGotoToBeAssignedDate: boolean = false;\r\n  private isLoading: boolean = true;\r\n  private selectedDate = null;\r\n  private data: { [key: string]: any } = {};\r\n  private today = new Date();\r\n  private categoriesData: { [key: string]: any } = {};\r\n  private toBeAssignedService: ToBeAssignedService = new ToBeAssignedService();\r\n  private unassignedDates: any;\r\n  componentWillLoad() {\r\n    this.reArrangeData();\r\n  }\r\n  async updateCategories(key, calendarData) {\r\n    try {\r\n      let categorisedRooms = {};\r\n      const result = await this.toBeAssignedService.getUnassignedRooms(\r\n        this.propertyid,\r\n        dateToFormattedString(new Date(+key)),\r\n        calendarData.roomsInfo,\r\n        calendarData.formattedLegendData,\r\n      );\r\n      result.forEach(room => {\r\n        if (!categorisedRooms.hasOwnProperty(room.RT_ID)) {\r\n          categorisedRooms[room.RT_ID] = [room];\r\n        } else {\r\n          categorisedRooms[room.RT_ID].push(room);\r\n        }\r\n      });\r\n      this.unassignedDates[key].categories = categorisedRooms;\r\n    } catch (error) {\r\n      //  toastr.error(error);\r\n    }\r\n  }\r\n\r\n  async reArrangeData() {\r\n    try {\r\n      this.today.setHours(0, 0, 0, 0);\r\n      this.calendarData.roomsInfo.forEach(category => {\r\n        this.categoriesData[category.id] = {\r\n          name: category.name,\r\n          roomsList: category.physicalrooms,\r\n          roomIds: category.physicalrooms.map(room => {\r\n            return room.id;\r\n          }),\r\n        };\r\n      });\r\n\r\n      this.selectedDate = null;\r\n      //this.unassignedDates = await this.toBeAssignedService.getUnassignedDates(this.propertyid, dateToFormattedString(new Date()), this.to_date);\r\n      this.unassignedDates = this.calendarData.unassignedDates;\r\n\r\n      this.data = this.unassignedDates;\r\n      this.orderedDatesList = Object.keys(this.data).sort((a, b) => parseInt(a) - parseInt(b));\r\n\r\n      if (!this.selectedDate && this.orderedDatesList.length) {\r\n        this.selectedDate = this.orderedDatesList[0];\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching unassigned dates:', error);\r\n      //  toastr.error(error);\r\n    }\r\n  }\r\n  async componentDidLoad() {\r\n    setTimeout(() => {\r\n      if (!this.isGotoToBeAssignedDate && Object.keys(this.unassignedDates).length > 0) {\r\n        console.log(this.isGotoToBeAssignedDate);\r\n        const firstKey = Object.keys(this.unassignedDates)[0];\r\n\r\n        this.showForDate(firstKey);\r\n      }\r\n    }, 100);\r\n  }\r\n  @Listen('gotoToBeAssignedDate', { target: 'window' })\r\n  async gotoDate(event: CustomEvent) {\r\n    this.isGotoToBeAssignedDate = true;\r\n    this.showForDate(event.detail.data);\r\n    this.showDatesList = false;\r\n    this.renderView();\r\n  }\r\n\r\n  async showForDate(dateStamp) {\r\n    try {\r\n      this.isLoading = true;\r\n      if (this.showDatesList) {\r\n        this.showUnassignedDate();\r\n      }\r\n      await this.updateCategories(dateStamp, this.calendarData);\r\n      this.addToBeAssignedEvent.emit({ key: 'tobeAssignedEvents', data: [] });\r\n      this.showBookingPopup.emit({\r\n        key: 'calendar',\r\n        data: parseInt(dateStamp) - 86400000,\r\n      });\r\n      if (this.isGotoToBeAssignedDate) {\r\n        this.isGotoToBeAssignedDate = false;\r\n      }\r\n      this.isLoading = false;\r\n      this.selectedDate = dateStamp;\r\n    } catch (error) {\r\n      // toastr.error(error);\r\n    }\r\n  }\r\n\r\n  getDay(dt) {\r\n    const currentDate = new Date(dt);\r\n    const locale = 'default'; //'en-US';\r\n    const dayOfWeek = this.getLocalizedDayOfWeek(currentDate, locale);\r\n    // const monthName = currentDate.toLocaleString(\"default\", { month: 'short' })\r\n    return dayOfWeek + ' ' + currentDate.getDate() + ', ' + currentDate.getFullYear();\r\n  }\r\n\r\n  getLocalizedDayOfWeek(date, locale) {\r\n    const options = { weekday: 'short' };\r\n    return date.toLocaleDateString(locale, options);\r\n  }\r\n\r\n  handleOptionEvent(key, data = '') {\r\n    this.highlightToBeAssignedBookingEvent.emit({\r\n      key: 'highlightBookingId',\r\n      data: { bookingId: '----' },\r\n    });\r\n    this.addToBeAssignedEvent.emit({ key: 'tobeAssignedEvents', data: [] });\r\n    this.optionEvent.emit({ key, data });\r\n  }\r\n\r\n  showUnassignedDate() {\r\n    this.showDatesList = !this.showDatesList;\r\n  }\r\n\r\n  getToBeAssignedEntities() {\r\n    // toBeAssignedEvents\r\n  }\r\n\r\n  getCategoryView() {\r\n    if (this.orderedDatesList.length && this.selectedDate && this.data[this.selectedDate]) {\r\n      return Object.entries(this.data[this.selectedDate].categories).map(([id, eventDatas], ind) => (\r\n        <igl-tba-category-view\r\n          calendarData={this.calendarData}\r\n          selectedDate={this.selectedDate}\r\n          categoryId={id}\r\n          categoryIndex={ind}\r\n          categoriesData={this.categoriesData}\r\n          eventDatas={eventDatas}\r\n          onAssignUnitEvent={evt => this.handleAssignUnit(evt)}\r\n        ></igl-tba-category-view>\r\n      ));\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  async handleAssignUnit(event) {\r\n    event.stopImmediatePropagation();\r\n    if (event.detail.key !== 'assignUnit') return;\r\n    const assignmentDetails = event.detail.data;\r\n    const { selectedDate, RT_ID } = assignmentDetails;\r\n    const categories = this.data[selectedDate].categories;\r\n\r\n    this.removeEventFromCategory(assignmentDetails);\r\n    this.checkAndCleanEmptyCategories(assignmentDetails);\r\n    if (!categories[RT_ID]) {\r\n      this.renderView();\r\n    } else {\r\n      await this.updateSelectedDateCategories(assignmentDetails.selectedDate);\r\n      this.renderView();\r\n    }\r\n    this.emitUnitReductionEvent(assignmentDetails.selectedDate);\r\n  }\r\n\r\n  removeEventFromCategory(assignmentDetails) {\r\n    const { selectedDate, RT_ID, assignEvent } = assignmentDetails;\r\n    const categories = this.data[selectedDate].categories;\r\n    if (categories[RT_ID]) {\r\n      categories[RT_ID] = categories[RT_ID].filter(event => event.ID != assignEvent.ID);\r\n    }\r\n  }\r\n  emitUnitReductionEvent(selectedDate) {\r\n    this.reduceAvailableUnitEvent.emit({\r\n      key: 'reduceAvailableDays',\r\n      data: { selectedDate },\r\n    });\r\n  }\r\n\r\n  async updateSelectedDateCategories(selectedDate) {\r\n    if (selectedDate !== null) {\r\n      await this.updateCategories(selectedDate, this.calendarData);\r\n    }\r\n  }\r\n\r\n  checkAndCleanEmptyCategories(assignmentDetails) {\r\n    const { selectedDate, RT_ID } = assignmentDetails;\r\n    const categories = this.data[selectedDate].categories;\r\n\r\n    if (!categories[RT_ID]) {\r\n      delete categories[RT_ID];\r\n      if (!Object.keys(categories).length) {\r\n        delete this.data[selectedDate];\r\n        this.orderedDatesList = this.orderedDatesList.filter(date => date != selectedDate);\r\n        this.selectedDate = this.orderedDatesList.length ? this.orderedDatesList[0] : null;\r\n      }\r\n    }\r\n  }\r\n  renderView() {\r\n    this.renderAgain = !this.renderAgain;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class=\"tobeAssignedContainer pr-1 text-left\">\r\n        <div>\r\n          <div>\r\n            <div class=\"stickyHeader\">\r\n              <div class=\"tobeAssignedHeader pt-1\">Assignments</div>\r\n              <div class=\"closeBtn pt-1\" onClick={() => this.handleOptionEvent('closeSideMenu')}>\r\n                <i class=\"ft-chevrons-left\"></i>\r\n              </div>\r\n              <hr />\r\n              {this.isLoading ? (\r\n                <p>{this.loadingMessage}</p>\r\n              ) : (\r\n                <Fragment>\r\n                  {this.orderedDatesList.length ? (\r\n                    <div class={`text-center ` + (this.showDatesList ? 'show' : '')}>\r\n                      <div onClick={() => this.showUnassignedDate()}>\r\n                        <span class=\"font-weight-bold\">{this.data[this.selectedDate].dateStr}</span>\r\n                        <i class=\"la la-angle-down ml-2\"></i>\r\n                      </div>\r\n                      {this.showDatesList ? (\r\n                        <div class=\"dropdown-menu dropdown-menu-right full-width\">\r\n                          {this.orderedDatesList.map(ordDate => (\r\n                            <div class=\"pointer dropdown-item pointer\" onClick={() => this.showForDate(ordDate)}>\r\n                              {this.data[ordDate].dateStr}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      ) : null}\r\n                    </div>\r\n                  ) : (\r\n                    'All bookings assigned'\r\n                  )}\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n            {!this.isLoading && (\r\n              <div class=\"scrollabledArea\">\r\n                {this.orderedDatesList.length ? (\r\n                  Object.keys(this.data[this.selectedDate].categories).length ? (\r\n                    this.getCategoryView()\r\n                  ) : (\r\n                    <div class=\"mt-1\">All assigned for this day.</div>\r\n                  )\r\n                ) : null}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport class RoomService {\r\n  public async fetchData(\r\n    id: number,\r\n    language: string\r\n  ): Promise<{ [key: string]: any }> {\r\n    try {\r\n      const token = JSON.parse(sessionStorage.getItem(\"token\"));\r\n      if (token !== null) {\r\n        const { data } = await axios.post(\r\n          `/Get_Exposed_Property?Ticket=${token}`,\r\n          { id, language }\r\n        );\r\n        if (data.ExceptionMsg !== \"\") {\r\n          throw new Error(data.ExceptionMsg);\r\n        }\r\n        return data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      throw new Error(error);\r\n    }\r\n  }\r\n}\r\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","@import url('../../assets/feather/style.min.css');\r\n@import url('../../assets/fontawesome/css/all.css');\r\n@import url('../../assets/line-awesome/css/line-awesome.min.css');\r\n:host {\r\n  display: block;\r\n  position: relative;\r\n  background-color: #ffffff;\r\n  height: 100%;\r\n  text-align: center;\r\n}\r\n\r\n.igl-calendar {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  height: 100%;\r\n}\r\n\r\n.calendarScrollContainer div {\r\n  position: relative;\r\n}\r\n\r\n.calendarScrollContainer {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  position: relative;\r\n  white-space: nowrap;\r\n  border-left: 2px solid grey;\r\n}\r\n\r\n.showToBeAssigned,\r\n.showLegend {\r\n  grid-template-columns: 330px 1fr;\r\n}\r\n\r\n#calendarContainer {\r\n  position: absolute;\r\n}\r\n\r\ndiv {\r\n  position: relative;\r\n}\r\n\r\n.legendContainer,\r\n.tobeAssignedContainer {\r\n  display: none;\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  padding-left: 0.5em !important;\r\n  padding-right: 0.5em !important;\r\n}\r\n\r\n.showToBeAssigned .tobeAssignedContainer {\r\n  display: block;\r\n}\r\n\r\n.showLegend .legendContainer {\r\n  display: block;\r\n}\r\n\r\n.tobeBooked {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  text-align: left;\r\n}\r\n","import { Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h } from '@stencil/core';\r\nimport { RoomService } from '../../services/room.service';\r\nimport { BookingService } from '../../services/booking.service';\r\nimport { addTwoMonthToDate, computeEndDate, convertDMYToISO, dateToFormattedString, formatLegendColors, getNextDay } from '../../utils/utils';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport { EventsService } from '../../services/events.service';\r\nimport { ICountry, RoomBlockDetails, RoomBookingDetails, bookingReasons } from '../../models/IBooking';\r\nimport moment from 'moment';\r\nimport { ToBeAssignedService } from '../../services/toBeAssigned.service';\r\nimport { transformNewBLockedRooms, transformNewBooking } from '../../utils/booking';\r\n\r\n@Component({\r\n  tag: 'igloo-calendar',\r\n  styleUrl: 'igloo-calendar.css',\r\n  scoped: true,\r\n})\r\nexport class IglooCalendar {\r\n  @Prop() propertyid: number;\r\n  @Prop() from_date: string;\r\n  @Prop() to_date: string;\r\n  @Prop() language: string;\r\n  @Prop() baseurl: string;\r\n  @Prop() loadingMessage: string;\r\n  @Prop() currencyName: string;\r\n  @Prop({ reflect: true }) ticket: string = '';\r\n  @Element() private element: HTMLElement;\r\n  @Event({ bubbles: true, composed: true })\r\n  dragOverHighlightElement: EventEmitter;\r\n  @Event({ bubbles: true, composed: true }) moveBookingTo: EventEmitter;\r\n\r\n  @State() calendarData: { [key: string]: any } = new Object();\r\n  @State() days: { [key: string]: any }[] = new Array();\r\n  @State() scrollViewDragging: boolean = false;\r\n\r\n  @State() bookingItem: { [key: string]: any } = null;\r\n  @State() showLegend: boolean = false;\r\n  @State() showPaymentDetails: boolean = false;\r\n  @State() showToBeAssigned: boolean = false;\r\n  @State() unassignedDates = {};\r\n  private bookingService: BookingService = new BookingService();\r\n  private countryNodeList: ICountry[] = [];\r\n  private visibleCalendarCells: { x: any[]; y: any[] } = { x: [], y: [] };\r\n  private scrollContainer: HTMLElement;\r\n  private today: String = '';\r\n  private roomService: RoomService = new RoomService();\r\n  private eventsService = new EventsService();\r\n  private toBeAssignedService = new ToBeAssignedService();\r\n  private socket: any;\r\n  private reachedEndOfCalendar = false;\r\n  @Watch('ticket')\r\n  ticketChanged() {\r\n    sessionStorage.setItem('token', JSON.stringify(this.ticket));\r\n    this.initializeApp();\r\n  }\r\n\r\n  componentWillLoad() {\r\n    if (this.baseurl) {\r\n      axios.defaults.baseURL = this.baseurl;\r\n    }\r\n\r\n    if (this.ticket !== '') {\r\n      this.initializeApp();\r\n    }\r\n  }\r\n  initializeApp() {\r\n    try {\r\n      this.roomService.fetchData(this.propertyid, this.language).then(roomResp => {\r\n        this.setRoomsData(roomResp);\r\n        this.bookingService.getCalendarData(this.propertyid, this.from_date, this.to_date).then(async bookingResp => {\r\n          this.countryNodeList = await this.bookingService.getCountries(this.language);\r\n          this.calendarData.currency = roomResp['My_Result'].currency;\r\n          this.calendarData.legendData = this.getLegendData(roomResp);\r\n          this.calendarData.is_vacation_rental = roomResp['My_Result'].is_vacation_rental;\r\n          this.calendarData.startingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.FROM).getTime();\r\n          this.calendarData.endingDate = new Date(bookingResp.My_Params_Get_Rooming_Data.TO).getTime();\r\n          this.calendarData.formattedLegendData = formatLegendColors(this.calendarData.legendData);\r\n          this.calendarData.bookingEvents = bookingResp.myBookings || [];\r\n          this.calendarData.toBeAssignedEvents = [];\r\n          let paymentMethods = roomResp['My_Result']['allowed_payment_methods'] as any[];\r\n          this.showPaymentDetails = paymentMethods.some(item => item.code === '001' || item.code === '004');\r\n          this.updateBookingEventsDateRange(this.calendarData.bookingEvents);\r\n          this.updateBookingEventsDateRange(this.calendarData.toBeAssignedEvents);\r\n          this.today = this.transformDateForScroll(new Date());\r\n          let startingDay: Date = new Date(this.getStartingDateOfCalendar());\r\n          startingDay.setHours(0, 0, 0, 0);\r\n          this.days = bookingResp.days;\r\n          this.calendarData.days = this.days;\r\n          this.calendarData.monthsInfo = bookingResp.months;\r\n          setTimeout(() => {\r\n            this.scrollToElement(this.today);\r\n          }, 200);\r\n          if (!this.calendarData.is_vacation_rental) {\r\n            const data = await this.toBeAssignedService.getUnassignedDates(this.propertyid, dateToFormattedString(new Date()), this.to_date);\r\n            this.unassignedDates = { ...this.unassignedDates, ...data };\r\n            this.calendarData.unassignedDates = data;\r\n          }\r\n          this.socket = io('https://realtime.igloorooms.com/');\r\n          this.socket.on('MSG', async msg => {\r\n            let msgAsObject = JSON.parse(msg);\r\n            if (msgAsObject) {\r\n              const { REASON, KEY, PAYLOAD }: { REASON: bookingReasons; KEY: any; PAYLOAD: any } = msgAsObject;\r\n              if (KEY.toString() === this.propertyid.toString()) {\r\n                let result: any;\r\n                if (REASON === 'DELETE_CALENDAR_POOL') {\r\n                  result = PAYLOAD;\r\n                } else {\r\n                  result = JSON.parse(PAYLOAD);\r\n                }\r\n                console.log(result, REASON);\r\n                const resasons: bookingReasons[] = ['DORESERVATION', 'BLOCK_EXPOSED_UNIT', 'ASSIGN_EXPOSED_ROOM', 'REALLOCATE_EXPOSED_ROOM_BLOCK', 'REALLOCATE_EXPOSED_ROOM_BOOK'];\r\n                if (resasons.includes(REASON)) {\r\n                  let transformedBooking: RoomBookingDetails[] | RoomBlockDetails[];\r\n                  if (REASON === 'BLOCK_EXPOSED_UNIT' || REASON === 'REALLOCATE_EXPOSED_ROOM_BLOCK') {\r\n                    transformedBooking = [await transformNewBLockedRooms(result)];\r\n                  } else {\r\n                    transformedBooking = transformNewBooking(result);\r\n                  }\r\n                  this.AddOrUpdateRoomBookings(transformedBooking, undefined);\r\n                } else if (REASON === 'DELETE_CALENDAR_POOL') {\r\n                  this.calendarData = {\r\n                    ...this.calendarData,\r\n                    bookingEvents: this.calendarData.bookingEvents.filter(e => e.POOL !== result),\r\n                  };\r\n                } else {\r\n                  return;\r\n                }\r\n              }\r\n            }\r\n          });\r\n        });\r\n      });\r\n    } catch (error) {}\r\n  }\r\n  componentDidLoad() {\r\n    this.scrollToElement(this.today);\r\n  }\r\n  @Listen('deleteButton')\r\n  async handleDeleteEvent(ev: CustomEvent) {\r\n    try {\r\n      ev.stopImmediatePropagation();\r\n      ev.preventDefault();\r\n      // const bookingEvent = [...this.calendarData.bookingEvents];\r\n      await this.eventsService.deleteEvent(ev.detail);\r\n\r\n      // this.calendarData = {\r\n      //   ...this.calendarData,\r\n      //   bookingEvents: bookingEvent.filter(e => e.POOL !== ev.detail),\r\n      // };\r\n    } catch (error) {\r\n      //toastr.error(error);\r\n    }\r\n  }\r\n  checkBookingAvailability(data) {\r\n    return this.calendarData.bookingEvents.some(\r\n      booking => booking.ID === data.ID || (booking.FROM_DATE === data.FROM_DATE && booking.TO_DATE === data.TO_DATE && booking.PR_ID === data.PR_ID),\r\n    );\r\n  }\r\n  updateBookingEventsDateRange(eventData) {\r\n    eventData.forEach(bookingEvent => {\r\n      bookingEvent.legendData = this.calendarData.formattedLegendData;\r\n      bookingEvent.defaultDateRange = {};\r\n      bookingEvent.defaultDateRange.fromDate = new Date(bookingEvent.FROM_DATE + 'T00:00:00');\r\n      bookingEvent.defaultDateRange.fromDateStr = this.getDateStr(bookingEvent.defaultDateRange.fromDate);\r\n      bookingEvent.defaultDateRange.fromDateTimeStamp = bookingEvent.defaultDateRange.fromDate.getTime();\r\n\r\n      bookingEvent.defaultDateRange.toDate = new Date(bookingEvent.TO_DATE + 'T00:00:00');\r\n      bookingEvent.defaultDateRange.toDateStr = this.getDateStr(bookingEvent.defaultDateRange.toDate);\r\n      bookingEvent.defaultDateRange.toDateTimeStamp = bookingEvent.defaultDateRange.toDate.getTime();\r\n\r\n      bookingEvent.defaultDateRange.dateDifference = bookingEvent.NO_OF_DAYS;\r\n      bookingEvent.roomsInfo = [...this.calendarData.roomsInfo];\r\n    });\r\n  }\r\n  setRoomsData(roomServiceResp) {\r\n    let roomsData: { [key: string]: any }[] = new Array();\r\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\r\n      roomsData = roomServiceResp.My_Result.roomtypes;\r\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\r\n        roomCategory.expanded = true;\r\n      });\r\n    }\r\n    this.calendarData.roomsInfo = roomsData;\r\n  }\r\n\r\n  getLegendData(aData) {\r\n    return aData['My_Result'].calendar_legends;\r\n  }\r\n\r\n  getStartingDateOfCalendar() {\r\n    return this.calendarData.startingDate;\r\n  }\r\n\r\n  getEndingDateOfCalendar() {\r\n    return this.calendarData.endingDate;\r\n  }\r\n\r\n  getDay(dt) {\r\n    const currentDate = new Date(dt);\r\n    const locale = 'en-US';\r\n    const dayOfWeek = this.getLocalizedDayOfWeek(currentDate, locale);\r\n    return dayOfWeek + ' ' + currentDate.getDate();\r\n  }\r\n\r\n  getLocalizedDayOfWeek(date, locale) {\r\n    const options = { weekday: 'short' };\r\n    return date.toLocaleDateString(locale, options);\r\n  }\r\n\r\n  getLocalizedMonth(date, locale = 'default') {\r\n    return date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\r\n  }\r\n\r\n  getDateStr(date, locale = 'default') {\r\n    return date.getDate() + ' ' + date.toLocaleString(locale, { month: 'short' }) + ' ' + date.getFullYear();\r\n  }\r\n  async addNextTwoMonthsToCalendar() {\r\n    const nextTwoMonths = addTwoMonthToDate(new Date(this.calendarData.endingDate));\r\n    const nextDay = getNextDay(new Date(this.calendarData.endingDate));\r\n    const results = await this.bookingService.getCalendarData(this.propertyid, nextDay, nextTwoMonths);\r\n    this.calendarData.endingDate = new Date(nextTwoMonths).getTime();\r\n    const newBookings = results.myBookings || [];\r\n    this.updateBookingEventsDateRange(newBookings);\r\n    this.days = [...this.days, ...results.days];\r\n    if (this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].monthName === results.months[0].monthName) {\r\n      this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].daysCount =\r\n        this.calendarData.monthsInfo[this.calendarData.monthsInfo.length - 1].daysCount + results.months[0].daysCount;\r\n    }\r\n    let newMonths = [...results.months];\r\n    newMonths.shift();\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      days: this.days,\r\n      monthsInfo: [...this.calendarData.monthsInfo, ...newMonths],\r\n      bookingEvents: [...this.calendarData.bookingEvents, ...newBookings],\r\n    };\r\n  }\r\n  scrollToElement(goToDate) {\r\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\r\n    const topLeftCell = this.element.querySelector('.topLeftCell');\r\n    const gotoDay = this.element.querySelector('.day-' + goToDate);\r\n    if (gotoDay) {\r\n      this.scrollContainer.scrollTo({ left: 0 });\r\n      const gotoRect = gotoDay.getBoundingClientRect();\r\n      const containerRect = this.scrollContainer.getBoundingClientRect();\r\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\r\n      this.scrollContainer.scrollTo({\r\n        left: gotoRect.left - containerRect.left - topLeftCellRect.width - gotoRect.width,\r\n      });\r\n    }\r\n  }\r\n  private AddOrUpdateRoomBookings(data: RoomBlockDetails[] | RoomBookingDetails[], pool: string | undefined) {\r\n    let bookings = [...this.calendarData.bookingEvents];\r\n    data.forEach(d => {\r\n      if (!this.checkBookingAvailability(d)) {\r\n        bookings = bookings.filter(booking => booking.ID !== d.ID);\r\n      }\r\n    });\r\n    this.updateBookingEventsDateRange(data);\r\n    if (pool) {\r\n      bookings = bookings.filter(booking => booking.POOL === pool);\r\n    }\r\n    data.forEach(d => {\r\n      if (!bookings.some(booking => booking.ID === d.ID)) {\r\n        bookings.push(d);\r\n      }\r\n    });\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: bookings,\r\n    };\r\n    setTimeout(() => {\r\n      this.scrollToElement(this.transformDateForScroll(new Date(data[0].FROM_DATE)));\r\n    }, 200);\r\n  }\r\n  // @Listen('bookingCreated')\r\n  // onBookingCreation(event: CustomEvent<{ pool?: string; data: RoomBookingDetails[] }>) {\r\n  //   event.stopPropagation();\r\n  //   event.stopImmediatePropagation();\r\n  //   const { data, pool } = event.detail;\r\n  //   this.AddOrUpdateRoomBookings(data, pool);\r\n  // }\r\n\r\n  // @Listen('blockedCreated')\r\n  // onBlockCreation(event: CustomEvent<RoomBlockDetails>) {\r\n  //   event.stopPropagation();\r\n  //   event.stopImmediatePropagation();\r\n  //   let data = [event.detail];\r\n  //   this.AddOrUpdateRoomBookings(data, undefined);\r\n  // }\r\n  private transformDateForScroll(date: Date) {\r\n    return moment(date).format('D_M_YYYY');\r\n  }\r\n  @Listen('scrollPageToRoom', { target: 'window' })\r\n  scrollPageToRoom(event: CustomEvent) {\r\n    let targetScrollClass = event.detail.refClass;\r\n    this.scrollContainer = this.scrollContainer || this.element.querySelector('.calendarScrollContainer');\r\n    const topLeftCell = this.element.querySelector('.topLeftCell');\r\n    const gotoRoom = this.element.querySelector('.' + targetScrollClass);\r\n    if (gotoRoom) {\r\n      this.scrollContainer.scrollTo({ top: 0 });\r\n      const gotoRect = gotoRoom.getBoundingClientRect();\r\n      const containerRect = this.scrollContainer.getBoundingClientRect();\r\n      const topLeftCellRect = topLeftCell.getBoundingClientRect();\r\n      this.scrollContainer.scrollTo({\r\n        top: gotoRect.top - containerRect.top - topLeftCellRect.height - gotoRect.height,\r\n      });\r\n    }\r\n  }\r\n  @Listen('addBookingDatasEvent')\r\n  handleBookingDatasChange(event: CustomEvent) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    let bookings = [...this.calendarData.bookingEvents];\r\n    bookings = bookings.filter(bookingEvent => bookingEvent.ID !== 'NEW_TEMP_EVENT');\r\n    bookings.push(...event.detail);\r\n    this.updateBookingEventsDateRange(event.detail);\r\n    this.calendarData = {\r\n      ...this.calendarData,\r\n      bookingEvents: bookings,\r\n    };\r\n  }\r\n\r\n  shouldRenderCalendarView() {\r\n    // console.log(\"rendering...\")\r\n    return this.calendarData && this.calendarData.days && this.calendarData.days.length;\r\n  }\r\n\r\n  onOptionSelect(event: CustomEvent<{ [key: string]: any }>) {\r\n    const opt: { [key: string]: any } = event.detail;\r\n    const calendarElement = this.element.querySelector('#iglooCalendar');\r\n    switch (opt.key) {\r\n      case 'showAssigned':\r\n        calendarElement.classList.remove('showLegend');\r\n        calendarElement.classList.remove('showToBeAssigned');\r\n        calendarElement.classList.toggle('showToBeAssigned');\r\n\r\n        this.showLegend = false;\r\n        this.showToBeAssigned = true;\r\n        break;\r\n      case 'showLegend':\r\n        calendarElement.classList.remove('showToBeAssigned');\r\n        calendarElement.classList.remove('showLegend');\r\n        calendarElement.classList.toggle('showLegend');\r\n\r\n        this.showLegend = true;\r\n        this.showToBeAssigned = false;\r\n        break;\r\n      case 'calendar':\r\n        let dt = new Date(opt.data);\r\n        this.scrollToElement(dt.getDate() + '_' + (dt.getMonth() + 1) + '_' + dt.getFullYear());\r\n        break;\r\n      case 'search':\r\n        break;\r\n      case 'add':\r\n        this.bookingItem = opt.data;\r\n        break;\r\n      case 'gotoToday':\r\n        this.scrollToElement(this.today);\r\n        break;\r\n      case 'closeSideMenu':\r\n        this.closeSideMenu();\r\n        break;\r\n    }\r\n  }\r\n\r\n  closeSideMenu() {\r\n    const calendarElement = this.element.querySelector('#iglooCalendar');\r\n    calendarElement.classList.remove('showToBeAssigned');\r\n    calendarElement.classList.remove('showLegend');\r\n\r\n    this.showLegend = false;\r\n    this.showToBeAssigned = false;\r\n  }\r\n\r\n  scrollViewDragPos = { top: 0, left: 0, x: 0, y: 0 };\r\n  dragScrollContent(event: MouseEvent) {\r\n    this.scrollViewDragging = false;\r\n    let isPreventPageScroll = event && event.target ? this.hasAncestorWithClass(event.target as HTMLElement, 'preventPageScroll') : false;\r\n    if (!isPreventPageScroll) {\r\n      this.scrollViewDragPos = {\r\n        // The current scroll\r\n        left: this.scrollContainer.scrollLeft,\r\n        top: this.scrollContainer.scrollTop,\r\n        // Get the current mouse position\r\n        x: event.clientX,\r\n        y: event.clientY,\r\n      };\r\n      document.addEventListener('mousemove', this.onScrollContentMoveHandler);\r\n      document.addEventListener('mouseup', this.onScrollContentMoveEndHandler);\r\n    }\r\n  }\r\n\r\n  onScrollContentMoveHandler: EventListener = (event: MouseEvent) => {\r\n    // How far the mouse has been moved\r\n    const dx = event.clientX - this.scrollViewDragPos.x;\r\n    const dy = event.clientY - this.scrollViewDragPos.y;\r\n\r\n    // Scroll the element\r\n    this.scrollContainer.scrollTop = this.scrollViewDragPos.top - dy;\r\n    this.scrollContainer.scrollLeft = this.scrollViewDragPos.left - dx;\r\n    if (Math.abs(dx) > 5 || Math.abs(dy) > 5) {\r\n      this.scrollViewDragging = true;\r\n    }\r\n  };\r\n\r\n  onScrollContentMoveEndHandler: EventListener = () => {\r\n    document.removeEventListener('mousemove', this.onScrollContentMoveHandler);\r\n    document.removeEventListener('mouseup', this.onScrollContentMoveEndHandler);\r\n  };\r\n\r\n  calendarScrolling() {\r\n    const containerRect = this.scrollContainer.getBoundingClientRect();\r\n    let leftSideMenuSize = 170;\r\n    let maxWidth = containerRect.width - leftSideMenuSize;\r\n    let leftX = containerRect.x + leftSideMenuSize;\r\n    let rightX = containerRect.x + containerRect.width;\r\n\r\n    let cells = Array.from(this.element.querySelectorAll('.monthCell')) as HTMLElement[];\r\n\r\n    if (cells.length) {\r\n      cells.map(async (monthContainer: HTMLElement) => {\r\n        let monthRect = monthContainer.getBoundingClientRect();\r\n        if (cells.indexOf(monthContainer) === cells.length - 1) {\r\n          if (monthRect.x + monthRect.width <= rightX && !this.reachedEndOfCalendar) {\r\n            this.reachedEndOfCalendar = true;\r\n            await this.addNextTwoMonthsToCalendar();\r\n            this.reachedEndOfCalendar = false;\r\n          }\r\n        }\r\n        if (monthRect.x + monthRect.width < leftX) {\r\n          // item end is scrolled outside view, in -x\r\n        } else if (monthRect.x > rightX) {\r\n          // item is outside scrollview, in +x\r\n        } else {\r\n          let titleElement = monthContainer.querySelector('.monthTitle') as HTMLElement;\r\n          let marginLeft = 0;\r\n          let monthWidth = monthRect.width;\r\n          if (monthRect.x < leftX) {\r\n            marginLeft = Math.abs(monthRect.x) - leftX;\r\n            marginLeft = monthRect.x < 0 ? Math.abs(monthRect.x) + leftX : Math.abs(marginLeft);\r\n            monthWidth = monthRect.x + monthRect.width > rightX ? maxWidth : monthRect.x + monthRect.width - leftX;\r\n          } else {\r\n            monthWidth = maxWidth - monthWidth > monthWidth ? monthWidth : maxWidth - monthRect.x + leftX;\r\n          }\r\n          titleElement.style.marginLeft = marginLeft + 'px';\r\n          titleElement.style.width = monthWidth + 'px';\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  hasAncestorWithClass(element: HTMLElement, className: string): boolean {\r\n    let currentElement = element;\r\n    while (currentElement !== null) {\r\n      if (currentElement.matches(`.${className}`)) {\r\n        return true;\r\n      }\r\n      currentElement = currentElement.parentElement;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  @Listen('showBookingPopup', { target: 'window' })\r\n  showBookingPopupEventDataHandler(event: CustomEvent) {\r\n    event.preventDefault();\r\n    event.stopImmediatePropagation();\r\n    this.onOptionSelect(event);\r\n    //console.log(\"show booking event\", event);\r\n  }\r\n\r\n  @Listen('updateEventData')\r\n  updateEventDataHandler(event: CustomEvent) {\r\n    let bookedData = this.calendarData.bookingEvents.find(bookedEvent => bookedEvent.id === event.detail.id);\r\n    if (bookedData && event.detail && event.detail.data) {\r\n      Object.entries(event.detail.data).forEach(([key, value]) => {\r\n        bookedData[key] = value;\r\n      });\r\n    }\r\n  }\r\n\r\n  @Listen('dragOverEventData')\r\n  dragOverEventDataHandler(event: CustomEvent) {\r\n    if (event.detail.id === 'CALCULATE_DRAG_OVER_BOUNDS') {\r\n      let topLeftCell = document.querySelector('igl-cal-header .topLeftCell') as HTMLElement;\r\n      let containerDays = document.querySelectorAll('.headersContainer .headerCell');\r\n      let containerRooms = document.querySelectorAll('.bodyContainer .roomRow .roomTitle');\r\n      this.visibleCalendarCells = { x: [], y: [] };\r\n\r\n      containerDays.forEach(element => {\r\n        const htmlElement = element as HTMLElement;\r\n        this.visibleCalendarCells.x.push({\r\n          left: htmlElement.offsetLeft + topLeftCell.offsetWidth,\r\n          width: htmlElement.offsetWidth,\r\n          id: htmlElement.getAttribute('data-day'),\r\n        });\r\n      });\r\n\r\n      containerRooms.forEach(element => {\r\n        const htmlElement = element as HTMLElement;\r\n        this.visibleCalendarCells.y.push({\r\n          top: htmlElement.offsetTop,\r\n          height: htmlElement.offsetHeight,\r\n          id: htmlElement.getAttribute('data-room'),\r\n        });\r\n      });\r\n      this.highlightDragOver(true, event.detail.data);\r\n    } else if (event.detail.id === 'DRAG_OVER') {\r\n      this.highlightDragOver(true, event.detail.data);\r\n    } else if (event.detail.id === 'DRAG_OVER_END') {\r\n      this.highlightDragOver(false, event.detail.data);\r\n    } else if (event.detail.id === 'STRETCH_OVER_END') {\r\n      this.highlightDragOver(false, event.detail.data);\r\n    }\r\n  }\r\n\r\n  async highlightDragOver(hightLightElement, currentPosition) {\r\n    let xElement, yElement;\r\n    if (currentPosition) {\r\n      xElement = this.visibleCalendarCells.x.find(pos => pos.left < currentPosition.x && currentPosition.x <= pos.left + pos.width);\r\n      yElement = this.visibleCalendarCells.y.find(pos => pos.top < currentPosition.y && currentPosition.y <= pos.top + pos.height);\r\n    }\r\n    // console.log(hightLightElement+\":::\"+yElement.id+\"_\"+xElement.id);\r\n    if (hightLightElement && xElement && yElement) {\r\n      this.dragOverHighlightElement.emit({\r\n        dragOverElement: yElement.id + '_' + xElement.id,\r\n      });\r\n    } else {\r\n      this.dragOverHighlightElement.emit({ dragOverElement: '' });\r\n    }\r\n    if (!hightLightElement) {\r\n      this.moveBookingTo.emit({\r\n        bookingId: currentPosition.id,\r\n        fromRoomId: currentPosition.fromRoomId,\r\n        toRoomId: (yElement && yElement.id) || 'revert',\r\n        moveToDay: (xElement && xElement.id) || 'revert',\r\n        pool: currentPosition.pool,\r\n        from_date: convertDMYToISO(xElement && xElement.id),\r\n        to_date: computeEndDate(xElement && xElement.id, currentPosition.nbOfDays),\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <ir-interceptor></ir-interceptor>\r\n        <ir-common></ir-common>\r\n        <div id=\"iglooCalendar\" class=\"igl-calendar\">\r\n          {this.shouldRenderCalendarView() ? (\r\n            [\r\n              this.showToBeAssigned ? (\r\n                <igl-to-be-assigned\r\n                  loadingMessage={'Fetching unassigned units'}\r\n                  to_date={this.to_date}\r\n                  from_date={this.from_date}\r\n                  propertyid={this.propertyid}\r\n                  class=\"tobeAssignedContainer\"\r\n                  calendarData={this.calendarData}\r\n                  onOptionEvent={evt => this.onOptionSelect(evt)}\r\n                ></igl-to-be-assigned>\r\n              ) : null,\r\n              this.showLegend ? (\r\n                <igl-legends class=\"legendContainer\" legendData={this.calendarData.legendData} onOptionEvent={evt => this.onOptionSelect(evt)}></igl-legends>\r\n              ) : null,\r\n              <div class=\"calendarScrollContainer\" onMouseDown={event => this.dragScrollContent(event)} onScroll={() => this.calendarScrolling()}>\r\n                <div id=\"calendarContainer\">\r\n                  <igl-cal-header\r\n                    unassignedDates={this.unassignedDates}\r\n                    to_date={this.to_date}\r\n                    propertyid={this.propertyid}\r\n                    today={this.today}\r\n                    calendarData={this.calendarData}\r\n                    onOptionEvent={evt => this.onOptionSelect(evt)}\r\n                  ></igl-cal-header>\r\n                  <igl-cal-body\r\n                    countryNodeList={this.countryNodeList}\r\n                    currency={this.calendarData.currency}\r\n                    today={this.today}\r\n                    isScrollViewDragging={this.scrollViewDragging}\r\n                    calendarData={this.calendarData}\r\n                  ></igl-cal-body>\r\n                  <igl-cal-footer today={this.today} calendarData={this.calendarData} onOptionEvent={evt => this.onOptionSelect(evt)}></igl-cal-footer>\r\n                </div>\r\n              </div>,\r\n            ]\r\n          ) : (\r\n            <ir-loading-screen message=\"Preparing Calendar Data\"></ir-loading-screen>\r\n          )}\r\n        </div>\r\n        {this.bookingItem && (\r\n          <igl-book-property\r\n            showPaymentDetails={this.showPaymentDetails}\r\n            countryNodeList={this.countryNodeList}\r\n            currency={this.calendarData.currency}\r\n            language={this.language}\r\n            propertyid={this.propertyid}\r\n            bookingData={this.bookingItem}\r\n            onCloseBookingWindow={_ => (this.bookingItem = null)}\r\n          ></igl-book-property>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","import { IrOnlineResource } from './models';\r\nexport const onlineResources: IrOnlineResource[] = [\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/jquery.min.js\",\r\n  // },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i%7CQuicksand:300,400,500,700',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/bootstrap-extended.css',\r\n  },\r\n  { isCSS: true, link: 'https://x.igloorooms.com/app-assets/css/colors.css' },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/core/menu/menu-types/horizontal-menu.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/core/colors/palette-gradient.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/components.css',\r\n  },\r\n  { isCSS: true, link: 'https://x.igloorooms.com/assets/css/style.css' },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/icheck.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/vendors/css/forms/icheck/custom.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/app-assets/css/pages/login-register.css',\r\n  },\r\n  {\r\n    isCSS: true,\r\n    link: 'https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.css',\r\n  },\r\n\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/moment.min.js\",\r\n  // },\r\n  // {\r\n  //   isJS: true,\r\n  //   link: \"https://x.igloorooms.com/manage/micro/app-assets/required/assets/scripts/daterangepicker/daterangepicker.js\",\r\n  // },\r\n];\r\n","import { Component, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport { IrOnlineResource } from '../../common/models';\r\nimport { onlineResources } from '../../common/ir.common.resources';\r\n\r\n@Component({\r\n  tag: 'ir-common',\r\n})\r\nexport class IrCommon {\r\n  @Prop({ reflect: true }) extraResources: string = '';\r\n  @State() resources: IrOnlineResource[] = onlineResources;\r\n  componentWillLoad() {\r\n    this.parseRefs();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.initializeStyles();\r\n  }\r\n\r\n  @Watch('extraResources')\r\n  hrefsChanged() {\r\n    this.parseRefs();\r\n    this.initializeStyles();\r\n  }\r\n\r\n  private parseRefs() {\r\n    if (this.extraResources !== '') this.resources.push(JSON.parse(this.extraResources));\r\n  }\r\n\r\n  private appendTag(tagName: string, attributes: any) {\r\n    const tag = document.createElement(tagName);\r\n    const selectorParts = [];\r\n\r\n    Object.keys(attributes).forEach(attr => {\r\n      tag.setAttribute(attr, attributes[attr]);\r\n      selectorParts.push(`[${attr}=\"${attributes[attr]}\"]`);\r\n    });\r\n\r\n    const selector = `${tagName}${selectorParts.join('')}`;\r\n    const existingTag = document.querySelector(selector);\r\n\r\n    if (!existingTag) {\r\n      document.head.appendChild(tag);\r\n    }\r\n  }\r\n\r\n  private initializeStyles() {\r\n    this.resources.forEach(res => {\r\n      if (res.isCSS) {\r\n        this.appendTag('link', {\r\n          href: res.link,\r\n          rel: 'stylesheet',\r\n          type: 'text/css',\r\n        });\r\n      }\r\n      if (res.isJS) {\r\n        this.appendTag('script', {\r\n          src: res.link,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <slot></slot>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n","\r\n.date-range-input {\r\n  border: 0;\r\n  outline: 0;\r\n  margin: 0;\r\n  flex: 1;\r\n}\r\n.date-range-input:focus {\r\n  border: 0;\r\n  outline: 0;\r\n}\r\n","import {\r\n  Component,\r\n  h,\r\n  Element,\r\n  Prop,\r\n  Event,\r\n  EventEmitter,\r\n} from \"@stencil/core\";\r\nimport moment from \"moment\";\r\n\r\n@Component({\r\n  tag: \"ir-date-picker\",\r\n  styleUrl: \"ir-date-picker.css\",\r\n  scoped: true,\r\n})\r\nexport class IrDatePicker {\r\n  @Element() private element: HTMLElement;\r\n  @Prop({ reflect: true }) fromDate: Date;\r\n  @Prop({ reflect: true }) toDate: Date;\r\n\r\n  @Prop({ reflect: true }) opens: \"left\" | \"right\" | \"center\";\r\n  @Prop({ reflect: true }) autoApply: boolean;\r\n  @Prop({ reflect: true }) firstDay: number = 1;\r\n  @Prop({ reflect: true }) monthNames: string[] = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n  @Prop({ reflect: true }) daysOfWeek: string[] = [\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\",\r\n  ];\r\n  @Prop({ reflect: true }) format: string = \"MMM DD,YYYY\";\r\n  @Prop({ reflect: true }) separator: string = \"-\";\r\n  @Prop({ reflect: true }) applyLabel: string = \"Apply\";\r\n  @Prop({ reflect: true }) cancelLabel: string = \"Cancel\";\r\n  @Prop({ reflect: true }) fromLabel: string = \"Form\";\r\n  @Prop({ reflect: true }) toLabel: string = \"To\";\r\n  @Prop({ reflect: true }) customRangeLabel: string = \"Custom\";\r\n  @Prop({ reflect: true }) weekLabel: string = \"W\";\r\n  @Prop({ reflect: true }) maxSpan: moment.DurationInputArg1 = {\r\n    days: 240,\r\n  };\r\n\r\n  @Event() dateChanged: EventEmitter<{\r\n    start: moment.Moment;\r\n    end: moment.Moment;\r\n  }>;\r\n  dateRangeInput: HTMLElement;\r\n  componentDidLoad() {\r\n    this.dateRangeInput = this.element.querySelector(\".date-range-input\");\r\n    $(this.dateRangeInput).daterangepicker(\r\n      {\r\n        opens: this.opens,\r\n        startDate: moment(this.fromDate),\r\n        endDate: moment(this.toDate),\r\n        maxSpan: this.maxSpan,\r\n        autoApply: this.autoApply,\r\n        locale: {\r\n          format: this.format,\r\n          separator: this.separator,\r\n          applyLabel: this.applyLabel,\r\n          cancelLabel: this.cancelLabel,\r\n          fromLabel: this.fromLabel,\r\n          toLabel: this.toLabel,\r\n          customRangeLabel: this.customRangeLabel,\r\n          weekLabel: this.weekLabel,\r\n          daysOfWeek: this.daysOfWeek,\r\n          monthNames: this.monthNames,\r\n          firstDay: this.firstDay,\r\n        },\r\n      },\r\n      (start, end) => {\r\n        this.dateChanged.emit({ start, end });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <input class=\"date-range-input\" type=\"text\" />;\r\n  }\r\n}\r\n",":host {\r\n  --viewport-padding: 25px;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: var(--viewport-padding);\r\n  gap: 10px;\r\n  max-width: 60vw;\r\n  margin: 0;\r\n  list-style: none;\r\n  z-index: 2147483647;\r\n  outline: none;\r\n  pointer-events: none;\r\n}\r\n\r\n.toast-container {\r\n  background-color: white;\r\n  border-radius: 6px;\r\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\r\n  padding: 15px 30px;\r\n  display: grid;\r\n  grid-template-areas: 'title action';\r\n  grid-template-columns: auto max-content;\r\n  column-gap: 15px;\r\n  align-items: center;\r\n  overflow: hidden;\r\n}\r\n.toast-container[data-state='open'] {\r\n  animation: slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1) forwards;\r\n}\r\n.toast-container[data-state='closed'] {\r\n  pointer-events: none;\r\n  animation: fadeOut 150ms ease-in forwards;\r\n}\r\np {\r\n  margin: 0;\r\n  padding: 0;\r\n  grid-area: title;\r\n  font-weight: 500;\r\n  color: #1c2024;\r\n  font-size: 15px;\r\n}\r\n\r\n.x-mark-container,\r\n.check-mark-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 1.5rem;\r\n  width: 1.5rem;\r\n  border-radius: 50%;\r\n}\r\n.x-mark-container {\r\n  background: red;\r\n}\r\n.check-mark-container {\r\n  background: rgb(9, 153, 9);\r\n}\r\n\r\n.loader {\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  border: 2.5px solid #3f3f3f;\r\n  border-bottom-color: transparent;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  animation: rotation 1s linear infinite;\r\n}\r\n.loadingScreenContainer {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: 100;\r\n  background: rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n@keyframes rotation {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n@keyframes fadeOut {\r\n  0% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n  }\r\n}\r\n@keyframes slideIn {\r\n  0% {\r\n    transform: translateX(calc(100% + var(--viewport-padding)));\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n","import { Component, Fragment, Host, Prop, State, h } from '@stencil/core';\r\nimport axios from 'axios';\r\n\r\n@Component({\r\n  tag: 'ir-interceptor',\r\n  styleUrl: 'ir-interceptor.css',\r\n  scoped: true,\r\n})\r\nexport class IrInterceptor {\r\n  @State() isShown = false;\r\n  @State() isLoading = false;\r\n  @State() isSuccess = false;\r\n  @State() isUnassignedUnit = false;\r\n\r\n  @Prop({ reflect: true, mutable: true }) defaultMessage = {\r\n    loadingMessage: 'Fetching Data',\r\n    successMessage: 'Success',\r\n    errorMessage: 'Something Went Wrong',\r\n  };\r\n\r\n  @Prop({ reflect: true }) handledEndpoints = ['/Get_Exposed_Booking_Availability', '/ReAllocate_Exposed_Room'];\r\n\r\n  componentWillLoad() {\r\n    this.setupAxiosInterceptors();\r\n  }\r\n\r\n  setupAxiosInterceptors() {\r\n    axios.interceptors.request.use(this.handleRequest.bind(this), this.handleError.bind(this));\r\n    axios.interceptors.response.use(this.handleResponse.bind(this), this.handleError.bind(this));\r\n  }\r\n\r\n  extractEndpoint(url: string): string {\r\n    return url.split('?')[0];\r\n  }\r\n\r\n  isHandledEndpoint(url: string): boolean {\r\n    return this.handledEndpoints.includes(this.extractEndpoint(url));\r\n  }\r\n\r\n  handleRequest(config) {\r\n    if (this.isHandledEndpoint(config.url)) {\r\n      this.isLoading = true;\r\n      if (this.extractEndpoint(config.url) === '/ReAllocate_Exposed_Room') {\r\n        this.defaultMessage.loadingMessage = 'Updating Event';\r\n      } else if (this.extractEndpoint(config.url) === '/Get_Aggregated_UnAssigned_Rooms') {\r\n        this.isUnassignedUnit = true;\r\n      } else {\r\n        this.defaultMessage.loadingMessage = 'Fetching Data';\r\n      }\r\n      this.showToast();\r\n    }\r\n    return config;\r\n  }\r\n\r\n  handleResponse(response) {\r\n    this.isLoading = false;\r\n\r\n    if (response.data.ExceptionMsg?.trim()) {\r\n      this.handleError(response.data.ExceptionMsg);\r\n\r\n      throw new Error(response.data.ExceptionMsg);\r\n    }\r\n\r\n    if (this.isHandledEndpoint(response.config.url)) {\r\n      this.handleCompletion('Success', true);\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  handleError(error) {\r\n    if (this.isUnassignedUnit) {\r\n      this.isUnassignedUnit = false;\r\n    }\r\n    if (!this.isShown) {\r\n      this.showToast();\r\n    }\r\n    this.handleCompletion(error, false);\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  showToast() {\r\n    this.isShown = true;\r\n  }\r\n\r\n  hideToastAfterDelay(isSuccess: boolean) {\r\n    if (this.isUnassignedUnit) {\r\n      this.isShown = false;\r\n      this.isUnassignedUnit = false;\r\n    } else {\r\n      const delay = isSuccess ? 0 : 5000;\r\n\r\n      setTimeout(() => {\r\n        this.isShown = false;\r\n      }, delay);\r\n    }\r\n  }\r\n\r\n  handleCompletion(message: string, success: boolean) {\r\n    this.isSuccess = success;\r\n    this.defaultMessage = {\r\n      ...this.defaultMessage,\r\n      [success ? 'successMessage' : 'errorMessage']: message,\r\n    };\r\n    this.hideToastAfterDelay(success);\r\n  }\r\n\r\n  renderMessage(): string {\r\n    if (this.isLoading) return this.defaultMessage.loadingMessage;\r\n    return this.isSuccess ? this.defaultMessage.successMessage : this.defaultMessage.errorMessage;\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.isLoading && this.isShown && (\r\n          <div class=\"loadingScreenContainer\">\r\n            <div class=\"loadingContainer\">\r\n              <ir-loading-screen></ir-loading-screen>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div class=\"toast-container\" data-state={!this.isLoading && this.isShown && !this.isSuccess ? 'open' : 'closed'}>\r\n          {!this.isLoading && this.isShown && !this.isSuccess && (\r\n            <Fragment>\r\n              <div class=\"x-mark-container\">\r\n                <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path\r\n                    d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\r\n                    fill=\"white\"\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                  ></path>\r\n                </svg>\r\n              </div>\r\n              <p>{this.renderMessage()}</p>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n",":host {\n  display: fix;\n  height: 100vh;\n  width: 100vw;\n  z-index: 1000;\n  top: 0;\n  left: 0;\n}\n\n.loader {\n  width: 2.25rem;\n  height: 2.25rem;\n  border: 3.5px solid #3f3f3f;\n  border-bottom-color: transparent;\n  border-radius: 50%;\n  display: inline-block;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n}\n.backdrop {\n  height: 100vh;\n  width: 100vw;\n  background: rgba(0, 0, 0, 0.4);\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n.loaderContainer {\n  position: absolute;\n  z-index: 100001;\n  padding: 20px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  border-radius: 5px;\n  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;\n}\n@keyframes rotation {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","import { Component, Host, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'ir-loading-screen',\n  styleUrl: 'ir-loading-screen.css',\n  scoped: true,\n})\nexport class IrLoadingScreen {\n  @Prop() message: string = '';\n  render() {\n    return (\n      <Host>\n        <div class=\"loaderContainer\">\n          <span class=\"loader\"></span>\n          {this.message && <p class={'m-0'}>{this.message}</p>}\n        </div>\n      </Host>\n    );\n  }\n}\n","@import url(\"../../assets/feather/style.min.css\");\r\n@import url(\"../../assets/fontawesome/css/all.css\");\r\n@import url(\"../../assets/line-awesome/css/line-awesome.min.css\");\r\n:host {\r\n  position: relative;\r\n}\r\n\r\n/* p {\r\n  position: absolute;\r\n  top: 10px;\r\n  background-color: antiquewhite;\r\n  border-radius: 7px;\r\n  padding: 10px 15px;\r\n  z-index: 1000000;\r\n} */\r\n","import { Component, Host, Prop, State, h } from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: \"ir-tooltip\",\r\n  styleUrl: \"ir-tooltip.css\",\r\n  scoped: true,\r\n})\r\nexport class IrTooltip {\r\n  @Prop({ reflect: true }) message: string;\r\n  @State() open: boolean;\r\n  tooltipTimeout: any;\r\n  toggleOpen(shouldOpen: boolean) {\r\n    if (this.tooltipTimeout) {\r\n      clearTimeout(this.tooltipTimeout);\r\n    }\r\n\r\n    if (shouldOpen) {\r\n      this.tooltipTimeout = setTimeout(() => {\r\n        this.open = true;\r\n      }, 300);\r\n    } else {\r\n      this.open = false;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <span\r\n          onMouseEnter={() => this.toggleOpen(true)}\r\n          onMouseLeave={() => this.toggleOpen(false)}\r\n        >\r\n          <i\r\n            class=\"ml-1 ft-info\"\r\n            data-toggle=\"tooltip\"\r\n            data-placement=\"top\"\r\n            data-original-title=\"Info popup\"\r\n          ></i>\r\n        </span>\r\n        {this.open && (\r\n          <div class=\"tooltip bottom show position-absolute\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner fit\">\r\n              <i class=\"tooltip-top-demo\"></i>\r\n              <span innerHTML={this.message}></span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"yQAAA,MAAMA,EAAwB,swyJ,MCQjBC,EAAkB,M,kHAEiD,G,kDAElD,G,mBACM,G,iBACJ,e,0CAGH,E,CAG3B,iBAAAC,GACEC,KAAKC,UAAYD,KAAKE,UAASC,OAAAC,OAAA,GAAQJ,KAAKE,WAAc,GAC1DF,KAAKK,gB,CAGP,wBAAMC,GACJN,KAAKK,gB,CAEP,cAAAA,GACE,MAAME,EAAQ,IAAIP,KAAKQ,eACvBD,EAAMP,KAAKS,QAAU,EACrBT,KAAKU,gBAAkBV,KAAKW,UAAUC,QAAOC,IAAMN,EAAMO,SAASD,EAAEE,K,CAEtE,UAAAC,GACEhB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,qBACLC,YAAapB,KAAKoB,YAClBC,KAAIlB,OAAAC,OAAA,GAAOJ,KAAKC,Y,CAIpB,gBAAAqB,CAAiBH,EAAKI,GACpBvB,KAAKC,UAAUkB,IAAQI,EACvB,GAAIA,IAAU,GAAI,CAChBvB,KAAKC,UAAU,YAAcsB,C,CAE/B,GAAIJ,IAAQ,UAAYI,IAAU,GAAI,CACpCvB,KAAKC,UAAU,YAAcD,KAAKU,gBAAgBc,MAAKC,GAAQA,EAAKV,MAAQQ,IAAOG,MAAQ,E,CAE7F1B,KAAKgB,Y,CAGP,qBAAAW,CAAsBC,GAEpB5B,KAAKC,UAAU4B,UAAYD,EAAME,OAAOP,MACxCvB,KAAKgB,Y,CAGP,MAAAe,GAEE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,kBACTF,EAAA,OAAKE,MAAM,aACRlC,KAAKmC,cAAgB,gBAAkBnC,KAAKmC,cAAgB,YAAcnC,KAAKmC,cAAgB,eAC9FH,EAAA,QAAME,MAAM,MAAMlC,KAAKE,UAAUkC,kBAC/B,KACJJ,EAAA,QAAME,MAAM,yBACTlC,KAAKE,UAAUmC,aAAaC,QAAQtC,KAAKE,UAAUkC,iBAAmB,IAAK,IAC5EJ,EAAA,cAAYE,MAAM,YAAYK,QAASvC,KAAKE,UAAUsC,YAAcxC,KAAKE,UAAUuC,aAErFT,EAAA,YAAOhC,KAAKE,UAAUwC,uBAGxBV,EAAA,OAAKE,MAAM,kCACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,SACEjB,GAAI4B,IACJC,KAAK,QACLV,MAAM,eACNW,YAAY,+BACZnB,KAAK,YACLoB,QAASlB,GAAS5B,KAAK2B,sBAAsBC,GAC7CmB,SAAQ,KACRxB,MAAOvB,KAAKC,UAAU4B,aAGzB7B,KAAKmC,cAAgB,gBAAkBnC,KAAKmC,cAAgB,YAAcnC,KAAKmC,cAAgB,eAC9FH,EAAA,OAAKE,MAAM,aACTF,EAAA,UAAQE,MAAM,6BAA6BnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,SAAWM,EAAME,OAA4BP,QACzIS,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAKC,UAAUiD,SAAW,IAAE,gBAGtDlD,KAAKU,gBAAgByC,KAAI1B,GACxBO,EAAA,UAAQT,MAAOE,EAAKV,GAAIkC,UAAWjD,KAAKC,UAAUiD,SAAWzB,EAAKV,IAC/DU,EAAKC,UAKZ,KAEJM,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,aAAeM,EAAME,OAA4BP,QACxIS,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAKC,UAAUmD,aAAe,IAAE,iBAG1DpD,KAAKqD,kBAAkBF,KAAI9B,GAC1BW,EAAA,UAAQT,MAAOF,EAAKiC,UAAWL,SAAUjD,KAAKC,UAAUmD,aAAe/B,EAAKiC,WACzEjC,EAAKkC,mBAKdvB,EAAA,OAAKE,MAAM,SAAO,IAAGlC,KAAKE,UAAUsD,Q,gFClHhD,MAAMC,EAAuB,ohzJ,MCShBC,EAAiB,M,0EAWpB1D,KAAA2D,eAAyC,CAC/CC,oBAAqB,EACrBC,gBAAiB,GACjBC,eAAgB,OAEV9D,KAAA+D,YAA0B,GAC1B/D,KAAAgE,eAAiC,IAAIC,E,6IAXf,M,4CAEE,K,CAUhC,uBAAMlE,GACJ,IACEC,KAAK+D,kBAAoB/D,KAAKgE,eAAeE,iBAC7C,GAAIlE,KAAKmE,YAAa,CACpBnE,KAAK2D,eAAcxD,OAAAC,OAAA,GAAQJ,KAAKmE,Y,KAC3B,CACLnE,KAAK2D,eAAeC,oBAAsBQ,SAASpE,KAAK+D,YAAY,GAAGT,WACvEtD,KAAKqE,U,EAEP,MAAOC,G,EAKX,oBAAAC,CAAqB3C,GACnB5B,KAAK2D,eAAeE,gBAAkBjC,EAAME,OAAOP,MACnDvB,KAAKqE,U,CAGP,wBAAAG,CAAyBC,GACvB,GAAIzE,KAAK0E,UAAW1E,KAAK0E,UAAYC,UACrC3E,KAAK2D,eAAeC,oBAAsBQ,SAASK,EAAI3C,OAAOP,OAC9DvB,KAAK4E,aACL5E,KAAKqE,U,CAGP,QAAAA,GACErE,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,iBACLE,KAAIlB,OAAAC,OAAA,GAAOJ,KAAK2D,iB,CAIpB,qBAAAkB,GAGE,IAAIC,EAAK9E,KAAK0E,UAAY,IAAIK,KAAK/E,KAAK0E,WAAa,IAAIK,KACzD,GAAI/E,KAAK0E,WAAa1E,KAAKgF,WAAahF,KAAKiF,YAAa,CACxDH,EAAGI,SAASlF,KAAKgF,UAAWhF,KAAKiF,YAAa,EAAG,E,KAC5C,CACLH,EAAGI,SAASJ,EAAGK,WAAanF,KAAK2D,eAAeC,oBAAqBkB,EAAGM,aAAc,EAAG,E,CAG3F,OAAON,EAAGO,eAAe,UAAW,CAAEC,MAAO,UAAa,IAAMR,EAAGS,UAAY,KAAOvF,KAAKwF,aAAaV,EAAGK,YAAc,IAAMnF,KAAKwF,aAAaV,EAAGM,a,CAEtJ,YAAAI,CAAajE,GACX,OAAOA,EAAQ,GAAK,IAAIA,IAAUA,C,CAEpC,kBAAAkE,CAAmBhB,GACjBzE,KAAK2D,eAAeG,eAAiBW,EAAI3C,OAAO4D,QAChD,GAAI1F,KAAK2D,eAAeG,eAAgB,CACtC9D,KAAK2D,eAAeE,gBAAkB,GACtC7D,KAAK2D,eAAeC,oBAAsB,C,CAE5C5D,KAAK4E,aACL5E,KAAKqE,U,CAGP,UAAAO,GACE5E,KAAK2F,aAAe3F,KAAK2F,W,CAG3B,MAAA5D,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAO,gBAAgBlC,KAAK4F,cAAc,eAC7C5D,EAAA,OAAKE,MAAM,wBACTF,EAAA,QAAME,MAAM,QACVF,EAAA,QAAME,MAAM,+BAA6B,UACxClC,KAAK6F,UACA,IACR7D,EAAA,QAAME,MAAM,+BAA6B,QACxClC,KAAK8F,SAGV9D,EAAA,OAAKE,MAAO,sBAAsBlC,KAAK4F,cAAc,SACnD5D,EAAA,OAAKE,MAAM,SACTF,EAAA,SAAOE,MAAM,oDAAkD,WAC/DF,EAAA,OAAKE,MAAM,+EACTF,EAAA,SAAOE,MAAM,eAAeU,KAAK,WAAW8C,QAAS1F,KAAK2D,eAAeG,eAAgB/C,GAAG,aAAaiC,SAAUpB,GAAS5B,KAAKyF,mBAAmB7D,MAC/I,IACPI,EAAA,QAAME,MAAM,gBAAc,oBAE1BlC,KAAK2D,eAAeG,eACpB9B,EAAA,WACEA,EAAA,OAAKE,MAAM,wCACTF,EAAA,QAAME,MAAM,gBAAc,OAC1BF,EAAA,OAAKE,MAAM,uCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAY,kBACZ9B,GAAG,YACHQ,MAAOvB,KAAK2D,eAAeE,gBAC3Bf,QAASlB,GAAS5B,KAAKuE,qBAAqB3C,OAIlDI,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAME,MAAM,+BAA6B,0BACzCF,EAAA,OAAKE,MAAM,kBACTF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAG,eAAeiC,SAAUyB,GAAOzE,KAAKwE,yBAAyBC,IACpGzE,KAAK+D,YAAYZ,KAAI4C,GACpB/D,EAAA,UAAQT,OAAQwE,EAAYzC,UAAWL,SAAUjD,KAAK2D,eAAeC,sBAAwBmC,EAAYzC,WACtGyC,EAAYxC,mBAKpBvD,KAAK2D,eAAeC,oBACnB5B,EAAA,OAAKE,MAAM,8BACTF,EAAA,gBAAQhC,KAAK6E,0BAEb,OAGN,M,mBC3IDmB,EAAb,WAAAC,GACmBjG,KAAAgE,eAAiC,IAAIC,C,CAEtD,qBAAMiC,CAAgBC,EAAcC,EAA2BC,EAAmBC,GAChF,IACE,MAAMC,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,EAAO,CACTK,QAAQC,IAAIV,EAAMC,EAAmBC,EAAWC,GAChD,MAAMjF,KAAEA,SAAeyF,EAAMC,KAAK,mCAAmCR,IAAS,CAAEJ,OAAMC,oBAAmBC,YAAWC,YACpH,GAAIjF,EAAK2F,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM5F,EAAK2F,a,CAEvBJ,QAAQC,IAAIxF,GACZ,OAAOA,C,KACF,CACL,MAAM,IAAI4F,MAAM,gB,EAElB,MAAO3C,GACPsC,QAAQtC,MAAMA,GACd,MAAM,IAAI2C,MAAM3C,E,EAGb,iBAAM4C,CAAYC,GACvB,IACE,MAAMZ,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,EAAO,CACT,MAAMlF,KAAEA,SAAeyF,EAAMC,KAAK,gCAAgCR,IAAS,CACzEY,SAEF,GAAI9F,EAAK2F,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM5F,EAAK2F,a,CAEvB,OAAO3F,EAAK+F,S,KACP,CACL,MAAM,IAAIH,MAAM,gB,EAElB,MAAO3C,GACPsC,QAAQC,IAAIvC,GACZ,MAAM,IAAI2C,MAAM3C,E,EAIb,wBAAM+C,CAAmBC,GAC9B,IACE,MAAMf,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,EAAO,CACT,MAAMgB,EAAc1C,GAAuByC,EAAa1D,2BAClD5D,KAAKkH,YAAYI,EAAaH,MACpC,MAAMK,QAAexH,KAAKgE,eAAeyD,UAAStH,OAAAC,OAAA,CAChDiG,UAAWrG,KAAK0H,WAAWJ,EAAaK,WACxCrB,QAAStG,KAAK0H,WAAWJ,EAAaM,SACtCC,MAAOP,EAAaQ,MACpBC,iBAAkBT,EAAaxD,eAAiB,MAAQwD,EAAa1D,sBAAwB,EAAI,MAAQ,MACzGoE,YAAaV,EAAa1D,qBAAuB,GACjDqE,MAAOX,EAAazD,iBAAmB,IACpC0D,IAEL,OAAOC,C,KACF,CACL,MAAM,IAAIP,MAAM,gB,EAElB,MAAO3C,GACPsC,QAAQtC,MAAMA,GACd,MAAM,IAAI2C,MAAM3C,E,EAGZ,UAAAoD,CAAWQ,GACjB,OAAOA,EAAKC,MAAM,KAAKC,KAAK,I,ECvEhC,MAAMC,EAAqB,29lJ,MCadC,EAAe,M,8KAqBlBtI,KAAAuI,UAAoB,YACpBvI,KAAAwI,SAAmB,WACnBxI,KAAAyI,SAAmB,WACnBzI,KAAA0I,iBAA2B,kBAE3B1I,KAAA2I,uBAAkC,MAClC3I,KAAA4I,cAAiD,GACjD5I,KAAA6I,cAAwC,GACxC7I,KAAAC,UAAsC,GACtCD,KAAA8I,iBAA2C,GAC3C9I,KAAA2D,eAAyC,GACzC3D,KAAA+I,gBAA8B,GAC9B/I,KAAAqD,kBAAgC,GAChCrD,KAAAgE,eAAiC,IAAIC,EACrCjE,KAAAgJ,cAAgB,IAAIhD,E,yGA/BU,M,qEAGyB,CAC7DiD,KAAM,GACNC,YAAa,I,oBAEgB,G,iBACC,M,aACL,G,2GAIsB,E,CAmBjD,gBAAAC,GACEC,SAASC,iBAAiB,WAAWxI,IACnC,GAAIA,EAAEM,MAAQ,SAAU,CACtBnB,KAAKsJ,a,KAIX,oBAAAC,GACEH,SAASI,oBAAoB,WAAW,Q,CAE1C,uBAAMzJ,GACJ,IAAKC,KAAKyJ,YAAYC,iBAAkB,CACtC,M,CAGF1J,KAAK2J,cAAaxJ,OAAAC,OAAA,GAAQJ,KAAKyJ,YAAYC,kBAE3C,IACE,MAAME,QAAqB5J,KAAK6J,oBAChC7J,KAAK8J,iBAAiBF,EAAaG,eACnC/J,KAAKgK,mBAAmBJ,GAExB,GAAI5J,KAAKiK,YAAY,gBAAiB,CACpCjK,KAAKkK,oB,CAGPlK,KAAKmK,KAAOnK,KAAKoK,gB,CACjB,MAAO9F,GACPsC,QAAQtC,MAAM,gCAAiCA,E,EAInD,uBAAMuF,GACJ,aAAa7J,KAAKgE,eAAe6F,mB,CAGnC,gBAAAC,CAAiBC,GACf/J,KAAK4I,cAAgBmB,EAAc5G,KAAIkH,IAAM,CAC3CtJ,GAAIsJ,EAAO/G,UACX/B,MAAO8I,EAAO9G,kBAEhBvD,KAAKsK,aAAe,CAClBrB,KAAMc,EAAc,GAAGzG,UACvB4F,YAAaa,EAAc,GAAGxG,c,CAIlC,kBAAAyG,CAAmBO,GACjBvK,KAAK+I,gBAAkBwB,EAAIxB,gBAC3B/I,KAAK8I,iBAAiB0B,YAAcD,EAAIC,YACxCxK,KAAKqD,kBAAoBkH,EAAIlH,iB,CAG/B,kBAAA6G,GACE,MAAMO,EAAWzK,KAAK0K,wBAAwB1K,KAAK2K,8BACnD,MAAMxJ,EAAM,KAAKsJ,EAAS1J,KAC1Bf,KAAK6I,cAAc1H,GAAO,CACxB,CAAC,KAAKnB,KAAKyJ,YAAYmB,gBAAiB,CACtCC,WAAY7K,KAAKyJ,YAAYqB,aAC7BtH,KAAMxD,KAAKyJ,YAAYsB,KACvBC,SAAUhL,KAAKyJ,YAAYwB,UAC3BC,WAAYlL,KAAKyJ,YAAYmB,aAC7BO,eAAgBV,EAAS1J,GACzBqB,iBAAkBqI,EAAS/I,KAC3B0J,WAAY,EACZ/I,aAAcrC,KAAKyJ,YAAY4B,UAC/BnI,OAAQlD,KAAKyJ,YAAY3B,MACzBjG,UAAW7B,KAAKyJ,YAAY6B,KAC5B9I,YAAaxC,KAAKyJ,YAAYjH,YAC9BC,UAAWzC,KAAKyJ,YAAYhH,UAC5BC,qBAAsB1C,KAAKyJ,YAAY/G,sB,CAK7C,mCAAM6I,CAA8BlF,EAAmBC,GACrD,IACE,MAAMkF,EAAgBxL,KAAKyJ,YAAYgC,UAAUtI,KAAI1B,GAAQA,EAAKV,KAClE,MAAMM,QAAarB,KAAKgE,eAAe0H,uBAAuBrF,EAAWC,EAAStG,KAAK2L,WAAY3L,KAAK4L,SAAUJ,EAAexL,KAAK6L,UACtI7L,KAAKuC,QAAU,GACfvC,KAAKyJ,YAAWtJ,OAAAC,OAAAD,OAAAC,OAAA,GACXJ,KAAKyJ,aAAW,CACnBgC,UAAWpK,EAAKyK,YAElB9L,KAAKuC,QAAUlB,EAAK0K,cACpBnF,QAAQC,IAAIxF,E,CACZ,MAAOiD,G,EAIX,uBAAAoG,CAAwBxH,G,MACtB,OAAO8I,EAAAhM,KAAKyJ,YAAYgC,aAAS,MAAAO,SAAA,SAAAA,EAAExK,MAAKyK,GAC/BA,EAAaC,cAAc1K,MAAKC,GAAQA,EAAKV,MAAQmC,K,CAIhE,cAAAkH,GACE,GAAIpK,KAAKyJ,YAAY0C,aAAe,cAAe,CACjD,OAAOnM,KAAK0I,gB,MACP,GAAI1I,KAAKyJ,YAAY0C,aAAe,gBAAiB,CAC1DnM,KAAK2I,uBAAyB,KAC9B,OAAO3I,KAAKwI,Q,KACP,CAEL,OAAOxI,KAAKwI,Q,EAIhB,0BAAAmC,GAEE,OAAQ3K,KAAKyJ,YAAY2C,eAAe,UAAYpM,KAAKyJ,YAAY3B,OAAU,I,CAGjF,gBAAAuE,GACE,OAAQrM,KAAKyJ,YAAY2C,eAAe,uBAAyBpM,KAAKyJ,YAAY6C,oBAAuB,E,CAE3G,WAAArC,CAAY9I,GACV,OAAOnB,KAAKyJ,YAAY0C,aAAehL,C,CAGzC,WAAAmI,GACEtJ,KAAKuM,mBAAqB,MAC1BvM,KAAKwM,mBAAmBtL,M,CAE1B,aAAAuL,GACE,OAAOzM,KAAKyJ,YAAY0C,aAAe,c,CAEzC,iBAAAO,CAAkB9K,GAChB,MAAMP,KAAEA,EAAIF,IAAEA,EAAGwL,WAAEA,GAAe/K,EAAMgL,OACxC,MAAMC,EAAkB7M,KAAK8M,mBAAmBzL,EAAK8J,gBACrD,MAAM4B,EAAc/M,KAAKgN,eAAe3L,EAAK6J,YAE7C,GAAIlL,KAAKiN,gBAAgB9L,GAAM,CAC7BnB,KAAK6I,cAAgB,E,CAGvB7I,KAAKkN,+BAA+BL,GAEpC,GAAI7M,KAAKyM,gBAAiB,CACxB,GAAIE,IAAe,OAAQ,CACzB,GAAI3M,KAAK6I,cAAcuD,eAAeS,IAAoB7M,KAAK6I,cAAcgE,GAAiBT,eAAeW,GAAc,CACzH/M,KAAKmN,+BAA+BN,EAAiBE,EAAa1L,E,MAE/D,CACL,GAAIsL,IAAe,WAAY,CAC7B,GAAIA,IAAe,uBAAwB,CACzC,GAAI3M,KAAK6I,cAAcuD,eAAeS,IAAoB7M,KAAK6I,cAAcgE,GAAiBT,eAAeW,GAAc,CACzH/M,KAAKmN,+BAA+BN,EAAiBE,EAAa1L,E,MAE/D,CACLrB,KAAKmN,+BAA+BN,EAAiBE,EAAa1L,E,QAInE,CACLrB,KAAKoN,oBAAoBP,EAAiBE,EAAa1L,E,CAGzDrB,KAAKqN,iBAAiBR,EAAiBE,GACvC/M,KAAK4E,Y,CAEP,kBAAAkI,CAAmB3B,GACjB,MAAO,KAAKA,G,CAGd,cAAA6B,CAAe9B,GACb,MAAO,KAAKA,G,CAGd,eAAA+B,CAAgB9L,GACd,OAAOA,IAAQ,aAAenB,KAAKsN,mBAAmBnM,E,CAGxD,kBAAAmM,CAAmBnM,GACjB,OAAOA,IAAQ,c,CAGjB,8BAAA+L,CAA+BL,GAC7B,IAAK7M,KAAK6I,cAAcgE,GAAkB,CACxC7M,KAAK6I,cAAcgE,GAAmB,E,EAI1C,mBAAAO,CAAoBP,EAAyBE,EAAqB1L,GAChErB,KAAK6I,cAAcgE,GAAiBE,GAAe1L,C,CAGrD,mBAAAkM,CAAoBV,EAAyBE,GAC3C,OAAO/M,KAAK6I,cAAcgE,IAAoB7M,KAAK6I,cAAcgE,GAAiBE,E,CAGpF,gBAAAM,CAAiBR,EAAyBE,G,MACxC,KAAIf,EAAAhM,KAAK6I,cAAcgE,GAAiBE,MAAY,MAAAf,SAAA,SAAAA,EAAEZ,cAAe,EAAG,QAC/DpL,KAAK6I,cAAcgE,GAAiBE,E,CAG7C,IAAK5M,OAAOqN,KAAKxN,KAAK6I,cAAcgE,IAAkBY,OAAQ,QACrDzN,KAAK6I,cAAcgE,E,EAI9B,8BAAAM,CAA+BN,EAAyBE,EAAqB1L,GAC3ErB,KAAK6I,cAAgB,CACnBgE,CAACA,GAAkB,CACjBE,CAACA,GAAW5M,OAAAC,OAAAD,OAAAC,OAAA,GACPiB,GAAI,CACPQ,UAAW7B,KAAKyJ,YAAY6B,KAC5BpI,OAAQlD,KAAKyJ,YAAY3B,S,CAMjC,iBAAA4F,CAAkB9L,GAChB,MAAM+L,EAA8B/L,EAAMgL,OAC1C,GAAIe,EAAIxM,MAAQ,oBAAqB,CACnCnB,KAAK2J,cAAgBgE,EAAItM,KACzBrB,KAAKyJ,YAAYC,iBAAiB7D,SAAW,IAAId,KAAK/E,KAAK2J,cAAc9D,UACzE7F,KAAKyJ,YAAYC,iBAAiB5D,OAAS,IAAIf,KAAK/E,KAAK2J,cAAc7D,QACvE9F,KAAKuL,8BAA8BqC,EAAsB5N,KAAKyJ,YAAYC,iBAAiB7D,UAAW+H,EAAsB5N,KAAKyJ,YAAYC,iBAAiB5D,Q,EAIlK,qBAAA+H,CAAsBjM,GACpBA,EAAMkM,2BACNlM,EAAMmM,kBACN,MAAMJ,EAA8B/L,EAAMgL,OAC1C5M,KAAK2D,eAAiBgK,EAAItM,I,CAI5B,YAAA2M,CAAapM,GACXA,EAAMqM,gB,CAIR,qBAAAC,CAAsBtM,GACpBA,EAAMkM,2BACNlM,EAAMmM,kBAEN,MAAMJ,EAAM/L,EAAMgL,OAClB,GAAIe,EAAIvM,YAAa,CACnB,GAAIpB,KAAKiK,YAAY,eAAgB,CACnCjK,KAAKC,UAAU0N,EAAIvM,aAAYjB,OAAAC,OAAAD,OAAAC,OAAA,GAC1BuN,EAAItM,MAAI,CACX6B,OAAQlD,KAAKyJ,YAAY3B,O,MAEtB9H,KAAKC,UAAU0N,EAAIvM,aAAeuM,EAAItM,I,EAIjD,wBAAA8M,CAAyBvM,GACvBA,EAAMkM,2BACNlM,EAAMmM,kBACN,MAAMJ,EAA8B/L,EAAMgL,OAC1C5M,KAAK8I,iBAAmB6E,EAAIpM,MAAMF,I,CAGpC,mBAAA+M,CAAoBC,GAClB,OAAOrO,KAAKsK,eAAiB+D,EAAW,SAAW,E,CAGrD,oBAAAC,CAAqBC,GACnBvO,KAAKsK,aAAe,CAClBrB,KAAMsF,EAAezM,OAAOP,MAC5B2H,YAAalJ,KAAK4I,cAAcpH,MAAKmM,GAAOA,EAAI5M,KAAOwN,EAAezM,OAAOP,MAAMiN,aAAYjN,OAAS,G,CAI5G,UAAAqD,GACE5E,KAAK2F,aAAe3F,KAAK2F,W,CAI3B,gBAAA8I,GACEzO,KAAK0O,SAAS1O,KAAKyI,S,CAGrB,QAAAiG,CAASA,GACP1O,KAAKmK,KAAOuE,EACZ1O,KAAK4E,Y,CAGP,gBAAA+J,GACE3O,KAAK2I,uBAAyB,KAC9B3I,KAAK0O,SAAS1O,KAAKwI,S,CAGrB,2BAAAoG,CAA4BC,GAC1B,IAAIC,EAAe9O,KAAKqM,mBAAmB7K,MAAKuN,GAAWA,EAAQC,KAAOH,IAC1E,OAAOC,EAAaE,GAAK,IAAMF,EAAaxD,I,CAG9C,0BAAA2D,CAA2BC,GACzB,OAAOlP,KAAKmP,iBAAmBD,EAAY,SAAW,E,CAGxD,0BAAAE,CAA2B3K,GACzBzE,KAAKmP,eAAiB1K,EAAI3C,OAAOP,K,CAGnC,UAAA8N,GACE,OAAOrP,KAAKmK,OAASnK,KAAKuI,S,CAG5B,SAAA+G,GACE,OAAOtP,KAAKmK,OAASnK,KAAKwI,Q,CAG5B,SAAA+G,GACE,OAAOvP,KAAKmK,OAASnK,KAAKyI,Q,CAG5B,gBAAA+G,GACE,OAAOxP,KAAKmK,OAASnK,KAAK0I,gB,CAG5B,mBAAA+G,GACE,OACEzN,EAAA,YAAUE,MAAM,+BACdF,EAAA,SAAOE,MAAM,MAAI,gBACjBF,EAAA,OAAKE,MAAM,kBACTF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAG,eAAeiC,SAAUyB,GAAOzE,KAAKoP,2BAA2B3K,IACvGzC,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAKmP,gBAAkB,IAAE,UAGnDnP,KAAKqM,mBAAmBlJ,KAAIuM,GAC3B1N,EAAA,UAAQT,MAAOmO,EAAOV,GAAI/L,SAAUjD,KAAKmP,iBAAmBO,EAAOV,IAChEhP,KAAK4O,4BAA4Bc,EAAOV,S,CAgBvD,aAAAW,GACE,OACE3N,EAAA,YAAUE,MAAM,+BACdF,EAAA,SAAOE,MAAM,MAAI,WACjBF,EAAA,OAAKE,MAAM,kBACTF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAG,eAAeiC,SAAUyB,GAAOzE,KAAKsO,qBAAqB7J,IAChGzE,KAAK4I,cAAczF,KAAIuM,GACtB1N,EAAA,UAAQT,MAAOmO,EAAO3O,GAAIkC,SAAUjD,KAAKsK,aAAarB,OAASyG,EAAO3O,IACnE2O,EAAOnO,W,CAStB,0BAAAqO,CAA2BC,G,MACzB,IAAIpF,GAAWuB,EAAAhM,KAAKyJ,YAAYgC,aAAS,MAAAO,SAAA,SAAAA,EAAExK,MAAKiJ,GAAYA,EAAS1J,KAAO8O,IAC5E,OAAQpF,GAAYA,EAASyB,eAAkB,E,CAGjD,eAAA4D,GACE,OACE9N,EAAA,OAAKE,MAAM,iBACTF,EAAA,OAAKE,MAAM,gBACTF,EAAA,OAAKE,MAAM,2BACTF,EAAA,UAAQE,MAAM,6BAA6B6N,QAAS,IAAM/P,KAAK0O,SAAS1O,KAAKwI,WAAS,uBAIvFxI,KAAKqM,mBAAmBoB,OACvBzL,EAAA,OAAKE,MAAM,2BACTF,EAAA,UAAQE,MAAM,6BAA6B6N,QAAS,IAAM/P,KAAK2O,oBAAkB,iCAIjF,KACJ3M,EAAA,OAAKE,MAAM,2BACTF,EAAA,UAAQE,MAAM,6BAA6B6N,QAAS,IAAM/P,KAAK0O,SAAS1O,KAAK0I,mBAAiB,gBAIhG1G,EAAA,OAAKE,MAAM,2BACTF,EAAA,UAAQE,MAAM,+BAA+B6N,QAAS,IAAM/P,KAAKsJ,eAAa,Y,CASxF,cAAA0G,G,MACE,OACEhO,EAAA,OAAKE,MAAM,iBACRlC,KAAK2I,uBAAyB3I,KAAKyP,sBAAwBzP,KAAKiK,YAAY,iBAAmBjK,KAAKiK,YAAY,YAAc,KAAOjK,KAAK2P,gBAE3I3N,EAAA,YAAUE,MAAM,yBACdF,EAAA,kBAAgBO,QAASvC,KAAKuC,QAAS4B,YAAanE,KAAKyJ,YAAYC,iBAAkBuG,kBAAmBxL,GAAOzE,KAAK0N,kBAAkBjJ,MAG1IzC,EAAA,OAAKE,MAAM,kBACR8J,EAAAhM,KAAKyJ,YAAYgC,aAAS,MAAAO,SAAA,SAAAA,EAAE7I,KAAI+M,GAC/BlO,EAAA,qBACE6J,SAAU7L,KAAK6L,SACf9C,gBAAiB/I,KAAK+I,gBACtBoH,eAAgBnQ,KAAK2J,cAAcwG,eACnChO,YAAanC,KAAKyJ,YAAY0C,WAC9BiE,aAAcF,EACdhO,MAAM,YACNiC,YAAanE,KAAK6I,cAAc,KAAOqH,EAASnP,IAChDsP,kBAAmB5L,GAAOzE,KAAK0M,kBAAkBjI,QAKtDzE,KAAKiK,YAAY,gBAChBjI,EAAA,OAAKE,MAAM,qBACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQE,MAAM,+BAA+B6N,QAAS,IAAM/P,KAAKsJ,eAAa,WAIhFtH,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQE,MAAM,6BAA6B6N,QAAS,IAAM/P,KAAK0O,SAAS1O,KAAKyI,WAAS,aAM1FzG,EAAA,OAAKE,MAAM,qBACTF,EAAA,OAAKE,MAAOlC,KAAKyJ,YAAY0C,aAAe,gBAAkBnM,KAAKiK,YAAY,YAAc,QAAU,UACrGjI,EAAA,UAAQE,MAAM,+BAA+B6N,QAAS,IAAM/P,KAAKsJ,eAAa,WAI/EtJ,KAAKyJ,YAAY0C,aAAe,gBAAkBnM,KAAKiK,YAAY,YAClEjI,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQE,MAAM,6BAA6BoO,SAAUnQ,OAAOqN,KAAKxN,KAAK6I,eAAe4E,SAAW,EAAGsC,QAAS,IAAM/P,KAAK0O,SAAS1O,KAAKyI,WAAS,YAI9I,M,CAOd,qBAAA8H,GACE,OACEvO,EAAA,OAAKE,MAAM,gCACTF,EAAA,wBACE6D,SAAU7F,KAAK2J,cAAc6G,YAC7B1K,OAAQ9F,KAAK2J,cAAc8G,UAC3B/L,UAAW1E,KAAKyJ,YAAYiH,WAC5BL,kBAAmBzO,GAAS5B,KAAK6N,sBAAsBjM,KAEzDI,EAAA,OAAKE,MAAM,qBACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQE,MAAM,+BAA+B6N,QAAS,IAAM/P,KAAKsJ,eAAa,WAIhFtH,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQE,MAAM,6BAA6B6N,QAAS,IAAM/P,KAAK2Q,mBAAiB,iB,CAS1F,mBAAAC,CACEhP,GAKAA,EAAMkM,2BACNlM,EAAMmM,kBACN,OAAQnM,EAAMgL,OAAOzL,KACnB,IAAK,OACHnB,KAAK6Q,SAAS,OACd,MACF,IAAK,SACH7Q,KAAKsJ,cACL,MACF,IAAK,OACHtJ,KAAK0O,SAAS1O,KAAKwI,UACnB,MACF,IAAK,OACHxI,KAAK6Q,SAAS,OACd,MACF,IAAK,iBACH7Q,KAAK6Q,SAAS,MACd,M,CAKN,4BAAAC,CAA6BlP,GAC3BA,EAAMkM,2BACNlM,EAAMmM,kBACN,GAAInM,EAAMgL,OAAOzL,MAAQ,mBAAoB,CAC3CnB,KAAKmO,yBAAyBvM,E,KACzB,CACL5B,KAAKkO,sBAAsBtM,E,EAG/B,qBAAM+O,GACJ,MAAMpJ,EAAc1C,GAAuB7E,KAAK2D,eAAeC,qBAC/D,MAAM4D,QAAexH,KAAKgE,eAAeyD,UAAStH,OAAAC,OAAA,CAChDiG,UAAWuH,EAAsB5N,KAAKyJ,YAAYC,iBAAiB7D,UACnES,QAASsH,EAAsB5N,KAAKyJ,YAAYC,iBAAiB5D,QACjEmC,MAAOjI,KAAK2D,eAAeE,iBAAmB,GAC9CgE,MAAO7H,KAAKyJ,YAAY3B,MAAM0G,WAC9BzG,iBAAkB/H,KAAK2D,eAAeG,eAAiB,MAAQ9D,KAAK2D,eAAeC,sBAAwB,EAAI,MAAQ,MACvHoE,YAAahI,KAAK2D,eAAeC,qBAAuB,IACrD2D,IAEL,MAAMwJ,QAAoBC,EAAyBxJ,GACnDxH,KAAKiR,eAAe/P,KAAK6P,GACzB/Q,KAAKsJ,a,CAIP,cAAMuH,CAASK,GACblR,KAAKmR,gBAAgBD,GAErB,IAKE,GAAI,CAAC,MAAO,MAAO,OAAOpQ,SAASd,KAAKyJ,YAAY2H,aAAc,CAChEpR,KAAKgJ,cAAc9B,YAAYlH,KAAKyJ,YAAYtC,K,CAGlD,GAAInH,KAAKiK,YAAY,iBAIrB,MAAMO,EAAcxK,KAAKiK,YAAY,gBAAkBjK,KAAKqR,2BAA6B,GACzF,MAAMxJ,EAAQ7H,KAAKiK,YAAY,eAAiBjK,KAAKyJ,YAAY3B,MAAQnD,UACzE,MAAM2M,EAActR,KAAKiK,YAAY,gBAAkBjK,KAAKyJ,YAAY8H,eAAiB5M,UACzF,GAAI3E,KAAKiK,YAAY,gBAAiB,CACpCjK,KAAK8I,iBAAiBvG,QAAUvC,KAAKyJ,YAAYxB,K,CAEnD,MAAMT,QAAexH,KAAKgE,eAAe6M,SACvC7Q,KAAK8I,iBACLoI,EACAlR,KAAKyJ,YAAYC,iBAAiB7D,SAClC7F,KAAKyJ,YAAYC,iBAAiB5D,OAClC9F,KAAKC,UACLD,KAAK2J,cAAcwG,eACnBnQ,KAAKsK,aACLtK,KAAK2L,WACL3L,KAAK6L,SACLyF,EACAtR,KAAKyJ,YAAY+H,MACjBhH,EACA3C,GAEF,GAAIqJ,GAAYlR,KAAKiK,YAAY,gBAAiB,CACNwH,EAAoBjK,E,EAMhE,MAAOlD,G,SAGPtE,KAAK0R,mB,EAIT,eAAAP,CAAgBQ,GACd,GAAI3R,KAAKiK,YAAY,gBAAiB,CACpCjK,KAAK4R,UAAY,M,KACZ,CACL5R,KAAK4R,UAAYD,EAAe,iBAAmB,M,EAIvD,wBAAAN,GACE,OAAOrR,KAAK8I,iBAAiB0B,YAAYhJ,MAAKX,GAAKA,EAAE0C,gBAAkBvD,KAAKyJ,YAAYoI,eAAcvO,S,CAGxG,iBAAAoO,GACE1R,KAAK4R,UAAY,GACjBE,YAAW,KACT9R,KAAKsJ,aAAa,GACjB,I,CAEL,MAAAvH,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,qBAAqB6N,QAAS,IAAM/P,KAAKsJ,gBACpDtH,EAAA,OAAKE,MAAO,eAAiBlC,KAAKwP,mBAAqB,uCAAyC,0CAC9FxN,EAAA,OAAKE,MAAM,6BACTF,EAAA,OAAKE,MAAM,eACTF,EAAA,MAAIE,MAAM,2CAA2ClC,KAAKwP,mBAAqBxP,KAAKyJ,YAAYsI,kBAAoB/R,KAAKyJ,YAAYuI,OACrIhQ,EAAA,UAAQY,KAAK,SAASV,MAAM,mBAAmB6N,QAAS,IAAM/P,KAAKsJ,eACjEtH,EAAA,KAAGE,MAAM,YAKdlC,KAAKqP,cAAgBrP,KAAK8P,kBAE1B9P,KAAKsP,aAAetP,KAAKgQ,iBAEzBhQ,KAAKuP,aACJvN,EAAA,eACEiQ,mBAAoBjS,KAAKiS,mBACzBC,kBAAmBlS,KAAKC,UACxBkS,gBAAiBnS,KAAKmS,gBACtBP,UAAW5R,KAAK4R,UAChB/I,cAAe7I,KAAK6I,cACpBxF,kBAAmBrD,KAAKqD,kBACxBsG,cAAe3J,KAAK2J,cACpBF,YAAazJ,KAAKyJ,YAClBd,uBAAwB3I,KAAK2I,uBAC7BiD,SAAU5L,KAAK4L,SACf9C,iBAAkB9I,KAAK8I,iBACvBsJ,qBAAsBpS,KAAKiK,YAAY,iBAAmBjK,KAAKiK,YAAY,YAC3EoG,kBAAmBzO,GAAS5B,KAAK8Q,6BAA6BlP,GAC9DyQ,gBAAiBzQ,GAAS5B,KAAK4Q,oBAAoBhP,KAItD5B,KAAKwP,mBAAqBxP,KAAKuQ,wBAA0B,M,aChrBpE,MAAM+B,EAAqB,wtmJ,MCQdC,EAAe,M,8KAgB1BvS,KAAAwS,SAAmB,EACnBxS,KAAAyS,WAAqB,EACrBzS,KAAA0S,UAAoB,GAGZ1S,KAAA2S,cAAyB,MACzB3S,KAAA4S,kBAA6B,MAC7B5S,KAAAgJ,cAAgB,IAAIhD,EACpBhG,KAAA6S,WAAa,MAErB7S,KAAA8S,WAAqB,GACrB9S,KAAA+S,WAAsB,MAetB/S,KAAAgT,oBAAsBhT,KAAKiT,gBAAgBC,KAAKlT,MAChDA,KAAAmT,kBAAoBnT,KAAKoT,cAAcF,KAAKlT,MAC5CA,KAAAqT,uBAAyBrT,KAAKsT,mBAAmBJ,KAAKlT,M,gDAzChB,M,kDAOa,G,kDAGjB,M,wBAiClC,iBAAAD,GACEwT,OAAOlK,iBAAiB,QAASrJ,KAAKqT,uB,CAGxC,gBAAAlK,GACE,GAAInJ,KAAKwT,aAAc,CACrB,IAAKxT,KAAKsH,aAAamM,WAAY,CAEjC3B,YAAW,KACT9R,KAAK0T,cAAc,MACnB1T,KAAK2F,aAAa,GACjB,E,GAKT,oBAAA4D,GACEgK,OAAO/J,oBAAoB,QAASxJ,KAAKqT,uB,CAI3C,kBAAAC,CAAmB1R,GACjB,MAAM+R,EAAiB/R,EAAME,OAE7B,IAAK9B,KAAK4T,QAAQC,SAASF,GAAiB,CAE1C3T,KAAK0T,cAAc,M,EAKvB,mBAAAI,CAAoBlS,GAClB,GAAIA,EAAMgL,OAAOmH,qBAAuB/T,KAAKgU,gBAAmBpS,EAAMgL,OAAOzL,MAAQ,cAAgBS,EAAMgL,OAAOmH,sBAAwB/T,KAAKgU,eAAiB,CAC9JhU,KAAK2S,cAAgB,MACrB3S,KAAK2F,a,EAKT,0BAAMsO,CAAqBrS,GACzB,IACE,GAAIA,EAAMgL,OAAOiC,YAAc7O,KAAKgU,eAAgB,CAClDhU,KAAK0T,cAAc,OACnB,M,CAGF,GAAI9R,EAAMgL,OAAOsH,YAAc,UAAYtS,EAAMgL,OAAOuH,WAAa,SAAU,CAC7EvS,EAAMgL,OAAOsH,UAAYlU,KAAKsH,aAAaK,UAC3C/F,EAAMgL,OAAOuH,SAAWvS,EAAMgL,OAAOwH,WACrC,GAAIpU,KAAKqU,cAAgBrU,KAAKsU,gBAAkB,GAAKtU,KAAKuU,gBAAkB,EAAG,CAC7EvU,KAAK0T,cAAc,K,MAEhB,CACL,GAAI1T,KAAKqU,cAAgBrU,KAAKsU,gBAAkB,GAAKtU,KAAKuU,gBAAkB,EAAG,CAC7EvU,KAAK0T,cAAc,K,KACd,CACL,MAAMvN,KAAEA,EAAIE,UAAEA,EAASC,QAAEA,EAAO6N,SAAEA,GAAavS,EAAMgL,OAErD,GAAI5M,KAAKwU,oBAAoBL,EAAU9N,EAAWC,KAAatG,KAAK6S,WAAY,CAC9E7S,KAAK4T,QAAQa,MAAMC,IAAM,GAAG1U,KAAK2U,YAAYD,QAC7C1U,KAAK4T,QAAQa,MAAMG,KAAO,GAAG5U,KAAK2U,YAAYC,SAE9C5U,KAAK6U,WAAU1U,OAAAC,OAAAD,OAAAC,OAAA,GACVJ,KAAK2U,aAAW,CACnB5T,GAAIf,KAAKgU,eACTI,WAAYpU,KAAK8U,oBAGnB9U,KAAK+U,kBAAkB7T,KAAK,CAAEH,GAAI,gBAAiBM,KAAMrB,KAAK6U,Y,CAGhE,MAAMrN,QAAexH,KAAKgJ,cAAc9C,gBAAgBC,EAAMgO,EAAU9N,EAAWC,GACnFtG,KAAKsH,aAAaH,KAAOK,EAAOJ,UAAUD,I,EAI9C,GAAIvF,EAAMgL,OAAOwH,aAAepU,KAAK8U,kBAAmB,CACtD9U,KAAKgV,oBAAoBpT,EAAMgL,QAC/B5M,KAAK2F,a,EAEP,MAAOrB,GAAO,C,CAElB,mBAAAkQ,CAAoBL,EAAU9N,EAAWC,GACvC,MAAM2O,EAAW,IAAIlQ,KAAKsB,GAAW6O,UACrC,MAAMC,EAAS,IAAIpQ,KAAKuB,GAAS4O,UAEjC,MAAME,EAAapV,KAAKqV,iBAAiBC,MAAK1T,IAC5C,MAAM2T,EAAgB,IAAIxQ,KAAKnD,EAAM+F,WAAWuN,UAChD,MAAMM,EAAc,IAAIzQ,KAAKnD,EAAMgG,SAASsN,UAE5C,OAAOtT,EAAMkG,SAAWqM,GAAYqB,EAAcP,GAAYM,EAAgBJ,CAAM,IAGtF,OAAOC,C,CAET,WAAAzP,GACE3F,KAAKyV,eAAiBzV,KAAKyV,a,CAG7B,WAAAC,GACE,OAAO,IAAI3Q,MAAOmQ,S,CAGpB,mBAAAF,CAAoB3T,GAClBrB,KAAKsH,aAAaQ,MAAQzG,EAAK8S,SAC/BnU,KAAKsH,aAAaK,UAAYtG,EAAK6S,UAAU/L,MAAM,KAAKwN,UAAUvN,KAAK,KACvE,IAAIwN,EAAW,IAAI7Q,KAAK/E,KAAKsH,aAAaK,WAC1CiO,EAASC,QAAQD,EAASrQ,UAAYvF,KAAK8V,eAC3C9V,KAAKsH,aAAaM,QAAUgO,EAASG,cAAgB,KAAOH,EAASI,WAAa,GAAK,IAAMJ,EAASrQ,S,CAIxG,cAAA0Q,GACE,QAASjW,KAAKsH,aAAa4O,a,CAG7B,UAAA1C,GACE,OAAOxT,KAAKgU,iBAAmB,gB,CAGjC,oBAAAmC,GACE,OAAOnW,KAAKoW,iBAAmB,Y,CAGjC,YAAApC,GACE,OAAOhU,KAAKsH,aAAa0H,E,CAG3B,gBAAAqH,GACE,OAAOrW,KAAKsH,aAAagP,M,CAG3B,WAAAC,GACE,OAAOvW,KAAKsH,aAAagE,I,CAG3B,eAAAwJ,GACE,OAAO9U,KAAKsH,aAAaQ,K,CAG3B,oBAAA0O,GACE,OAAO,IAAIzR,KAAK/E,KAAKsH,aAAaK,U,CAGpC,kBAAA8O,GACE,OAAO,IAAI1R,KAAK/E,KAAKsH,aAAaM,Q,CAGpC,YAAAwO,GACE,OAAOpW,KAAKsH,aAAa6E,U,CAG3B,cAAAuK,G,QAEE,IAAIC,GAAS3K,EAAAhM,KAAKsH,gBAAY,MAAA0E,SAAA,SAAAA,EAAE4K,WAAWC,SAAS7W,KAAKqW,oBACzD,IAAIS,EAAY9W,KAAKwT,aAAe,CAAEuD,MAAO,WAAc,GAC3D,OAAA5W,OAAAC,OAAAD,OAAAC,OAAAD,OAAAC,OAAA,IACK4W,EAAAhX,KAAKsH,gBAAY,MAAA0P,SAAA,SAAAA,EAAEJ,WAAWD,EAAO5V,KACrC4V,GACAG,E,CAIP,iBAAAG,CAAkBC,G,MAEhB,IAAIP,GAAS3K,EAAAhM,KAAKsH,gBAAY,MAAA0E,SAAA,SAAAA,EAAE4K,WAAWC,SAASK,GACpD,OAAA/W,OAAAC,OAAAD,OAAAC,OAAA,GAAYJ,KAAKsH,aAAasP,WAAWD,EAAO5V,KAAQ4V,E,CAG1D,WAAAQ,GACE,GAAInX,KAAKsH,aAAaW,OAASjI,KAAKsH,aAAa8P,cAAe,CAC9D,OAAOpX,KAAKiX,kBAAkB,Q,CAEhC,OAAO,I,CAGT,cAAAI,GACE,GAAIrX,KAAKsH,aAAagQ,QAAS,CAC7B,OAAOtX,KAAKiX,kBAAkB,sB,CAEhC,OAAO,I,CAGT,WAAAM,CAAYC,GACVxX,KAAKsH,aAAamQ,WAAaD,EAC/BxX,KAAK2F,a,CAIP,WAAAmQ,GACE,OAAO9V,KAAKsH,aAAamQ,U,CAG3B,WAAAC,GACE,IAAIC,EAAe3X,KAAKwW,uBACxB,IAAIoB,EAAoB,SAAW5X,KAAK8U,kBAAoB,IAAM6C,EAAapS,UAAY,KAAOoS,EAAa3B,WAAa,GAAK,IAAM2B,EAAa5B,cACpJ,IAAI8B,EAAgBzO,SAAS0O,cAAc,kBAC3C,IAAIC,EAAe3O,SAAS0O,cAAcF,GAC1C,IAAII,EAAM,CAAEtD,IAAK,IAAKE,KAAM,IAAKqD,MAAO,IAAKC,OAAQ,QACrD,GAAIH,GAAgBF,GAAiBE,EAAaI,yBAA2BN,EAAcM,wBAAyB,CAClH,IAAIC,EAAoBP,EAAcM,wBACtC,IAAIE,EAAeN,EAAaI,wBAChCnY,KAAKwS,SAAWxS,KAAKwS,UAAY6F,EAAaJ,MAC9CD,EAAItD,IAAM2D,EAAa3D,IAAM2D,EAAaH,OAAS,EAAIlY,KAAK0S,UAAY0F,EAAkB1D,IAAM,KAChGsD,EAAIpD,KAAOyD,EAAazD,KAAO5U,KAAKwS,SAAW,EAAIxS,KAAKyS,WAAa,EAAI2F,EAAkBxD,KAAO,KAClGoD,EAAIC,MAAQjY,KAAK8V,cAAgB9V,KAAKwS,SAAWxS,KAAKyS,WAAa,I,KAC9D,CACL7L,QAAQC,IAAI,8BAA+B+Q,E,CAG7C,OAAOI,C,CAGT,SAAAM,CAAUC,GACR,OAAOA,EAAQC,WAAWD,GAAS,C,CAGrC,aAAAE,CAAc7W,EAAY8W,GACxB9W,EAAMqM,iBACNrM,EAAMmM,kBACNnM,EAAMkM,2BAEN,GAAI9N,KAAKwT,cAAgBxT,KAAKmW,uBAAwB,CACpD,OAAO,I,CAGTnW,KAAK8S,WAAa4F,EAClB1Y,KAAK+S,WAAa,KAElB/S,KAAK0T,cAAc,OACnB1T,KAAK6S,WAAa6F,IAAS,OAC3B,GAAIA,IAAS,OAAQ,CACnB1Y,KAAK2Y,SAAW/W,EAAMgX,SAAWhX,EAAMiX,QAAQ,GAAGD,QAClD5Y,KAAK8Y,SAAWlX,EAAMmX,SAAWnX,EAAMiX,QAAQ,GAAGE,QAClD/Y,KAAKgZ,YAAchZ,KAAK4T,QAAQuE,wBAChC,MAAMc,EAAU,EAChB,MAAMC,EAAU,EAChBlZ,KAAK2U,YAAc,CACjB5T,GAAIf,KAAKgU,eACTI,WAAYpU,KAAK8U,kBACjBJ,IAAK1U,KAAKsY,UAAUtY,KAAK4T,QAAQa,MAAMC,KAAOwE,EAC9CtE,KAAM5U,KAAKsY,UAAUtY,KAAK4T,QAAQa,MAAMG,MAAQqE,GAElDjZ,KAAK2U,YAAYwE,EAAInZ,KAAK2U,YAAYC,KACtC5U,KAAK2U,YAAYyE,EAAIpZ,KAAK2U,YAAYD,IACtC1U,KAAK6U,WAAU1U,OAAAC,OAAA,GAAQJ,KAAK2U,aAC5B3U,KAAK4T,QAAQa,MAAMC,IAAM,GAAG1U,KAAK2U,YAAYD,QAC7C1U,KAAK4T,QAAQa,MAAMG,KAAO,GAAG5U,KAAK2U,YAAYC,SAC9C5U,KAAKqU,aAAe,KACpBrU,KAAK+U,kBAAkB7T,KAAK,CAC1BH,GAAI,6BACJM,KAAMrB,KAAK2U,a,KAER,CACL3U,KAAKqZ,aAAerZ,KAAK4T,QAAQ0F,YACjCtZ,KAAKuZ,YAAcvZ,KAAK4T,QAAQ4F,WAChCxZ,KAAK2Y,SAAW/W,EAAMgX,SAAWhX,EAAMiX,QAAQ,GAAGD,QAClD5Y,KAAK+U,kBAAkB7T,KAAK,CAC1BH,GAAI,6BACJM,KAAM,CACJN,GAAIf,KAAKgU,eACTI,WAAYpU,KAAK8U,kBACjBJ,IAAK1U,KAAKsY,UAAUtY,KAAK4T,QAAQa,MAAMC,KACvCE,KAAM5U,KAAKuZ,YACXJ,EAAGnZ,KAAK2Y,SACRS,EAAGxX,EAAMmX,SAAWnX,EAAMiX,QAAQ,GAAGE,U,CAK3C3P,SAASC,iBAAiB,YAAarJ,KAAKgT,qBAC5C5J,SAASC,iBAAiB,YAAarJ,KAAKgT,qBAC5C5J,SAASC,iBAAiB,cAAerJ,KAAKgT,qBAE9C5J,SAASC,iBAAiB,UAAWrJ,KAAKmT,mBAC1C/J,SAASC,iBAAiB,UAAWrJ,KAAKmT,mBAC1C/J,SAASC,iBAAiB,YAAarJ,KAAKmT,kB,CAG9C,eAAAF,CAAgBrR,GACd,GAAI5B,KAAK+S,WAAY,CACnB/S,KAAKyZ,SAAW7X,EAAMgX,SAAWhX,EAAMiX,QAAQ,GAAGD,QAClD,IAAIc,EAAY1Z,KAAKyZ,SAAWzZ,KAAK2Y,SACrC,GAAI3Y,KAAK8S,aAAe,OAAQ,CAC9B9S,KAAK2Z,SAAW/X,EAAMmX,SAAWnX,EAAMiX,QAAQ,GAAGE,QAClD,IAAIa,EAAY5Z,KAAK2Z,SAAW3Z,KAAK8Y,SACrC9Y,KAAK4T,QAAQa,MAAMC,IAAM,GAAG1U,KAAK2U,YAAYD,IAAMkF,MACnD5Z,KAAK4T,QAAQa,MAAMG,KAAO,GAAG5U,KAAK2U,YAAYC,KAAO8E,MACrD1Z,KAAK6U,WAAa,CAChB9T,GAAIf,KAAKgU,eACTI,WAAYpU,KAAK8U,kBACjBJ,IAAK1U,KAAK2U,YAAYD,IAAMkF,EAC5BhF,KAAM5U,KAAK2U,YAAYC,KAAO8E,GAEhC1Z,KAAK6U,WAAWsE,EAAInZ,KAAK6U,WAAWD,KACpC5U,KAAK6U,WAAWuE,EAAIpZ,KAAK6U,WAAWH,IACpC1U,KAAK+U,kBAAkB7T,KAAK,CAAEH,GAAI,YAAaM,KAAMrB,KAAK6U,Y,KACrD,CACL,IAAIgF,EAAW7Z,KAAKqZ,aACpB,GAAIrZ,KAAK8S,YAAc,YAAa,CAClC+G,EAAW7Z,KAAKqZ,aAAeK,EAC/BG,EAAWC,KAAKC,IAAIF,EAAU7Z,KAAK2Y,SAAW3Y,KAAK4T,QAAQ0F,aAC3DO,EAAWC,KAAKE,IAAIha,KAAKwS,SAAWxS,KAAKyS,WAAYoH,GACrD7Z,KAAK4T,QAAQa,MAAMwD,MAAQ,GAAG4B,K,MACzB,GAAI7Z,KAAK8S,YAAc,WAAY,CACxC+G,EAAWC,KAAKE,IAAIha,KAAKwS,SAAWxS,KAAKyS,WAAYzS,KAAKqZ,aAAeK,GACzE,IAAIO,EAAUja,KAAKuZ,aAAevZ,KAAKqZ,aAAeQ,GACtD7Z,KAAK4T,QAAQa,MAAMG,KAAO,GAAGqF,MAC7Bja,KAAK4T,QAAQa,MAAMwD,MAAQ,GAAG4B,K,CAEhC7Z,KAAKka,WAAaL,C,MAEf,CACLjT,QAAQC,IAAI,gC,EAIhB,aAAAuM,GACE,GAAIpT,KAAK+S,WAAY,CACnB,GAAI/S,KAAK8S,aAAe,OAAQ,CAK9B,GAAI9S,KAAKqU,aAAc,CACrBrU,KAAKsU,eAAiBwF,KAAKK,IAAIna,KAAK6U,WAAWsE,EAAInZ,KAAK2U,YAAYwE,GACpEnZ,KAAKuU,eAAiBuF,KAAKK,IAAIna,KAAK6U,WAAWuE,EAAIpZ,KAAK2U,YAAYyE,E,CAEtEpZ,KAAK+U,kBAAkB7T,KAAK,CAC1BH,GAAI,gBACJM,KAAIlB,OAAAC,OAAAD,OAAAC,OAAA,GACCJ,KAAK6U,YAAU,CAClB1O,KAAMnG,KAAKsH,aAAaH,KACxBiT,SAAUpa,KAAKsH,aAAamQ,c,KAG3B,CACL,IAAI4C,EAAeP,KAAKQ,MAAMta,KAAKka,WAAala,KAAKwS,UACrD,IAAI+H,EAAkBva,KAAK8V,cAC3B,GAAIyE,GAAmBF,EAAc,CACnCra,KAAKuX,YAAY8C,GACjB,GAAIra,KAAK8S,YAAc,WAAY,CACjC9S,KAAK4T,QAAQa,MAAMG,KAAO,GAAG5U,KAAKuZ,aAAegB,EAAkBF,GAAgBra,KAAKwS,Y,CAK1FxS,KAAK+U,kBAAkB7T,KAAK,CAC1BH,GAAI,mBACJM,KAAM,CACJN,GAAIf,KAAKgU,eACTI,YAAapU,KAAK8U,kBAClBqE,GAAInZ,KAAK4T,QAAQa,MAAMG,KAAKtS,QAAQ,KAAM,IAC1C8W,GAAIpZ,KAAK4T,QAAQa,MAAMC,IAAIpS,QAAQ,KAAM,IACzC6D,KAAMnG,KAAKsH,aAAaH,KACxBiT,SAAUpa,KAAKsH,aAAamQ,cAGhCzX,KAAK4T,QAAQa,MAAMwD,MAAQ,GAAGoC,EAAera,KAAKwS,SAAWxS,KAAKyS,c,KAC7D,CACLzS,KAAK4T,QAAQa,MAAMG,KAAO,GAAG5U,KAAKuZ,gBAClCvZ,KAAK4T,QAAQa,MAAMwD,MAAQ,GAAGoC,EAAera,KAAKwS,SAAWxS,KAAKyS,c,OAGjE,CACL7L,QAAQC,IAAI,8B,CAEd7G,KAAK+S,WAAa,MAClB3J,SAASI,oBAAoB,YAAaxJ,KAAKgT,qBAC/C5J,SAASI,oBAAoB,YAAaxJ,KAAKgT,qBAC/C5J,SAASI,oBAAoB,cAAexJ,KAAKgT,qBAEjD5J,SAASI,oBAAoB,UAAWxJ,KAAKmT,mBAC7C/J,SAASI,oBAAoB,UAAWxJ,KAAKmT,mBAC7C/J,SAASI,oBAAoB,YAAaxJ,KAAKmT,kB,CAGjD,UAAAnS,CAAWK,GACTrB,KAAKwa,gBAAgBtZ,KAAKG,E,CAG5B,aAAAqS,CAAc+G,GACZ,GAAIza,KAAKmW,wBAA0BnW,KAAKsH,aAAamM,WAAY,CAC/D,OAAO,I,CAGT,GAAIgH,EAAU,CAEZ,IAAI5C,EAAgBzO,SAAS0O,cAAc,4BAC3C,IAAIM,EAA4CP,EAAcM,wBAC9D,IAAIa,EAAsChZ,KAAK4T,QAAQuE,wBACvD,IAAIuC,EAAWtC,EAAkBF,OAAS,EAAIE,EAAkB1D,IAIhE,GAAIsE,EAAYtE,IAAMgG,EAAU,CAC9B1a,KAAK4S,kBAAoB,K,KACpB,CACL5S,KAAK4S,kBAAoB,I,EAK7B,GAAI6H,EAAU,CACZza,KAAK2a,eAAezZ,KAAK,CACvBC,IAAK,YACL4S,oBAAqB/T,KAAKgU,gB,CAG9BhU,KAAK2S,cAAgB8H,EACrBza,KAAK2F,a,CAGP,MAAA5D,GAEE,IAAI6Y,EAAS5a,KAAK0W,iBAClB,IAAImE,EAAW7a,KAAKmX,cACpB,IAAI2D,EAAc9a,KAAKqX,iBAEvB,OACErV,EAACC,EAAI,CACHC,MAAO,gBAAgBlC,KAAKwT,cAAgBxT,KAAKmW,uBAAyB,WAAa,MAAMyE,EAAOG,UACpGtG,MAAOzU,KAAK0X,cACZ3W,GAAI,SAAWf,KAAKgU,gBAGpBhS,EAAA,OACEE,MAAO,qBAAqBlC,KAAKiW,iBAAmB,eAAiB,KACrExB,MAAO,CAAEuG,gBAAiBJ,EAAO7D,OACjCkE,aAAcrZ,GAAS5B,KAAKyY,cAAc7W,EAAO,QACjDsZ,YAAatZ,GAAS5B,KAAKyY,cAAc7W,EAAO,UAEjDiZ,EAAW7Y,EAAA,OAAKE,MAAM,yBAAyBuS,MAAO,CAAEuG,gBAAiBH,EAAS9D,SAAkB,KACpG+D,EAAc9Y,EAAA,OAAKE,MAAM,4BAA4BuS,MAAO,CAAEuG,gBAAiBF,EAAY/D,SAAkB,KAE9G/U,EAAA,OAAKE,MAAM,oBAAoB+Y,aAAcrZ,GAAS5B,KAAKyY,cAAc7W,EAAO,QAASsZ,YAAatZ,GAAS5B,KAAKyY,cAAc7W,EAAO,SACtI5B,KAAKuW,eAERvU,EAAA,OACEE,MAAM,kCACN+Y,aAAcrZ,GAAS5B,KAAKyY,cAAc7W,EAAO,YACjDsZ,YAAatZ,GAAS5B,KAAKyY,cAAc7W,EAAO,cAElDI,EAAA,OACEE,MAAM,mCACN+Y,aAAcrZ,GAAS5B,KAAKyY,cAAc7W,EAAO,aACjDsZ,YAAatZ,GAAS5B,KAAKyY,cAAc7W,EAAO,eAEjD5B,KAAK2S,cACJ3Q,EAAA,2BACEmZ,mBAAoBnb,KAAKmb,mBACzBhJ,gBAAiBnS,KAAKmS,gBACtBtG,SAAU7L,KAAK6L,SACf3J,MAAM,MACNoF,aAActH,KAAKsH,aACnB8T,cAAepb,KAAK4S,oBAEpB,K,0CC/fZ,MAAMyI,EAA0B,kujK,MCWnBC,EAAoB,M,qNAavBtb,KAAAub,gBAAyB,IAAIxW,MAAOG,SAAS,EAAG,EAAG,EAAG,GACtDlF,KAAAwb,aAAe,IAAIxV,E,+CAZM,M,+EAGK,M,yBAUtC,YAAAgO,GACE,OAAOhU,KAAKsH,aAAa0H,E,CAG3B,iBAAAyM,GACE,OAAOzb,KAAKsH,aAAawD,Y,CAG3B,cAAA4Q,GACE,OAAO1b,KAAKsH,aAAaqU,K,CAG3B,UAAAC,GACE,OAAOC,EAAY7b,KAAKsH,aAAawU,QAAS9b,KAAKmS,iBAAiBzQ,I,CAEtE,YAAAqa,GACE,OAAOF,EAAY7b,KAAKsH,aAAawU,QAAS9b,KAAKmS,iBAAiB6J,Y,CAEtE,WAAAC,GACE,OAAOjc,KAAKsH,aAAawU,QAAU,GAAG9b,KAAKsH,aAAa4U,UAAYlc,KAAK+b,eAAiB,IAAM,KAAK/b,KAAK0b,sBAAsB1b,KAAK4b,eAAiB5b,KAAK0b,gB,CAG7J,YAAAS,GACE,OAAOnc,KAAKsH,aAAaW,K,CAG3B,eAAAmU,GACE,OAAOpc,KAAKsH,aAAa8P,a,CAG3B,aAAAiF,GACE,OAAOrc,KAAKsH,aAAagV,W,CAG3B,cAAAC,GACE,OAAOvc,KAAKsH,aAAakV,a,CAG3B,eAAAC,GACE,OAAOzc,KAAKsH,aAAaoV,W,CAG3B,cAAAC,GACE,OAAO3c,KAAKsH,aAAauK,Y,CAG3B,WAAA+K,GACE,OAAO5c,KAAKsH,aAAa+D,S,CAG3B,YAAAwR,GACE,OAAO7c,KAAKsH,aAAaoJ,U,CAG3B,oBAAAoM,GACE,OAAO9c,KAAKsH,aAAa1D,mB,CAG3B,YAAAmZ,GACE,OAAO/c,KAAKgU,iBAAmB,gB,CAGjC,WAAAgJ,GACE,OAAOhd,KAAKsH,aAAagP,SAAW,Y,CAGtC,YAAA2G,GACE,OAAOjd,KAAKsH,aAAagP,SAAW,a,CAGtC,kBAAA4G,GACE,OAAOld,KAAKsH,aAAagP,SAAW,WAAatW,KAAKsH,aAAagP,SAAW,oB,CAGhF,SAAA6G,GACE,OAAOnd,KAAKsH,aAAaQ,K,CAG3B,mBAAAsV,CAAoBla,GAGlB,OAAOlD,KAAKsH,aAAamE,UAAUjK,MAAKyK,GAAgBA,EAAaC,cAAc1K,MAAKC,GAAQA,EAAKV,KAAOmC,K,CAG9G,eAAAma,GACE,OAAOrd,KAAKsH,aAAa8E,eAAe,uBAAyBpM,KAAKsH,aAAagF,mBAAmBmB,M,CAGxG,UAAA6P,GACE,IAAKtd,KAAKud,cAAe,CACvB,IAAIzY,EAAK,IAAIC,KAAK/E,KAAKuc,kBACvBzX,EAAGI,SAAS,EAAG,EAAG,EAAG,GACrBlF,KAAKud,cAAgBzY,EAAGoQ,S,CAE1B,IAAKlV,KAAKwd,YAAa,CACrB,IAAI1Y,EAAK,IAAIC,KAAK/E,KAAKyc,mBACvB3X,EAAGI,SAAS,EAAG,EAAG,EAAG,GACrBlF,KAAKwd,YAAc1Y,EAAGoQ,S,CAExB,GAAIlV,KAAKgd,eAAiBhd,KAAKid,eAAgB,CAC7C,OAAO,K,CAET,GAAIjd,KAAKud,eAAiBvd,KAAKub,gBAAkBvb,KAAKub,gBAAkBvb,KAAKwd,YAAa,CACxF,OAAO,I,KACF,CACL,OAAO,K,EAIX,WAAAC,GACE,GAAIzd,KAAKgd,eAAiBhd,KAAKub,gBAAkBvb,KAAKwd,YAAa,CACjE,OAAO,I,KACF,CACL,OAAO,K,EAIX,qBAAA3P,CAAsBjM,GACpBA,EAAMkM,2BACNlM,EAAMmM,kBACN,MAAMJ,EAA8B/L,EAAMgL,OAC1C5M,KAAKsH,aAAYnH,OAAAC,OAAAD,OAAAC,OAAA,GAAQJ,KAAKsH,cAAiBqG,EAAItM,K,CAIrD,iBAAAqc,GAEE1d,KAAKsH,aAAa0K,MAAQ,YAC1BhS,KAAK2d,oBAAoB,e,CAG3B,mBAAAC,CAAoB9Y,GAClB,OAAOA,EAAGiR,cAAgB,KAAOjR,EAAGkR,WAAa,EAAI,IAAM,KAAOlR,EAAGkR,WAAa,GAAK,KAAOlR,EAAGS,WAAa,EAAI,IAAM,IAAMT,EAAGS,S,CAGnI,aAAAsY,GACE,IAAIhY,EAAW,IAAId,KACnBc,EAASX,SAAS,EAAG,EAAG,EAAG,GAC3B,IAAI4Y,EAAgB9d,KAAK4d,oBAAoB/X,GAE7C,IAAIC,EAAS,IAAIf,KACjBe,EAAO+P,QAAQ/P,EAAOP,UAAY,GAClCO,EAAOZ,SAAS,EAAG,EAAG,EAAG,GACzB,IAAI6Y,EAAc/d,KAAK4d,oBAAoB9X,GAE3C,IAAIkY,EAAY,CACdhP,GAAI,GACJ1D,KAAM,GACN3D,UAAWmW,EACXlW,QAASmW,EACTtS,UAAWzL,KAAKsH,aAAamE,UAC7BwS,oBAAqBje,KAAKsH,aAAa0H,GACvCgD,MAAO,gBAAkBhS,KAAKsH,aAAa0H,GAAK,MAAQhP,KAAKsH,aAAagE,KAC1Ea,WAAY,WACZzC,iBAAkB,CAChB7D,SAAUA,EACV2K,YAAa,GACb1K,OAAQA,EACR2K,UAAW,GACXN,eAAgB,EAChB+N,UAAW,KACX3b,QAAS,oDAIbvC,KAAK2d,oBAAoB,WAAYK,E,CAGvC,qBAAAG,GACEvX,QAAQC,IAAI,2B,CAGd,sBAAAuX,GACExX,QAAQC,IAAI,4B,CAEd,iBAAAwX,GACEre,KAAKse,aAAapd,KAAKlB,KAAKsH,aAAaH,MACzCP,QAAQC,IAAI,e,CAGd,8BAAM0X,GACJ,IACEve,KAAK4R,UAAY,SACjB,MAAMpK,QAAexH,KAAKwb,aAAanU,mBAAmBrH,KAAKsH,cAC/D,MAAMyJ,QAAoBC,EAAyBxJ,GACnDxH,KAAKwe,eAAetd,KAAK,CAAEiF,KAAMnG,KAAKsH,aAAaH,KAAM9F,KAAM,CAAC0P,KAChE/Q,KAAK2a,eAAezZ,KAAK,CACvBC,IAAK,aACL4S,oBAAqB/T,KAAKgU,iBAE5BhU,KAAK4R,UAAY,GACjBhL,QAAQC,IAAI,wB,CACZ,MAAOvC,G,EAKX,iCAAAma,GACEze,KAAK2d,oBAAoB,c,CAG3B,WAAAe,GACE,MAAMC,GAAgB3e,KAAKsH,aAAaQ,MACxC,IAAI8W,EAAoB,GAExB,IAAK,MAAMnd,KAAQzB,KAAKsH,aAAamE,UAAW,CAC9C,IAAK,MAAMoT,KAAgBpd,EAAKyK,cAAe,CAC7C,GAAIyS,IAAiBE,EAAa9d,GAAI,CACpC6d,EAAaE,SAAWrd,EAAKC,KAC7Bkd,EAAaG,UAAYF,EAAand,KACtCkd,EAAaI,WAAavd,EAC1B,OAAOmd,C,GAKb,OAAOA,C,CAET,mBAAAjB,CAAoBsB,EAAWC,EAAW,MACxC,MAAMhP,EAAWlQ,KAAK0e,cACtB,IAAIrd,EAAO6d,EAAWA,EAAWlf,KAAKsH,aACtCjG,EAAK8K,WAAa8S,EAClB,GAAI,CAAC,MAAO,MAAO,OAAOne,SAASd,KAAKsH,aAAa8J,aAAc,CACjE/P,EAAKoK,UAAY,CAACyE,EAAS8O,W,CAE7Bhf,KAAKmf,iBAAiBje,KAAK,CACzBC,IAAK,MACLE,KAAIlB,OAAAC,OAAAD,OAAAC,OAAA,GACCiB,GAAI,CACP2Q,MAAO,mBAAmB9B,EAAS4O,YAAY5O,EAAS6O,gBAI5D/e,KAAK2a,eAAezZ,KAAK,CACvBC,IAAK,aACL4S,oBAAqB/T,KAAKgU,gB,CAI9B,cAAAoL,GACE,OACEpd,EAAA,OAAKE,MAAO,yBAAyBlC,KAAKob,cAAgB,kBAAoB,gBAC5EpZ,EAAA,OAAKE,MAAM,oBACTF,EAAA,OAAKE,MAAM,uEACTF,EAAA,OAAKqd,IAAKrf,KAAKsH,aAAagY,OAAOC,KAAMC,IAAI,OAAOtd,MAAO,eAC3DF,EAAA,KAAGE,MAAO,YAAalC,KAAKsH,aAAa4U,UAAYlc,KAAKsH,aAAamY,oBAAsBzf,KAAKsH,aAAaiK,iBAEjHvP,EAAA,OAAKE,MAAM,yBACRwd,EAAkB1f,KAAK6L,SAAS5C,MAChCjJ,KAAKqc,kBAGVra,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAME,MAAM,oBAAkB,QAC7BlC,KAAKuc,iBAAgB,MAAIva,EAAA,QAAME,MAAM,oBAAkB,SACvDlC,KAAKyc,oBAGTzc,KAAK2c,kBACJ3a,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAME,MAAM,oBAAkB,kBAC7BlC,KAAK2c,mBAIX3c,KAAKyb,qBACJzZ,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAME,MAAM,oBAAkB,eAC7BlC,KAAKyb,sBAIXzb,KAAK0b,kBACJ1Z,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,8BACTF,EAAA,QAAME,MAAM,oBAAkB,WAC7BlC,KAAKic,gBAIXjc,KAAK4c,eACJ5a,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,oBACTF,EAAA,QAAME,MAAM,oBAAkB,eAC7BlC,KAAK4c,gBAIX5c,KAAKmc,eACJna,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,8BACTF,EAAA,QAAME,MAAM,oBAAkB,UAC7BlC,KAAKmc,iBAGR,KACHnc,KAAKoc,kBACJpa,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,8BACTF,EAAA,QAAME,MAAM,oBAAkB,qBAC7BlC,KAAKoc,oBAGR,KAEJpa,EAAA,OAAKE,MAAM,oBACTF,EAAA,OAAKE,MAAM,iDAAiDyd,KAAK,SAC/D3d,EAAA,UACEY,KAAK,SACLV,MAAM,uBACN6N,QAAS6P,IACP5f,KAAK0d,mBAAmB,EAE1BpN,UAAWtQ,KAAKsH,aAAauY,aAE7B7d,EAAA,KAAGE,MAAM,4BAA8B,SAEzCF,EAAA,UACEY,KAAK,SACLV,MAAM,uBACN6N,QAAS6P,IACP5f,KAAK6d,eAAe,EAEtBvN,UAAWtQ,KAAKsH,aAAauY,aAE7B7d,EAAA,KAAGE,MAAM,mCAAqC,aAE/ClC,KAAKsd,aACJtb,EAAA,UACEY,KAAK,SACLV,MAAM,2BACN6N,QAAS6P,IACP5f,KAAKme,uBAAuB,EAE9B7N,UAAWtQ,KAAKsH,aAAauY,aAE7B7d,EAAA,KAAGE,MAAM,4BAA8B,aAEvC,KACHlC,KAAKyd,cACJzb,EAAA,UACEY,KAAK,SACLV,MAAM,2BACN6N,QAAS6P,IACP5f,KAAKoe,wBAAwB,EAE/B9N,UAAWtQ,KAAKsH,aAAauY,aAE7B7d,EAAA,KAAGE,MAAM,+BAAiC,cAE1C,KACJF,EAAA,UACEY,KAAK,SACLV,MAAM,qBACN6N,QAAS6P,IACP5f,KAAKqe,mBAAmB,EAE1B/N,UAAWtQ,KAAKsH,aAAauY,aAAe7f,KAAKmb,oBAEjDnZ,EAAA,KAAGE,MAAM,+BAAiC,a,CAQtD,oBAAA4d,GACE,OACE9d,EAAA,OAAKE,MAAO,gCAAgClC,KAAKob,cAAgB,kBAAoB,gBACnFpZ,EAAA,UACEY,KAAK,SACLV,MAAM,qEACN6N,QAAS6P,IACP5f,KAAK2d,oBAAoB,cAAc,GACxC,sBAIF3d,KAAKqd,kBACJrb,EAAA,UACEY,KAAK,SACLV,MAAM,qEACN6N,QAAS6P,IACP5f,KAAK2d,oBAAoB,gBAAgB,GAC1C,mCAID,KACJ3b,EAAA,UACEY,KAAK,SACLV,MAAM,gEACN6N,QAAS6P,IACP5f,KAAK2d,oBAAoB,cAAc,GACxC,e,CAQT,cAAAoC,GAEE,OACE/d,EAAA,OAAKE,MAAO,0BAA0BlC,KAAKob,cAAgB,kBAAoB,gBAC7EpZ,EAAA,wBACE4D,aAAc,KACdZ,UAAWhF,KAAKsH,aAAa0Y,WAC7B/a,YAAajF,KAAKsH,aAAa2Y,aAC/B9b,YAAanE,KAAKsH,aAClBzB,SAAU7F,KAAKuc,iBACfzW,OAAQ9F,KAAKyc,kBACb/X,UAAW1E,KAAK6c,eAChBxM,kBAAmBzO,GAAS5B,KAAK6N,sBAAsBjM,KAEzDI,EAAA,OAAKE,MAAM,oBACTF,EAAA,OAAKE,MAAM,iDAAiDyd,KAAK,SAC/D3d,EAAA,UACEsO,SAAUtQ,KAAK4R,YAAc,SAC7BhP,KAAK,SACLV,MAAM,uBACN6N,QAAS6P,IACP5f,KAAKue,0BAA0B,GAGhCve,KAAK4R,YAAc,SAAW5P,EAAA,KAAGE,MAAM,sCAA2CF,EAAA,KAAGE,MAAM,0CAA4C,UAG1IF,EAAA,UACEY,KAAK,SACLV,MAAM,kBACN6N,QAAS6P,IACP5f,KAAKye,mCAAmC,GACzC,sBAIHzc,EAAA,UACEY,KAAK,SACLV,MAAM,sBACN6N,QAAS6P,IACP5f,KAAKqe,mBAAmB,GAG1Brc,EAAA,KAAGE,MAAM,+BAAiC,a,CAQtD,MAAAH,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAO,oBAAoBlC,KAAKob,cAAgB,sBAAwB,MAC3EpZ,EAAA,OAAKE,MAAO,iBAAiBlC,KAAKob,cAAgB,iBAAmB,yBAEtEpb,KAAKkd,qBAAuBld,KAAK+f,iBAAmB,KACpD/f,KAAK+c,eAAiB/c,KAAK8f,uBAAyB,MACnD9f,KAAKkd,uBAAyBld,KAAK+c,eAAiB/c,KAAKof,iBAAmB,K,aC3etF,MAAMc,EAA4B,+vvK,MCQrBC,EAAsB,M,sPAIP,G,uEAGI,e,4EAM9B,iBAAApgB,GACEC,KAAKogB,aAAe,CAClBlV,WAAYlL,KAAKqgB,aAAatf,GAC9B2B,qBAAsB1C,KAAKqgB,aAAaC,WAAW,GAAG5d,qBACtDsI,SAAU,EACVI,WAAY,EACZ5H,KAAMxD,KAAKqgB,aAAaC,WAAW,GAAGC,OACtCle,aAAcrC,KAAKqgB,aAAa3e,KAChCmJ,WAAY7K,KAAKqgB,aAAaC,WAAW,GAAGE,UAC5CC,cAAezgB,KAAKqgB,aAAaC,WAAW,GAAGI,UAC/Cle,YAAaxC,KAAKqgB,aAAa7d,YAC/BC,UAAWzC,KAAKqgB,aAAa5d,UAC7Bke,eAAgB,MAChBC,oBAAqB,GAEvB,GAAI5gB,KAAKmE,YAAa,CACpB,IAAK,MAAOhD,EAAKI,KAAUpB,OAAO0gB,QAAQ7gB,KAAKmE,aAAc,CAC3DnE,KAAKogB,aAAajf,GAAOI,C,GAK/B,mBAAAuf,CAAoBvf,GAClB,OAAOvB,KAAKqgB,aAAaC,WAAW9e,MAAKuf,GAAaA,EAAUre,uBAAyBnB,G,CAG3F,yBAAMyf,GACJhhB,KAAKogB,aAAYjgB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAKogB,cAAY,CACpB5c,KAAMxD,KAAKihB,yBAEbjhB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,qBACLwL,WAAY,OACZtL,KAAMrB,KAAKogB,c,CAIf,oBAAAa,GACE,IAAIzd,EAAOxD,KAAKogB,aAAaQ,oBAC7B,GAAI5gB,KAAKogB,aAAaO,eAAgB,CACpC,OAAO3gB,KAAKogB,aAAapV,WAAa,EAAIxH,EAAOxD,KAAKmQ,eAAiB3M,C,CAEzE,OAAOxD,KAAK8gB,oBAAoB9gB,KAAKogB,aAAa1d,sBAAsB6d,M,CAG1E,WAAAW,CAAYtf,GACV5B,KAAKogB,aAAaO,eAAiB,KACnC,MAAMQ,EAAevf,EAAME,OAC3B,IAAIsf,EAAaD,EAAa5f,MAC9B,MAAM8f,EAAe,WACrB,IAAKA,EAAaC,KAAKF,GAAa,CAClCA,EAAaA,EAAW9e,QAAQ,UAAW,IAC3C6e,EAAa5f,MAAQ6f,C,CAEvB,GAAIA,IAAeD,EAAa5f,MAAO,CACrCvB,KAAKsB,iBAAiB,OAAQM,E,EAIlC,gBAAAN,CAAiBH,EAAKsD,GACpB,GAAItD,IAAQ,uBAAwB,CAClC,MAAMogB,EAAWvhB,KAAK8gB,oBAAoBrc,EAAI3C,OAAOP,OACrDvB,KAAKogB,aAAYjgB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAKogB,cAAY,CACpBjf,CAACA,GAAMsD,EAAI3C,OAAOP,MAClBsJ,WAAY0W,EAASf,UACrBC,cAAec,EAASb,UACxBld,KAAM+d,EAAShB,Q,KAEZ,CACLvgB,KAAKogB,aAAYjgB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAKogB,cAAY,CACpBjf,CAACA,GAAMsD,EAAI3C,OAAOP,QAAU,GAAK,EAAI6C,SAASK,EAAI3C,OAAOP,Q,CAG7D,GAAIJ,IAAQ,QAAUsD,EAAI3C,OAAOP,QAAU,GAAI,CAC7CvB,KAAKogB,aAAYjgB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAKogB,cAAY,CACpBhV,WAAY,G,CAGhB,GAAIjK,IAAQ,OAAQ,CAClBnB,KAAKogB,aAAaQ,oBAAsB5gB,KAAKogB,aAAapV,WAAa,EAAI5G,SAASK,EAAI3C,OAAOP,OAASvB,KAAKmQ,eAAiB/L,SAASK,EAAI3C,OAAOP,M,CAEpJvB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,qBACLwL,WAAYxL,EACZE,KAAMrB,KAAKogB,c,CAIf,YAAAoB,GACExhB,KAAKiB,gBAAgBC,KAAK,CAAEC,IAAK,YAAaE,KAAMrB,KAAKogB,eACzDpgB,KAAKsB,iBAAiB,aAAc,CAAEQ,OAAQ,CAAEP,MAAO,OACvDvB,KAAKyhB,sBAAsBvgB,KAAK,CAAEC,IAAK,gBAAiBE,KAAM,I,CAGhE,MAAAU,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,eACTF,EAAA,OAAKE,MAAM,4CACTF,EAAA,YAAOhC,KAAKqgB,aAAa3e,MACzBM,EAAA,cAAYO,QAASvC,KAAKqgB,aAAa7d,YAAcxC,KAAKqgB,aAAa5d,aAEzET,EAAA,OAAKE,MAAM,+BACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,YAAUE,MAAM,qBACdF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAI4B,IAAMK,SAAUyB,GAAOzE,KAAKsB,iBAAiB,uBAAwBmD,IAC5GzE,KAAKqgB,aAAaC,WAAWnd,KAAI4d,GAChC/e,EAAA,UAAQT,MAAOwf,EAAUre,qBAAsBO,SAAUjD,KAAKogB,aAAa1d,uBAAyBqe,EAAUre,sBAC3Gqe,EAAUre,2BAMrBV,EAAA,OAAKE,MAAM,qBACTF,EAAA,YAAUE,MAAM,iDACdF,EAAA,SACEY,KAAK,OACLV,MAAM,wBACNX,MAAOvB,KAAKogB,aAAapV,WAAa,EAAIhL,KAAKogB,aAAa5c,KAAOxD,KAAKogB,aAAa5c,KAAOxD,KAAKmQ,eACjGpP,GAAI4B,IACJE,YAAY,OACZC,QAAUlB,GAAsB5B,KAAKkhB,YAAYtf,KAEnDI,EAAA,QAAME,MAAM,yBAAyBwd,EAAkB1f,KAAK6L,SAAS5C,QAEvEjH,EAAA,YAAUE,MAAM,6BACdF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAI4B,IAAMK,SAAUyB,GAAOzE,KAAKsB,iBAAiB,WAAYmD,IAChGzE,KAAK+I,gBAAgB5F,KAAI9B,GACxBW,EAAA,UAAQT,MAAOF,EAAKiC,UAAWL,SAAUjD,KAAKogB,aAAapV,YAAc3J,EAAKiC,WAC3EjC,EAAKkC,oBAOfvD,KAAKmC,cAAgB,gBAAkBnC,KAAKmC,cAAgB,WAC3DH,EAAA,OAAKE,MAAM,iBACTF,EAAA,YAAUE,MAAM,qBACdF,EAAA,UAAQsO,SAAUtQ,KAAKogB,aAAa5c,OAAS,EAAGtB,MAAM,wBAAwBnB,GAAI4B,IAAMK,SAAUyB,GAAOzE,KAAKsB,iBAAiB,aAAcmD,IAC1Iid,MAAMC,KAAK,CAAElU,OAAQzN,KAAK4hB,oBAAsB,IAAK,CAAChC,EAAGiC,IAAMA,IAAG1e,KAAI0e,GACrE7f,EAAA,UAAQT,MAAOsgB,EAAG5e,SAAUjD,KAAKogB,aAAahV,aAAeyW,GAC1DA,QAMT,KAEH7hB,KAAKmC,cAAgB,eACpBH,EAAA,OAAKE,MAAM,mCACTF,EAAA,YAAUE,MAAM,qBACdF,EAAA,SAAOY,KAAK,QAAQlB,KAAK,gBAAgBH,MAAM,IAAIyB,SAAUyB,GAAOzE,KAAKsB,iBAAiB,aAAcmD,GAAMiB,QAAS1F,KAAKogB,aAAahV,aAAe,MAG1J,KAEHpL,KAAKmC,cAAgB,eAAiBnC,KAAKmC,cAAgB,gBAC1DH,EAAA,UAAQsO,SAAUtQ,KAAKogB,aAAa5c,OAAS,EAAGZ,KAAK,SAASV,MAAM,8BAA8B6N,QAAS,IAAM/P,KAAKwhB,gBAAc,QAGlI,O,gFC5LhB,MAAMM,EAAqB,ohkJ,MCedC,EAAe,M,0EAUlB/hB,KAAAgiB,kBAAoB,CAAC,eAAgB,WAAY,gB,wEAP3B,e,mDAEJ,G,2CAGS,G,wBACK,E,CAGxC,iBAAAjiB,GACEC,KAAKoL,WAAapL,KAAKoQ,aAAalE,cAAcuB,OAClDzN,KAAK6I,cAAgB,IAAI6Y,MAAM1hB,KAAKoL,YAAY6W,KAAK,GACrDjiB,KAAKkiB,mBAAqB,IAAIR,MAAM1hB,KAAKoL,YAAY6W,KAAKjiB,KAAKoL,W,CAGjE,gBAAA+W,CAAiBvgB,EAA4CnB,GAC3DmB,EAAMkM,2BACNlM,EAAMmM,kBACN,MAAMJ,EAA8B/L,EAAMgL,OAC1C,IAAIvL,EAAIlB,OAAAC,OAAA,GAAQuN,EAAItM,MACpB,GAAIsM,EAAIhB,aAAe,aAAc,CACnC,IAAIyV,EAAW/gB,EAAK+J,WACpBpL,KAAK6I,cAAcpI,GAAS2hB,EAC5BpiB,KAAKqiB,yBAAyB5hB,E,CAEhCY,EAAK8J,eAAiBnL,KAAKoQ,aAAarP,GACxCM,EAAKe,iBAAmBpC,KAAKoQ,aAAa1O,KAC1CL,EAAKihB,UAAYtiB,KAAKoQ,aAAakS,UACnCtiB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAKwM,EAAIxM,IACTE,KAAMA,EACNsL,WAAYgB,EAAIhB,Y,CAGpB,wBAAA0V,CAAyBE,GACvB,MAAMC,EAA6CC,GAC1CziB,KAAK6I,cAAc6Z,QACxB,CAACC,EAAKC,EAAOC,IAASA,IAAQJ,EAAgBE,EAAMC,EAAQD,GAC5D,GAGJ3iB,KAAKkiB,mBAAqBliB,KAAKkiB,mBAAmB/e,KAAI,CAAC2f,EAAUriB,KAC/D,GAAIA,IAAU8hB,EAAe,CAC3B,OAAOO,C,CAET,MAAMC,EACJP,EAA0C/hB,GAC5C,MAAMuiB,EACJhjB,KAAKoL,WAAa2X,EAEpB,OAAOC,EAAiB,EAAIA,EAAiB,CAAC,G,CAGlD,MAAAjhB,GACE,OACEC,EAACC,EAAI,KACFjC,KAAKgiB,kBAAkBlhB,SAASd,KAAKmC,cACpCH,EAAA,OAAKE,MAAM,kCACRlC,KAAKoQ,aAAa1O,MAGtB1B,KAAKoQ,aAAa6S,UAAU9f,KAAI,CAAC2f,EAAUriB,KAC1C,GAAIqiB,EAASxC,aAAe,KAAM,CAChC,OACEte,EAAA,8BACE+G,gBAAiB/I,KAAK+I,gBACtB7G,MACElC,KAAKgiB,kBAAkBlhB,SAASd,KAAKmC,aACjC,OACA,GAEN0J,SAAU7L,KAAK6L,SACfsE,eAAgBnQ,KAAKmQ,eACrBkQ,aAAcyC,EACdlB,oBAAqB5hB,KAAKkiB,mBAAmBzhB,GAC7C0B,YAAanC,KAAKmC,YAClBgC,YACGnE,KAAKmE,aAAenE,KAAKmE,YAAY,KAAO2e,EAAS/hB,KACtD,KAEFsP,kBAAoB5L,GAAQzE,KAAKmiB,iBAAiB1d,EAAKhE,I,KAGtD,CACL,OAAO,I,kBCtGnB,MAAMyiB,EAAgB,o3uI,MCOTC,EAAU,M,0LAWbnjB,KAAA6I,cAAwC,GACxC7I,KAAAoU,YAAsB,EAEtBpU,KAAAojB,YAAc,IAAIre,K,iKANS,G,iBACH,K,CAOhC,iBAAAhF,GACEC,KAAKojB,YAAYle,SAAS,EAAG,EAAG,EAAG,E,CAIrC,+BAAAme,CAAgCzhB,GAC9B5B,KAAKsjB,gBAAkB1hB,EAAMgL,OAAO0W,e,CAItC,QAAAC,CAAS3hB,GACP,IAAIsB,EAAStB,EAAMgL,OAAO1J,OAC1B,IAAIuH,EAAWzK,KAAK0K,wBAAwBxH,GAC5C,IAAKuH,EAAS+Y,SAAU,CACtBxjB,KAAKyjB,eAAehZ,GACpBqH,YAAW,KACT9R,KAAK0jB,aAAaxgB,EAAO,GACxB,G,KACE,CACLlD,KAAK0jB,aAAaxgB,E,EAKtB,qBAAAygB,CAAsB/hB,GAEpB5B,KAAK4jB,gBAAgBhiB,EAAMgL,OAAOvL,MAClCrB,KAAKyV,e,CAGP,YAAAiO,CAAaxgB,GACXlD,KAAK6jB,iBAAiB3iB,KAAK,CACzBC,IAAK,mBACLJ,GAAImC,EACJ4gB,SAAU,QAAU5gB,G,CAIxB,uBAAAwH,CAAwBxH,GACtB,OAAOlD,KAAK+jB,aAAatY,UAAUjK,MAAKyK,GAC/BjM,KAAKgkB,iBAAiB/X,GAAczK,MAAKC,GAAQzB,KAAKmd,UAAU1b,KAAUyB,K,CAIrF,eAAA+gB,CAAgBhY,GACd,OAAOA,EAAavK,I,CAGtB,aAAAwiB,CAAcjY,GACZ,OAAOA,EAAalL,E,CAGtB,qBAAAojB,CAAsBlY,GACpB,OAAOjM,KAAKgkB,iBAAiB/X,GAAcwB,M,CAG7C,gBAAAuW,CAAiB/X,GACf,OAAQA,GAAgBA,EAAaC,eAAkB,E,CAGzD,WAAAkY,CAAYlU,GACV,OAAOA,EAASxO,I,CAGlB,SAAAyb,CAAUjN,GACR,OAAOA,EAASnP,E,CAGlB,WAAAsjB,CAAYC,EAAephB,GACzB,OAAOohB,EAAc9iB,MAAK+iB,GAAiBvkB,KAAKmd,UAAUoH,KAAmBrhB,G,CAG/E,cAAAshB,GACE,OAAOxkB,KAAK+jB,aAAaU,a,CAG3B,eAAAb,CAAgBrL,GACdvY,KAAK0kB,qBAAqBxjB,KAAKqX,E,CAGjC,sBAAAoM,CAAuBzhB,EAAQ0hB,GAC7B,MAAO,QAAU1hB,EAAS,IAAM0hB,EAAYxB,W,CAG9C,qBAAAyB,CAAsBC,GACpB,OAAO9kB,KAAKwkB,iBAAiB5jB,QAAO0G,GAAgBwd,EAASnd,YAAcL,EAAaM,S,CAI1F,WAAA0B,GACE,IAAIyb,EAAM/kB,KAAKwkB,iBAAiBQ,WAAUC,GAAMA,EAAGjW,KAAO,mBAC1D,GAAI+V,KAAS,EAAG,CACd/kB,KAAKwkB,iBAAiBU,OAAOH,EAAK,GAClCne,QAAQC,IAAI,kBACZ7G,KAAKyV,e,EAIT,WAAA0P,CAAYlZ,GACV,IAAIuB,EAAOrN,OAAOqN,KAAKxN,KAAK6I,eAC5B,IAAIuc,EAAWC,EAEf,GAAIrlB,KAAK6I,cAAc2E,EAAK,IAAI4V,YAAcpjB,KAAK6I,cAAc2E,EAAK,IAAI4V,YAAa,CACrFgC,EAAY,IAAIrgB,KAAK/E,KAAK6I,cAAc2E,EAAK,IAAI4V,aACjDiC,EAAU,IAAItgB,KAAK/E,KAAK6I,cAAc2E,EAAK,IAAI4V,Y,KAC1C,CACLgC,EAAY,IAAIrgB,KAAK/E,KAAK6I,cAAc2E,EAAK,IAAI4V,aACjDiC,EAAU,IAAItgB,KAAK/E,KAAK6I,cAAc2E,EAAK,IAAI4V,Y,CAGjDpjB,KAAK8kB,SAAW,CACd9V,GAAI,iBACJ1D,KAAMtJ,EAAA,iBACNsjB,MAAO,GACP3J,MAAO,GACP4J,eAAgB,MAChBC,eAAgB,QAChB7d,UAAWyd,EAAUrP,cAAgB,IAAM/V,KAAKylB,kBAAkBL,EAAUpP,WAAa,GAAK,IAAMhW,KAAKylB,kBAAkBL,EAAU7f,WACrIqC,QAASyd,EAAQtP,cAAgB,IAAM/V,KAAKylB,kBAAkBJ,EAAQrP,WAAa,GAAK,IAAMhW,KAAKylB,kBAAkBJ,EAAQ9f,WAC7H+R,QAAS,GACTrP,MAAO,GACPrE,oBAAqB,EACrBkE,MAAO9H,KAAK6I,cAAc2E,EAAK,IAAItK,OACnCwN,WAAY,GACZ+G,YAAa4N,EAAUD,GAAa,MACpCta,aAAc,EACdgR,QAAS,GACT1E,cAAe,GACfrM,KAAM,GACNuR,YAAa,GACbjR,UAAW,GACXwG,aAAc,GACdG,MAAO,mBACPvG,UAAW,CAACQ,GACZ6S,SAAU7S,EAAavK,KACvByK,WAAY,cACZmK,OAAQ,uBACR5M,iBAAkB,CAChB7D,SAAU,KACV2K,YAAa,GACb1K,OAAQ,KACR2K,UAAW,GACXN,gBAAiBkV,EAAUD,GAAa,MACxCM,SAAU,MACVnjB,QAAS,oDAIb,IAAIojB,EAAa1Z,EAAavK,KAAO,IAAM1B,KAAKokB,YAAYpkB,KAAKqkB,YAAYrkB,KAAKgkB,iBAAiB/X,GAAejM,KAAK6I,cAAc2E,EAAK,IAAItK,SAC9IlD,KAAK8kB,SAAS/S,kBAAoB,mBAAqB4T,EACvD3lB,KAAK8kB,SAAS9S,OAAS2T,EACvB3lB,KAAK8kB,SAASpb,iBAAiB5D,OAAS,IAAIf,KAAK/E,KAAK8kB,SAASld,QAAU,aACzE5H,KAAK8kB,SAASpb,iBAAiB7D,SAAW,IAAId,KAAK/E,KAAK8kB,SAASnd,UAAY,aAC7E3H,KAAK8kB,SAASpb,iBAAiB8G,YAAcxQ,KAAK4lB,WAAW5lB,KAAK8kB,SAASpb,iBAAiB7D,UAC5F7F,KAAK8kB,SAASpb,iBAAiB+G,UAAYzQ,KAAK4lB,WAAW5lB,KAAK8kB,SAASpb,iBAAiB5D,QAC1F9F,KAAK8kB,SAASpU,YAAa,IAAI3L,MAAO8gB,cACtC7lB,KAAK8kB,SAASlO,WAAa5W,KAAK+jB,aAAa+B,oBAE7C,IAAIxZ,EAAqBtM,KAAK6kB,sBAAsB7kB,KAAK8kB,UACzD,GAAIxY,EAAmBmB,OAAQ,CAC7BzN,KAAK8kB,SAASxY,mBAAqBA,C,CAGrCtM,KAAKwkB,iBAAiBuB,KAAK/lB,KAAK8kB,UAChC,OAAO9kB,KAAK8kB,Q,CAGd,iBAAAW,CAAkBO,GAChB,OAAOA,GAAO,EAAI,IAAMA,EAAMA,C,CAGhC,UAAAJ,CAAW1d,EAAM+d,EAAS,WACxB,OAAO/d,EAAK3C,UAAY,IAAM2C,EAAK7C,eAAe4gB,EAAQ,CAAE3gB,MAAO,UAAa,IAAM4C,EAAK6N,a,CAG7F,cAAAmQ,GACElmB,KAAK+jB,aAAaU,cAAgBzkB,KAAK+jB,aAAaU,cAAc7jB,QAAOulB,GAAUA,EAAOnX,KAAO,mBACjGhP,KAAK8kB,SAAW,I,CAGlB,SAAAsB,CAAUljB,EAAQ0hB,EAAa3Y,GAC7B,IAAKjM,KAAKqmB,sBAAwBzB,EAAYxB,aAAepjB,KAAKojB,YAAYlO,UAAW,CACvF,IAAIoR,EAAStmB,KAAK2kB,uBAAuBzhB,EAAQ0hB,GACjD,GAAI5kB,KAAK6I,cAAcuD,eAAeka,GAAS,CAC7CtmB,KAAKkmB,wBACElmB,KAAK6I,cAAcyd,GAC1BtmB,KAAKyV,gBACL,M,MACK,GAAItV,OAAOqN,KAAKxN,KAAK6I,eAAe4E,QAAU,GAAKzN,KAAKoU,YAAclR,EAAQ,CACnFlD,KAAKkmB,iBACLlmB,KAAK6I,cAAgB,GACrB7I,KAAK6I,cAAcyd,GAAOnmB,OAAAC,OAAAD,OAAAC,OAAA,GAAQwkB,GAAW,CAAE1hB,WAC/ClD,KAAKoU,WAAalR,EAClBlD,KAAKyV,e,KACA,CAELzV,KAAK6I,cAAcyd,GAAOnmB,OAAAC,OAAAD,OAAAC,OAAA,GAAQwkB,GAAW,CAAE1hB,WAC/ClD,KAAKmlB,YAAYlZ,GACjBjM,KAAK6I,cAAgB,GACrB7I,KAAKyV,gBACLzV,KAAKumB,oBAAoBvmB,KAAK8kB,S,GAKpC,mBAAAyB,CAAoBllB,GAClBuF,QAAQC,IAAIxF,E,CAId,aAAAoU,GACEzV,KAAK2F,aAAe3F,KAAK2F,W,CAG3B,4BAAA6gB,CAA6BC,EAAkBC,EAAsB,MAAOjmB,GAC1E,OAAOT,KAAK+jB,aAAa4C,KAAKxjB,KAAIyjB,GAChC5kB,EAAA,OAAKE,MAAO,qCAAqCukB,EAAW,IAAMG,EAAQC,OAAOD,EAAQC,MAAQ7mB,KAAK8mB,MAAQ,aAAe,MAC1HJ,EACC1kB,EAAA,YACG4kB,EAAQpjB,KAAK/C,GAAO6hB,UACrBtgB,EAAA,WACAA,EAAA,cAAM4kB,EAAQpjB,KAAK/C,GAAO+C,OACrB,K,CAQf,wBAAAujB,CAAyB7jB,EAAgB+I,GAEvC,OAAOjM,KAAK+jB,aAAa4C,KAAKxjB,KAAIyjB,GAChC5kB,EAAA,OACEE,MAAO,iBAAiB,QAAUgB,EAAS,IAAM0jB,EAAQC,OAAOD,EAAQC,MAAQ7mB,KAAK8mB,MAAQ,aAAe,MAC1G9mB,KAAKsjB,kBAAoBpgB,EAAS,IAAM0jB,EAAQC,IAAM,oBAAsB,MAC1E7mB,KAAK6I,cAAcuD,eAAepM,KAAK2kB,uBAAuBzhB,EAAQ0jB,IAAY,cAAgB,KACtG7W,QAAS,IAAM/P,KAAKomB,UAAUljB,EAAQ0jB,EAAS3a,M,CAKrD,cAAAwX,CAAexX,GACbA,EAAauX,UAAYvX,EAAauX,SACtCxjB,KAAKyV,e,CAGP,kBAAAuR,CAAmB/a,EAAcxL,GAC/B,GAAIT,KAAKmkB,sBAAsBlY,IAAiB,EAAG,CACjD,OAAO,I,CAET,OACEjK,EAAA,OAAKE,MAAM,WACTF,EAAA,OACEE,MAAO,sEAAsE,YAAclC,KAAKkkB,cAAcjY,KAC9G8D,QAAS,IAAM/P,KAAKyjB,eAAexX,IAEnCjK,EAAA,OAAKE,MAAO,gBAAiBlC,KAAKikB,gBAAgBhY,IAAoB,IAACjK,EAAA,KAAGE,MAAO,eAAe+J,EAAauX,SAAW,OAAS,aAElIxjB,KAAKwmB,6BAA6B,YAAcxmB,KAAKkkB,cAAcjY,GAAe,KAAMxL,G,CAK/F,kBAAAwmB,CAAmBhb,G,MAEjB,IAAKA,EAAauX,SAAU,CAC1B,MAAO,E,CAGT,OAAOxX,EAAAhM,KAAKgkB,iBAAiB/X,MAAa,MAAAD,SAAA,SAAAA,EAAE7I,KAAI1B,GAC9CO,EAAA,OAAKE,MAAM,WACTF,EAAA,OACEE,MAAO,mEAAmElC,KAAKmkB,sBAAsBlY,IAAiB,EAAI,OAAS,MAAM,QAAUjM,KAAKmd,UAAU1b,KAAO,YAC9JzB,KAAKmd,UAAU1b,IAE1BO,EAAA,WAAMhC,KAAKmkB,sBAAsBlY,IAAiB,EAAIjM,KAAKikB,gBAAgBhY,GAAgBjM,KAAKokB,YAAY3iB,KAE7GzB,KAAK+mB,yBAAyB/mB,KAAKmd,UAAU1b,GAAOwK,K,CAK3D,WAAAib,GACE,OAAOlnB,KAAK+jB,aAAatY,UAAUtI,KAAI,CAAC8I,EAAcxL,IAAU,CAACT,KAAKgnB,mBAAmB/a,EAAcxL,GAAQT,KAAKinB,mBAAmBhb,K,CAGzI,MAAAlK,G,MAEE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,iBACRlC,KAAKknB,cACNllB,EAAA,OAAKE,MAAM,6CACR8J,EAAAhM,KAAKwkB,oBAAgB,MAAAxY,SAAA,SAAAA,EAAE7I,KAAImE,GAC1BtF,EAAA,qBACEmZ,mBAAoBnb,KAAK+jB,aAAa5I,mBACtChJ,gBAAiBnS,KAAKmS,gBACtBtG,SAAU7L,KAAK6L,SAAQ,oBACJvE,EAAa0H,GAChC1H,aAAcA,EACd+N,iBAAkBrV,KAAKwkB,uB,aCpUvC,MAAM2C,EAAkB,k13I,MCOXC,EAAY,M,mHAMvB,iBAAAC,CAAkBlmB,EAAKE,EAAO,IAC5BrB,KAAKsnB,YAAYpmB,KAAK,CAAEC,MAAKE,Q,CAG/B,MAAAU,GACE,OACEC,EAACC,EAAI,CAACC,MAAM,mBACVF,EAAA,OAAKE,MAAM,kEACTF,EAAA,OACEE,MAAM,YACN6N,QAAS,IAAM/P,KAAKqnB,kBAAkB,eAEtCrlB,EAAA,KAAGE,MAAM,iBACTF,EAAA,qBAMHhC,KAAK+jB,aAAa4C,KAAKxjB,KAAKyjB,GAC3B5kB,EAAA,OAAKE,MAAM,iCACTF,EAAA,OACEE,MAAO,2CACL0kB,EAAQC,MAAQ7mB,KAAK8mB,MAAQ,aAAe,MAG7CF,EAAQW,mB,mBCnCVC,EACJ,wBAAMC,CAAmB9b,EAAoBtF,EAAmBC,GACrE,IACE,MAAMC,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,EAAO,CACT,MAAMlF,KAAEA,SAAeyF,EAAMC,KAAK,gCAAgCR,IAAS,CACzEoF,aACAtF,YACAC,YAEF,GAAIjF,EAAK2F,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM5F,EAAK2F,a,CAEvB,OAAOhH,KAAK0nB,uBAAuBrmB,EAAK+F,U,KACnC,CACL,MAAM,IAAIH,MAAM,gB,EAElB,MAAO3C,GACPsC,QAAQtC,MAAMA,GACd,MAAM,IAAI2C,MAAM3C,E,EAGb,wBAAMqjB,CAAmBhc,EAAoBic,EAAuB1X,EAAe4V,GACxF,IACE,MAAMvf,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,EAAO,CACT,MAAMlF,KAAEA,SAAeyF,EAAMC,KAAK,2CAA2CR,IAAS,CACpFoF,aACAic,kBAEF,GAAIvmB,EAAK2F,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM5F,EAAK2F,a,CAEvB,OAAOhH,KAAK6nB,sBAAsBxmB,EAAM6O,EAAU4V,E,KAC7C,CACL,MAAM,IAAI7e,MAAM,gB,EAElB,MAAO3C,GACPsC,QAAQtC,MAAMA,GACd,MAAM,IAAI2C,MAAM3C,E,EAGb,gBAAMwjB,CAAWxW,EAAqByW,EAAoBlgB,GAC/D,IACE,MAAMtB,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,EAAO,CACT,MAAMlF,KAAEA,SAAeyF,EAAMC,KAAK,+BAA+BR,IAAS,CACxE+K,cACAyW,aACAlgB,UAEF,GAAIxG,EAAK2F,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM5F,EAAK2F,a,CAEvBJ,QAAQC,IAAIxF,GACZ,OAAOA,EAAK,Y,KACP,CACL,MAAM,IAAI4F,MAAM,gB,EAElB,MAAO3C,GACPsC,QAAQtC,MAAMA,GACd,MAAM,IAAI2C,MAAM3C,E,EAGZ,0BAAA0jB,CAA2BC,GACjC,MAAMC,EAAQ,iBACd,OAAOD,EAAI3lB,QAAQ4lB,EAAO,G,CAGpB,qBAAAL,CAAsBxmB,EAAW6O,EAAU4V,GACjD,MAAMte,EAA0B,GAChCnG,EAAK+F,UAAU+gB,SAASC,IACtBA,EAASC,iBAAiBF,SAAS1mB,IACjC,IAAIwK,EAA8B,CAChCqc,aAAc7mB,EAAK8mB,eACnBvZ,GAAIvN,EAAKsmB,WACTzc,KAAM7J,EAAK+mB,WACXT,WAAYtmB,EAAKsmB,WACjBpgB,UAAWlG,EAAKgnB,gBAChB7gB,QAASnG,EAAKgnB,gBACdlX,eAAgB9P,EAAKinB,SACrBpS,OAAQ,WACR5M,iBAAkB,CAChB7D,SAAUlB,UACVmB,OAAQnB,UACRgkB,kBAAmB,EACnBC,gBAAiB,EACjBpY,YAAa,GACbC,UAAW,GACXN,eAAgB,GAElBsH,WAAY,EACZhM,UAAWyE,EACX0G,WAAYkP,EACZ9C,eAAgB,GAChB6F,MAAO7oB,KAAK8oB,cAAcrnB,EAAK8mB,eAAgBrY,IAEjDlQ,KAAK+oB,qBAAqBtnB,EAAMwK,EAAc6Z,EAAqB5V,GACnElQ,KAAKgpB,oBAAoB/c,GACzBzE,EAAOue,KAAK9Z,EAAa,GACzB,IAEJ,OAAOzE,C,CAET,mBAAAwhB,CAAoB/c,GAClBA,EAAavC,iBAAiB7D,SAAW,IAAId,KAAKkH,EAAatE,UAAY,aAC3EsE,EAAavC,iBAAiB8G,YAAc5C,EAAsB3B,EAAavC,iBAAiB7D,UAChGoG,EAAavC,iBAAiBif,kBAAoB1c,EAAavC,iBAAiB7D,SAASqP,UAEzFjJ,EAAavC,iBAAiB5D,OAAS,IAAIf,KAAKkH,EAAarE,QAAU,aACvEqE,EAAavC,iBAAiB+G,UAAY7C,EAAsB3B,EAAavC,iBAAiB5D,QAC9FmG,EAAavC,iBAAiBkf,gBAAkB3c,EAAavC,iBAAiB5D,OAAOoP,UAErFjJ,EAAavC,iBAAiByG,eAAiBlE,EAAawL,U,CAEtD,aAAAqR,CAAcG,EAAkB/Y,GACtC,OAAOA,EAAS1O,MAAKC,GAAQzB,KAAKgoB,2BAA2BvmB,EAAKC,QAAU1B,KAAKgoB,2BAA2BiB,KAAWloB,IAAM,I,CAEvH,oBAAAgoB,CAAqBtnB,EAAWwK,EAA6B6Z,EAAqBra,GACxF,MAAMmX,EAA0B,GAChCnhB,EAAKynB,iBAAiBf,SAASgB,IAC7B,GAAIA,EAAKC,qBAAuBD,EAAKE,iBAAkB,CACrD,MAAM1C,EAAOxW,EAAegZ,EAAK9iB,UAAW8iB,EAAK7iB,SACjDsc,EAAMmD,KAAK,CACT8C,MAAO5c,EAAa4c,MACpBvS,OAAQ,uBACR3O,UAAWwhB,EAAK9iB,UAChB4iB,SAAUE,EAAKznB,KACfoG,MAAOqhB,EAAKthB,MACZD,QAASuhB,EAAK7iB,QACdmR,WAAYkP,EACZ3X,GAAI,iBACJ1D,KAAM,GACNrD,MAAO,GACPqP,QAAS,GACTF,cAAe,GACf3D,WAAY,KACZmD,WAAYkP,EACZra,cAEFQ,EAAarE,QAAUuhB,EAAK7iB,QAC5B2F,EAAawL,WAAakP,C,KAG9B1a,EAAa+W,eAAiBJ,C,CAGxB,sBAAA8E,CAAuB4B,GAC7B,IAAIC,EAA8C,GAClDD,EAAMnB,SAAQjgB,IACZ,IAAIshB,EAAU,IAAIzkB,KAAKmD,EAAKA,MAC5BshB,EAAQtkB,SAAS,EAAG,EAAG,EAAG,GAC1BqkB,EAAeC,EAAQtU,WAAa,CAClCuU,WAAY,GACZC,QAASxhB,EAAKgB,YACf,IAEH,OAAOqgB,C,WC5IKI,EAA8BD,GAC5C,IAAIE,EAAUC,EAAOH,EAAS,oBAC9B,OAAOE,EAAQE,OAAO,WACxB,CCxBA,MAAMC,EAAkB,445I,MCWXC,EAAY,M,0KAgBfhqB,KAAAiqB,YAAsB,GACtBjqB,KAAAkqB,WAAuC,GACvClqB,KAAAW,UAAsC,GACtCX,KAAAmqB,oBAAsB,IAAI3C,E,gGAPR,G,wCAEM,M,2BACM,E,CAKtC,iBAAAznB,GACE,IACEC,KAAKoqB,sBAEL,IAAKpqB,KAAK+jB,aAAa5I,oBAAsBhb,OAAOqN,KAAKxN,KAAKqqB,iBAAiB5c,OAAS,EAAG,CACzFzN,KAAKsqB,+B,EAEP,MAAOhmB,GACPsC,QAAQtC,MAAM,8BAA+BA,E,EAIjD,yBAAAimB,GACEvqB,KAAKsqB,+B,CAEC,mBAAAF,GACNpqB,KAAKW,UAAY,GACjBX,KAAK+jB,aAAatY,UAAU0c,SAAQ1d,IAClCzK,KAAKW,UAAYX,KAAKW,UAAU6pB,UAAU/f,EAASyB,cAAc,G,CAI7D,mCAAMoe,GAEZ,MAAM3D,EAAO3mB,KAAKqqB,sBACZrqB,KAAKyqB,kBAAkB9D,E,CAGvB,uBAAM8D,CAAkB9D,GAC9B,IAAK,MAAME,KAAO1mB,OAAOqN,KAAKmZ,GAAO,CACnC,MAAMnf,QAAexH,KAAKmqB,oBAAoBxC,mBAC5C3nB,KAAK2L,WACLiC,EAAsB,IAAI7I,MAAM8hB,IAChC7mB,KAAK+jB,aAAatY,UAClBzL,KAAK+jB,aAAa+B,qBAEpB9lB,KAAK0qB,sBAAqBvqB,OAAAC,OAAAD,OAAAC,OAAA,GAAQJ,KAAK0qB,uBAAqB,CAAE,CAACf,EAA8BhD,EAAKE,GAAK6C,UAAWliB,EAAOiG,Q,EAK7H,8BAAAkd,CAA+B/oB,GAC7B,MAAM+L,EAA8B/L,EAAMgL,OAC1C,MAAMvL,EAAOsM,EAAItM,KACjBO,EAAMkM,2BACNlM,EAAMmM,kBAGN,GAAIJ,EAAIxM,MAAQ,sBAAuB,CACrC,MAAMypB,EAAef,GAAQxoB,EAAKupB,cAAcd,OAAO,YACvD9pB,KAAK0qB,sBAAsBE,GAAgB5qB,KAAK0qB,sBAAsBE,GAAgB,EACtF5qB,KAAK6qB,Y,EAIT,gBAAAC,CAAiBlE,GACf,GAAI5mB,KAAK0qB,sBAAsB9D,EAAQC,MAAQ,EAAG,CAChD7mB,KAAKqnB,kBAAkB,gBACvBvV,YAAW,KACT9R,KAAK+qB,qBAAqB7pB,KAAK,CAC7BC,IAAK,uBACLE,KAAMulB,EAAQxD,aACd,GACD,I,EAMP,iBAAAiE,CAAkBlmB,EAAKE,EAAY,IACjCrB,KAAKsnB,YAAYpmB,KAAK,CAAEC,MAAKE,Q,CAG/B,gBAAA2pB,CAAiBppB,GACf,MAAMuf,EAAevf,EAAME,OAC3B,IAAI8oB,EAAezJ,EAAa5f,MAGhC,MAAM0pB,EAASjrB,KAAK4T,QAAQkE,cAAc,qBAC1CmT,EAAOC,OACP,GAAIN,EAAc,CAChB5qB,KAAKqnB,kBAAkB,WAAYuD,E,EAIvC,iBAAAO,GACEnrB,KAAKiqB,YAAc,GACnBjqB,KAAKkqB,WAAa,GAClBlqB,KAAK6qB,Y,CAGP,iBAAAO,CAAkBxpB,GAChB,MAAMuf,EAAevf,EAAME,OAC3B,IAAIP,EAAQ4f,EAAa5f,MAAM8pB,OAC/BrrB,KAAKiqB,YAAc1oB,EACnBA,EAAQA,EAAM+pB,cACd,GAAI/pB,IAAU,GAAI,CAChBvB,KAAKmrB,mB,KACA,CACLnrB,KAAKkqB,WAAalqB,KAAKW,UAAUC,QAAOa,GAAQA,EAAKC,KAAK6pB,oBAAoBC,QAAQjqB,KAAW,G,CAEnGvB,KAAK6qB,Y,CAGP,kBAAAY,CAAmBvoB,GACjBlD,KAAKmrB,oBACLnrB,KAAK0rB,cAAcxqB,KAAK,CAAEC,IAAK,WAAY+B,U,CAG7C,mBAAA0a,CAAoB9Y,GAClB,OAAOA,EAAGiR,cAAgB,KAAOjR,EAAGkR,WAAa,EAAI,IAAM,KAAOlR,EAAGkR,WAAa,GAAK,KAAOlR,EAAGS,WAAa,EAAI,IAAM,IAAMT,EAAGS,S,CAGnI,kBAAAomB,GACE,IAAI7E,EAAQ,IAAI/hB,KAChB+hB,EAAM5hB,SAAS,EAAG,EAAG,EAAG,GACxB,IAAImB,EAAYrG,KAAK4d,oBAAoBkJ,GACzCA,EAAMjR,QAAQiR,EAAMvhB,UAAY,GAChCuhB,EAAM5hB,SAAS,EAAG,EAAG,EAAG,GACxB,IAAIoB,EAAUtG,KAAK4d,oBAAoBkJ,GACvC,MAAO,CACL9X,GAAI,GACJ1D,KAAM,GACNga,MAAO,GACP3J,MAAO,GACP6J,eAAgB,QAChB7d,UAAWtB,EACXuB,QAAStB,EACTmF,UAAWzL,KAAK+jB,aAAatY,UAC7BuG,MAAO,cACP7F,WAAY,eACZyK,WAAY5W,KAAK+jB,aAAa+B,oBAC9Bpc,iBAAkB,CAChB7D,SAAU,IAAId,KAAKsB,GACnBmK,YAAa,GACb1K,OAAQ,IAAIf,KAAKuB,GACjBmK,UAAW,GACXN,eAAgB,EAChB+N,UAAW,KACX3b,QAAS,I,CAKf,UAAAsoB,GACE7qB,KAAK2F,aAAe3F,KAAK2F,W,CAG3B,MAAA5D,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,+DACTF,EAAA,OAAKE,MAAM,0CACPlC,KAAK+jB,aAAa5I,oBAClBnZ,EAAA,OAAKE,MAAM,cAAc6N,QAAS,IAAM/P,KAAKqnB,kBAAkB,gBAAe,cAAc,UAAS,iBAAgB,SAASuE,MAAM,oBAClI5pB,EAAA,KAAGE,MAAM,iBAGbF,EAAA,OAAKE,MAAM,cAAc6N,QAAS,IAAM/P,KAAKqnB,kBAAkB,YAAW,cAAc,UAAS,iBAAgB,SAASuE,MAAM,YAC9H5pB,EAAA,KAAGE,MAAM,qBACTF,EAAA,SAAOE,MAAM,mBAAmBU,KAAK,OAAOI,SAAUhD,KAAKgrB,iBAAiB9X,KAAKlT,MAAO4rB,MAAM,MAEhG5pB,EAAA,OAAKE,MAAM,cAAc6N,QAAS,IAAM/P,KAAKqnB,kBAAkB,aAAY,cAAc,UAAS,iBAAgB,SAASuE,MAAM,SAC/H5pB,EAAA,KAAGE,MAAM,mBAEXF,EAAA,OACEE,MAAM,cACN6N,QAAS,IAAM/P,KAAKqnB,kBAAkB,MAAOrnB,KAAK2rB,sBAAqB,cAC3D,UAAS,iBACN,SACfC,MAAM,sBAEN5pB,EAAA,KAAGE,MAAM,iBAGbF,EAAA,OAAKE,MAAM,wDACTF,EAAA,YAAUE,MAAO,gCAAgClC,KAAKiqB,aAAe,GAAK,OAAS,MACjFjoB,EAAA,SACEY,KAAK,OACLV,MAAM,wCACNnB,GAAG,YACHQ,MAAOvB,KAAKiqB,YACZpnB,YAAY,YACZC,QAASlB,GAAS5B,KAAKorB,kBAAkBxpB,KAE1C5B,KAAKiqB,cAAgB,GACpBjoB,EAAA,OACEE,MAAM,gCACN6N,QAAS,IAAM/P,KAAKmrB,oBAAmB,cAC3B,UAAS,iBACN,MAAK,sBACA,mBAEpBnpB,EAAA,KAAGE,MAAM,8BAET,KAEHlC,KAAKkqB,WAAWzc,OACfzL,EAAA,OAAKE,MAAM,yFACRlC,KAAKkqB,WAAW/mB,KAAI1B,GACnBO,EAAA,OAAKE,MAAM,uDAAuD6N,QAAS,IAAM/P,KAAKyrB,mBAAmBhqB,EAAKV,KAC3GU,EAAKC,SAIV,QAIVM,EAAA,OAAKE,MAAM,+BACTF,EAAA,OAAKE,MAAM,mBACRlC,KAAK+jB,aAAa8H,WAAW1oB,KAAI2oB,GAChC9pB,EAAA,OAAKE,MAAM,YAAYuS,MAAO,CAAEwD,MAAO6T,EAAUC,UAAY,GAAK,OAChE/pB,EAAA,OAAKE,MAAM,cAAc4pB,EAAUE,eAIxChsB,KAAK+jB,aAAa4C,KAAKxjB,KAAIyjB,GAC1B5kB,EAAA,OAAKE,MAAO,iCAAiC,OAAS0kB,EAAQC,OAAOD,EAAQC,MAAQ7mB,KAAK8mB,MAAQ,aAAe,KAAI,WAAYF,EAAQC,MACrI7mB,KAAK+jB,aAAa5I,oBAClBnZ,EAAA,OAAKE,MAAM,qBACTF,EAAA,QACEE,MAAO,eAAelC,KAAK0qB,sBAAsB9D,EAAQC,MAAQD,EAAQqF,uBAAyB,EAAI,eAAiB,qBACvHlc,QAAS,IAAM/P,KAAK8qB,iBAAiBlE,IAEpC5mB,KAAK0qB,sBAAsB9D,EAAQC,MAAQD,EAAQqF,uBAI1DjqB,EAAA,OAAKE,MAAM,YAAY0kB,EAAQW,gBAC/BvlB,EAAA,OAAKE,MAAM,sBAAsB0kB,EAAQsF,UAAS,S,sHCrQhE,MAAMC,EAAkB,yi3I,MCeXC,EAAY,M,0EAMfpsB,KAAAqsB,YAAsB,EAGtBrsB,KAAAwQ,YAAsB,OACtBxQ,KAAAyQ,UAAoB,K,aATe,G,4CAGX,K,CAShC,mBAAAmN,CAAoB9Y,GAClB,OACEA,EAAGiR,cACH,KACCjR,EAAGkR,WAAa,EAAI,IAAM,KAC1BlR,EAAGkR,WAAa,GACjB,KACClR,EAAGS,WAAa,EAAI,IAAM,IAC3BT,EAAGS,S,CAIP,iBAAAxF,GACE,IAAI+E,EAAK,IAAIC,KACbD,EAAGI,SAAS,EAAG,EAAG,EAAG,GACrBJ,EAAG+Q,QAAQ/Q,EAAGS,UAAY,GAC1B,GAAIvF,KAAKmE,YAAa,CACpB,GAAInE,KAAKmE,YAAY0B,SAAU,CAC7B7F,KAAK6F,SAAW,IAAId,KAAK/E,KAAKmE,YAAY0B,UAC1C7F,KAAK6F,SAASX,SAAS,EAAG,EAAG,EAAG,GAChClF,KAAKwQ,YAAcxQ,KAAKssB,uBAAuBtsB,KAAK6F,S,CAEtD,GAAI7F,KAAKmE,YAAY2B,OAAQ,CAC3B9F,KAAK8F,OAAS,IAAIf,KAAK/E,KAAKmE,YAAY2B,QACxC9F,KAAK8F,OAAOZ,SAAS,EAAG,EAAG,EAAG,GAC9BlF,KAAKyQ,UAAYzQ,KAAKssB,uBAAuBtsB,KAAK8F,O,EAGtD,GAAI9F,KAAK6F,UAAY7F,KAAK8F,OAAQ,CAChC9F,KAAKusB,uBACLvsB,KAAKwsB,sBAAsB,oBAAqB,CAC9C3mB,SAAU7F,KAAK6F,SAASqP,UACxBpP,OAAQ9F,KAAK8F,OAAOoP,UACpB1E,YAAaxQ,KAAKwQ,YAClBC,UAAWzQ,KAAKyQ,UAChBN,eAAgBnQ,KAAKqsB,a,EAK3B,oBAAAE,GACEvsB,KAAKqsB,YAAcvS,KAAK2S,OACrBzsB,KAAK8F,OAAOoP,UAAYlV,KAAK6F,SAASqP,WAAa,M,CAGxD,sBAAAoX,CAAuBxnB,GACrB,OACEA,EAAGS,UACH,IACAT,EAAGO,eAAe,UAAW,CAAEC,MAAO,UAAWgmB,cACjD,IACAxmB,EAAGiR,a,CAIP,qBAAAyW,CAAsBrrB,EAAKE,EAAY,IACrCrB,KAAK0sB,gBAAgBxrB,KAAK,CAAEC,MAAKE,Q,CAEnC,gBAAAsrB,CAAiBloB,GACf,MAAMmoB,MAAEA,EAAKC,IAAEA,GAAQpoB,EAAImI,OAC3B5M,KAAK6F,SAAW+mB,EAAM9mB,SACtB9F,KAAK8F,OAAS+mB,EAAI/mB,SAClB9F,KAAKusB,uBACLvsB,KAAKwsB,sBAAsB,oBAAqB,CAC9C3mB,SAAU7F,KAAK6F,SAASqP,UACxBpP,OAAQ9F,KAAK8F,OAAOoP,UACpB1E,YAAaoc,EAAM9C,OAAO,eAC1BrZ,UAAWoc,EAAI/C,OAAO,eACtB3Z,eAAgBnQ,KAAKqsB,cAEvBrsB,KAAK2F,aAAe3F,KAAK2F,W,CAE3B,MAAA5D,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,gCACTF,EAAA,MAAIE,MAAM,kBAAgB,SAC1BF,EAAA,OAAKE,MAAM,kBACTF,EAAA,kBACE6D,SAAU7F,KAAK6F,SACfC,OAAQ9F,KAAK8F,OACbgnB,UAAS,KACTC,cAAgBtoB,IACdzE,KAAK2sB,iBAAiBloB,EAAI,IAI7BzE,KAAKqsB,YACJrqB,EAAA,QAAME,MAAM,kBACTlC,KAAKqsB,aACHrsB,KAAKqsB,YAAc,EAAI,UAAY,WACjC,KAMbrqB,EAAA,OAAKE,MAAM,6BAA6BlC,KAAKuC,S,aC7HrD,MAAMyqB,EAAgB,0urI,MCOTC,EAAU,M,4FAGrB,iBAAA5F,CAAkBlmB,EAAKE,EAAO,IAC5BrB,KAAKsnB,YAAYpmB,KAAK,CAAEC,MAAKE,Q,CAG/B,MAAAU,GACE,OACEC,EAACC,EAAI,CAACC,MAAM,kCACVF,EAAA,WACEA,EAAA,WACEA,EAAA,OAAKE,MAAM,gBACTF,EAAA,OAAKE,MAAM,qBAAmB,UAC9BF,EAAA,OAAKE,MAAM,sBAAsB6N,QAAS,IAAM/P,KAAKqnB,kBAAkB,kBACrErlB,EAAA,KAAGE,MAAM,sBAEXF,EAAA,YAEFA,EAAA,OAAKE,MAAM,aACRlC,KAAK4W,WAAWzT,KAAI+pB,GACnBlrB,EAAA,OAAKE,MAAM,cACTF,EAAA,OAAKE,MAAO,UAAUgrB,EAAWC,cAAe1Y,MAAO,CAAEuG,gBAAiBkS,EAAWnW,SACrF/U,EAAA,QAAME,MAAM,gBAAgBgrB,EAAWxrB,UAI7CM,EAAA,WACAA,EAAA,OAAKE,MAAM,QACTF,EAAA,OAAKE,MAAM,kBACTF,EAAA,OAAKE,MAAM,gCACTF,EAAA,OAAKE,MAAM,6BACTF,EAAA,2BAEFA,EAAA,OAAKE,MAAM,kBAAgB,mBAE7BF,EAAA,OAAKE,MAAM,aACTF,EAAA,OAAKE,MAAM,4BACTF,EAAA,QAAME,MAAM,kCAAgC,MAE9CF,EAAA,OAAKE,MAAM,kBACTF,EAAA,mDAGJA,EAAA,OAAKE,MAAM,aACTF,EAAA,OAAKE,MAAM,kBAAgB,UAC3BF,EAAA,OAAKE,MAAM,kBAAgB,SAE7BF,EAAA,OAAKE,MAAM,aACTF,EAAA,OAAKE,MAAM,qCAAmC,OAC9CF,EAAA,OAAKE,MAAM,kBAAgB,cAE7BF,EAAA,OAAKE,MAAM,aACTF,EAAA,OAAKE,MAAM,+BAA6B,MACxCF,EAAA,OAAKE,MAAM,kBAAgB,cAE7BF,EAAA,OAAKE,MAAM,gCACTF,EAAA,OAAKE,MAAM,qCACTF,EAAA,sBAEFA,EAAA,OAAKE,MAAM,kBACTF,EAAA,2C,aCpEpB,MAAMorB,EAAgB,28oI,MCOTC,EAAU,M,0jBAqB4B,E,CAEjD,iBAAAttB,GACEC,KAAKstB,qB,CAEP,mBAAAA,GACE,IAAIC,EAAQ,EACZ,MAAMC,EAAgBrtB,OAAAC,OAAA,GAAQJ,KAAKQ,eAEnC,IAAK,MAAMW,KAAOnB,KAAK6I,cAAe,CACpC,IAAK,MAAM4kB,KAAQztB,KAAK6I,cAAc1H,GAAM,CAC1C,MAAMiK,EAAapL,KAAK6I,cAAc1H,GAAKssB,GAAMriB,WACjDoiB,EAAiBrsB,GAAOugB,MAAMtW,GAAY6W,MAAM,E,EAIpDjiB,KAAKQ,cAAgBgtB,EACrBxtB,KAAKC,UAAY,GACjB,IAAK,MAAMkB,KAAOhB,OAAOqN,KAAKxN,KAAK6I,eAAgB,CACjD,IAAK,MAAM4kB,KAAQttB,OAAOqN,KAAKxN,KAAK6I,cAAc1H,IAAO,CACvD,IAAK,IAAI0gB,EAAI,EAAGA,GAAK7hB,KAAK6I,cAAc1H,GAAKssB,GAAMriB,WAAYyW,IAAK,CAClE7hB,KAAKC,UAAU8lB,KAAI5lB,OAAAC,OAAA,CACjByB,UAAW,GACXqB,OAAQ,GACRE,WAAY,IACTpD,KAAK6I,cAAc1H,GAAKssB,I,CAG/BF,GAASvtB,KAAK6I,cAAc1H,GAAKssB,GAAMriB,WAAapL,KAAK6I,cAAc1H,GAAKssB,GAAMjqB,I,EAGtFxD,KAAKyJ,YAAY6S,YAAciR,C,CAGjC,0BAAA3d,CAA2BC,G,MACzB,IAAIpF,GAAWuB,EAAAhM,KAAKyJ,YAAYgC,aAAS,MAAAO,SAAA,SAAAA,EAAExK,MAAKiJ,GAAYA,EAAS1J,KAAO8O,IAC5E,OAAQpF,GAAYA,EAASyB,eAAkB,E,CAEjD,sCAAAwhB,CAAuC9rB,EAAoBnB,GACzD,MAAMkN,EAAM/L,EAAMgL,OAClB,MAAM+gB,EAAgB,KAAKhgB,EAAItM,KAAK8J,iBACpC,MAAMyiB,EAAe,IAAK5tB,KAAKQ,cAAcmtB,IAAkB,IAC/DC,EAAantB,GAASkN,EAAItM,KAAK6B,OAC/BlD,KAAKQ,cAAaL,OAAAC,OAAAD,OAAAC,OAAA,GACbJ,KAAKQ,eAAa,CACrBmtB,CAACA,GAAgBC,IAEnB5tB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,6BACLI,MAAOK,EAAMgL,Q,CAIjB,eAAAihB,CAAgBjsB,EAAYT,EAAaV,GACvC,GAAIU,IAAQ,mBAAoB,CAC9BnB,KAAK0tB,uCAAuC9rB,EAAOnB,E,KAC9C,CACLT,KAAK8tB,qBAAuBlsB,EAAMgL,OAAOvL,KACzCrB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,mBACLI,MAAOK,EAAMgL,Q,EAInB,qBAAAmhB,GACE,GAAI/tB,KAAKkS,kBAAkBzE,SAAWzN,KAAKC,UAAUwN,OAAQ,CAC3D,OAAO,I,CAET,IAAK,MAAMpM,KAAQrB,KAAKkS,kBAAmB,CACzC,GAAI7Q,EAAKQ,YAAc,IAAMR,EAAK+B,aAAe,IAAM/B,EAAK6B,SAAW,GAAI,CACzE,OAAO,I,EAGX,OAAO,K,CAET,gBAAA8qB,CAAiB7sB,GACf,MAAM8sB,EAAkB,CAACC,EAAU/sB,EAAKgtB,KACtC,IAAKD,EAAU,CACb,OAAO,I,CAET,GAAIA,IAAaluB,KAAKkS,kBAAmB,CACvC,OAAOlS,KAAK+tB,uB,CAEd,MAAMK,EAAgB,CAAC,aAAc,iBAAkB,cAAe,cAActtB,SAASK,GAC7F,IAAKnB,KAAKiS,oBAAsBmc,EAAe,CAC7C,OAAO,K,CAET,OAAOF,EAAS/sB,KAASgtB,GAAcD,EAAS/sB,KAASwD,SAAS,EAGpE,OACE3E,KAAK4R,YAAczQ,GACnB8sB,EAAgBjuB,KAAKkS,kBAAmB,YAAa,KACrD+b,EAAgBjuB,KAAK8tB,qBAAsB,UAAW,KACtDG,EAAgBjuB,KAAK8tB,qBAAsB,gBAAiB,KAC5DG,EAAgBjuB,KAAK8tB,qBAAsB,YAAa,KACxDG,EAAgBjuB,KAAK8tB,qBAAsB,WAAY,KACvDG,EAAgBjuB,KAAK8tB,qBAAsB,aAAc,IACzDG,EAAgBjuB,KAAK8tB,qBAAsB,sBAAuB,KAClEG,EAAgBjuB,KAAK8tB,qBAAsB,QAAS,KACpDG,EAAgBjuB,KAAK8tB,qBAAsB,aAAc,KACzDG,EAAgBjuB,KAAK8tB,qBAAsB,iBAAkB,KAC7DG,EAAgBjuB,KAAK8tB,qBAAsB,cAAe,KAC1DG,EAAgBjuB,KAAK8tB,qBAAsB,aAAc,G,CAI7D,MAAA/rB,GACE,OACEC,EAACC,EAAI,CAACC,MAAM,iBACVF,EAAA,OAAKE,MAAM,OACTF,EAAA,OAAKE,MAAM,uBACTF,EAAA,QAAME,MAAM,uCACTlC,KAAK2J,cAAc6G,YAAW,MAAKxQ,KAAK2J,cAAc8G,WAExDzQ,KAAK2J,cAAcwG,eAAc,WAEpCnO,EAAA,OAAKE,MAAM,oBAAkB,eACfF,EAAA,QAAME,MAAM,kCAAkC,IAAMlC,KAAKyJ,YAAY6S,aAAe,WAInGtc,KAAKC,UAAUkD,KAAI,CAAC+M,EAAUzP,IAC7BuB,EAAA,wBACEqB,kBAAmBrD,KAAKqD,kBACxB5C,MAAOA,EACPD,cAAeR,KAAKQ,cAAc,KAAK0P,EAAS/E,kBAChDjL,UAAWgQ,EACX9O,YAAaX,EACb0B,YAAanC,KAAKyJ,YAAY0C,WAC9BxL,UAAWX,KAAK4P,2BAA2BM,EAAS/E,gBACpDkF,kBAAmBzO,GAEjB5B,KAAK6tB,gBAAgBjsB,EAAO,mBAAoBnB,OAKrDT,KAAKoS,sBAAwBpS,KAAK2I,uBAAyB,KAC1D3G,EAAA,0BACEmQ,gBAAiBnS,KAAKmS,gBACtBvG,SAAU5L,KAAK4L,SACfqG,mBAAoBjS,KAAKiS,mBACzB9N,YAAanE,KAAK8I,iBAClBuH,kBAAmBzO,GAKjB5B,KAAK6tB,gBAAgBjsB,EAAO,mBAAoB,KAKrD5B,KAAKoS,qBACJpQ,EAAA,OAAKE,MAAM,qBACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQY,KAAK,SAASV,MAAM,+BAA+B6N,QAAS,IAAM/P,KAAKquB,cAAcntB,KAAK,CAAEC,IAAK,YAAW,WAItHa,EAAA,OAAKE,MAAM,SACTF,EAAA,UACEsO,SAAUtQ,KAAK4R,YAAc,QAAU5R,KAAK+tB,wBAC5CnrB,KAAK,SACLV,MAAM,6BACN6N,QAAS,IAAM/P,KAAKquB,cAAcntB,KAAK,CAAEC,IAAK,UAE7CnB,KAAK4R,YAAc,QAAU5P,EAAA,KAAGE,MAAM,sCAAwC,UAMrFF,EAAA,OAAKE,MAAM,qBACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQY,KAAK,SAASV,MAAM,+BAA+B6N,QAAS,IAAM/P,KAAKquB,cAAcntB,KAAK,CAAEC,IAAK,UAAS,YAIpHa,EAAA,OAAKE,MAAM,SACTF,EAAA,UAAQsO,SAAUtQ,KAAKguB,iBAAiB,QAASprB,KAAK,SAASV,MAAM,6BAA6B6N,QAAS,IAAM/P,KAAKquB,cAAcntB,KAAK,CAAEC,IAAK,UAC7InB,KAAK4R,YAAc,QAAU5P,EAAA,KAAGE,MAAM,sCAAwC,SAInFF,EAAA,OAAKE,MAAM,SACTF,EAAA,UACEsO,SAAUtQ,KAAKguB,iBAAiB,kBAChCprB,KAAK,SACLV,MAAM,6BACN6N,QAAS,IAAM/P,KAAKquB,cAAcntB,KAAK,CAAEC,IAAK,oBAE7CnB,KAAK4R,YAAc,kBAAoB5P,EAAA,KAAGE,MAAM,sCAAwC,qB,aC7NzG,MAAMosB,EAAyB,us9J,MCUlBC,EAAmB,M,0EAMtBvuB,KAAAgE,eAAiC,IAAIC,EACrCjE,KAAAwuB,gBAA8B,GAC9BxuB,KAAAyuB,aAAyB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5FzuB,KAAA0uB,YAAwB,GACxB1uB,KAAA2uB,aAAuB,K,gDARO,M,gDAGA,G,kBAMU,CAC9C5tB,GAAI4D,UACJiqB,MAAO,GACPC,UAAW,GACXC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,cAAe,GACfC,oBAAqB,CACnBjmB,KAAM,GACNC,YAAa,IAEfimB,WAAY,MACZ5sB,QAAS,GACT6sB,WAAY,GACZC,eAAgB,GAChBC,YAAa,GACbC,WAAY,G,CAGd,uBAAMxvB,GACJC,KAAKwvB,oBACLxvB,KAAKyvB,wBACLzvB,KAAK0vB,qBACL1vB,KAAK2vB,sB,CAGC,qBAAAF,GACN,MAAMG,GAAc,IAAI7qB,MAAOgR,cAC/B/V,KAAK0uB,YAAchN,MAAMC,KAAK,CAAElU,OAAQ,IAAK,CAACmS,EAAGnf,KAAWmvB,EAAcnvB,GAAO+N,Y,CAE3E,uBAAMghB,GACZ,MAAMK,QAAgB7vB,KAAKgE,eAAe8rB,wBAC1ClpB,QAAQC,IAAIgpB,GACZ,MAAMd,EAAYc,EAAQ,cAC1BjpB,QAAQC,IAAIkoB,GACZ/uB,KAAK+vB,aAAY5vB,OAAAC,OAAAD,OAAAC,OAAA,GAAQJ,KAAK+vB,cAAY,CAAEf,QAASD,EAAUvgB,WAAYugB,a,CAErE,kBAAAW,GACN,MAAM5qB,EAAK,IAAIC,KACf,MAAMO,EAAQR,EAAGkR,WAAa,EAC9BhW,KAAK2uB,aAAerpB,EAAQ,GAAK,IAAIA,IAAUA,EAAMkJ,U,CAG/C,oBAAAmhB,G,MACN3vB,KAAK+vB,aAAe/vB,KAAKmE,YAAWhE,OAAAC,OAAA,GAAQJ,KAAKmE,aAAgB,GACjEnE,KAAKwuB,kBAAkBxiB,EAAAhM,KAAKmE,eAAW,MAAA6H,SAAA,SAAAA,EAAExB,cAAe,GAExD,IAAKxK,KAAK+vB,aAAaT,YAAa,CAClCtvB,KAAK+vB,aAAaT,YAActvB,KAAK2uB,Y,CAEvC,IAAK3uB,KAAK+vB,aAAaR,WAAY,CACjCvvB,KAAK+vB,aAAaR,YAAa,IAAIxqB,MAAOgR,a,EAI9C,gBAAAzU,CAAiBH,EAAKS,GACpB,MAAMouB,EAAYhwB,KAAKwuB,gBAAgBhtB,MAAKyuB,GAAQA,EAAK3sB,YAAc1B,EAAME,OAAOP,QAEpFvB,KAAK+vB,aAAa5uB,GAChBA,IAAQ,aACJS,EAAME,OAAO4D,QACbvE,IAAQ,cACR,CACE8H,KAAMrH,EAAME,OAAOP,MACnB2H,YAAc8mB,GAAaA,EAAUzsB,eAAkB,IAEzD3B,EAAME,OAAOP,MACnBvB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,sBACLE,KAAIlB,OAAAC,OAAA,GAAOJ,KAAK+vB,gBAElB,GAAI5uB,IAAQ,YAAa,CACvBnB,KAAK+vB,aAAY5vB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAK+vB,cAAY,CACpBf,QAASptB,EAAME,OAAOP,O,EAK5B,iBAAA2uB,CAAkB/uB,EAAKS,GACrB,MAAMuf,EAAevf,EAAME,OAC3B,MAAMsf,EAAaD,EAAa5f,MAGhC,MAAM8f,EAAe,WAErB,IAAKA,EAAaC,KAAKF,GAAa,CAElCD,EAAa5f,MAAQ6f,EAAW9e,QAAQ,UAAW,G,CAErD,GAAI8e,IAAeD,EAAa5f,MAAO,CACrCvB,KAAKsB,iBAAiBH,EAAKS,E,EAI/B,sBAAMuuB,CAAiBhvB,EAAKS,GAC1B,MAAMuf,EAAevf,EAAME,OAC3B,MAAMsf,EAAaD,EAAa5f,MAChC,GAAIvB,KAAKowB,aAAahP,GAAa,CACjCphB,KAAKsB,iBAAiBH,EAAKS,E,EAG/B,eAAMyuB,GACJ,IACE,MAAMzB,EAAQ5uB,KAAK+vB,aAAanB,MAChC,GAAI5uB,KAAKowB,aAAaxB,GAAQ,CAC5B,MAAMrkB,QAAYvK,KAAKgE,eAAessB,YAAY1B,GAClD,GAAIrkB,IAAQ,KAAM,CAChBvK,KAAK+vB,aAAY5vB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAK+vB,cAAY,CACpBhvB,GAAIwJ,EAAIxJ,GACR8tB,UAAWtkB,EAAIgmB,WACfzB,SAAUvkB,EAAIimB,UACdvB,cAAe1kB,EAAIkmB,OACnB1B,UAAWxkB,EAAImmB,WACf1B,QAASzkB,EAAImmB,WAAWliB,Y,KAErB,CACLxO,KAAK+vB,aAAY5vB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAK+vB,cAAY,CACpBhvB,GAAI4D,UACJkqB,UAAW,GACXC,SAAU,GACVG,cAAe,GACfF,UAAW,GACXC,QAAS,I,CAGbhvB,KAAKiB,gBAAgBC,KAAK,CACxBC,IAAK,sBACLE,KAAIlB,OAAAC,OAAA,GAAOJ,KAAK+vB,e,EAGpB,MAAOzrB,G,EAIX,YAAA8rB,CAAaO,GACX,MAAMC,EAAe,mDACrB,OAAOA,EAAatP,KAAKqP,E,CAG3B,MAAA5uB,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,kBACTF,EAAA,OAAKE,MAAM,+CACTF,EAAA,SAAOE,MAAM,+CAA6C,aAC1DF,EAAA,OAAKE,MAAM,0BACTF,EAAA,SACEjB,GAAI4B,IACJC,KAAK,QACLV,MAAM,eACNW,YAAY,gBACZnB,KAAK,gBACLH,MAAOvB,KAAK+vB,aAAanB,MACzB9rB,QAASlB,GAAS5B,KAAKmwB,iBAAiB,QAASvuB,GACjDmB,SAAQ,KACR8tB,OAAQ,IAAM7wB,KAAKqwB,iBAK3BruB,EAAA,OAAKE,MAAM,iDACTF,EAAA,OAAKE,MAAM,OACTF,EAAA,OAAKE,MAAM,gBACTF,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,cACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAY,aACZ9B,GAAI4B,IACJpB,MAAOvB,KAAK+vB,aAAalB,UACzB/rB,QAASlB,GAAS5B,KAAKsB,iBAAiB,YAAaM,GACrDmB,SAAQ,SAKdf,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,aACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAY,YACZ9B,GAAI4B,IACJpB,MAAOvB,KAAK+vB,aAAajB,SACzBhsB,QAASlB,GAAS5B,KAAKsB,iBAAiB,WAAYM,OAK1DI,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,WACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,UAAQE,MAAM,6BAA6BnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,YAAaM,IACzGI,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAK+vB,aAAahB,YAAc,IAAE,UAG5D/uB,KAAKmS,gBAAgBhP,KAAI2tB,GACxB9uB,EAAA,UAAQT,MAAOuvB,EAAY/vB,GAAIkC,SAAUjD,KAAK+vB,aAAahB,YAAc+B,EAAY/vB,IAClF+vB,EAAYpvB,WAOvBM,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,gBACtBF,EAAA,OAAKE,MAAM,qCACTF,EAAA,OAAKE,MAAM,iBACTF,EAAA,UAAQE,MAAM,6BAA6BnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,UAAWM,IACvGI,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAK+vB,aAAaf,UAAY,IAAE,OAG1DhvB,KAAKmS,gBAAgBhP,KAAI0sB,GACxB7tB,EAAA,UAAQT,MAAOsuB,EAAQ9uB,GAAIkC,SAAUjD,KAAK+vB,aAAaf,UAAYa,EAAQ9uB,GAAGyN,YAC3EqhB,EAAQ7T,kBAKjBha,EAAA,OAAKE,MAAM,iBACTF,EAAA,SACEE,MAAM,eACNU,KAAK,MACLC,YAAY,iBACZ9B,GAAI4B,IACJpB,MAAOvB,KAAK+vB,aAAad,cACzBnsB,QAASlB,GAAS5B,KAAKkwB,kBAAkB,gBAAiBtuB,QAMlEI,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,qBACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,UAAQE,MAAM,6BAA6BnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,sBAAuBM,IACnHI,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAK+vB,aAAab,sBAAwB,IAAE,KAGtElvB,KAAKwuB,gBAAgBrrB,KAAI8sB,GACxBjuB,EAAA,UAAQT,MAAO0uB,EAAK3sB,UAAWL,SAAUjD,KAAK+vB,aAAab,sBAAwBe,EAAK3sB,WACrF2sB,EAAK1sB,oBAOhBvB,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,mBACtBF,EAAA,OAAKE,MAAM,mDACTF,EAAA,SAAOE,MAAM,eAAeU,KAAK,WAAW8C,QAAS1F,KAAK+vB,aAAaZ,WAAYpuB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,aAAcM,QAI1JI,EAAA,OAAKE,MAAM,gBACTF,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,uBACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,YACEjB,GAAI4B,IACJouB,KAAM,EACN7uB,MAAM,eACNR,KAAK,UACLH,MAAOvB,KAAK+vB,aAAaxtB,QACzBO,QAASlB,GAAS5B,KAAKsB,iBAAiB,UAAWM,OAIxD5B,KAAKiS,oBACJjQ,EAACgvB,EAAQ,KACPhvB,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,eACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAY,GACZouB,QAAQ,OACRlwB,GAAI4B,IACJpB,MAAOvB,KAAK+vB,aAAaX,WACzBtsB,QAASlB,GAAS5B,KAAKkwB,kBAAkB,aAActuB,OAI7DI,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,oBACtBF,EAAA,OAAKE,MAAM,iCACTF,EAAA,SACEE,MAAM,eACNU,KAAK,OACLC,YAAY,GACZouB,QAAQ,OACRlwB,GAAI4B,IACJpB,MAAOvB,KAAK+vB,aAAaV,eACzBvsB,QAASlB,GAAS5B,KAAKsB,iBAAiB,iBAAkBM,OAIhEI,EAAA,OAAKE,MAAM,yCACTF,EAAA,SAAOE,MAAM,WAAS,eACtBF,EAAA,OAAKE,MAAM,qCACTF,EAAA,OAAKE,MAAM,WACTF,EAAA,UAAQE,MAAM,6BAA6BnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,cAAeM,IAC1G5B,KAAKyuB,aAAatrB,KAAImC,GACrBtD,EAAA,UAAQT,MAAO+D,EAAOrC,SAAUqC,IAAUtF,KAAK+vB,aAAaT,aACzDhqB,OAKTtD,EAAA,OAAKE,MAAM,gBACTF,EAAA,UAAQE,MAAM,6BAA6BnB,GAAI4B,IAAMK,SAAUpB,GAAS5B,KAAKsB,iBAAiB,aAAcM,IACzG5B,KAAK0uB,YAAYvrB,KAAI,CAAC+tB,EAAMzwB,IAC3BuB,EAAA,UAAQT,MAAO2vB,EAAMjuB,SAAUxC,IAAUT,KAAK+vB,aAAaR,YACxD2B,a,aCxV/B,MAAMC,GAAuB,28zJ,MCUhBC,GAAiB,M,6QAiBpBpxB,KAAAqxB,iBAA4B,MAC5BrxB,KAAAsxB,aAAyC,GACzCtxB,KAAAmqB,oBAAsB,IAAI3C,E,uEAVU,G,oBACK,G,kGAIjB,M,mBAEC,C,CAIjC,YAAA+J,CAAa9sB,GACX,GAAIA,EAAIqJ,yBAA0B,CAChCrJ,EAAIqJ,2BACJrJ,EAAIsJ,iB,CAEN/N,KAAK4e,aAAexa,SAASK,EAAI3C,OAAOP,M,CAO1C,qBAAAiwB,CAAsBpP,EAAkBqP,EAAkBC,GACxD,GAAIA,IAAa,gBAAkBtP,IAAaqP,EAAU,CACxDzxB,KAAKqxB,iBAAmB,MACxBrxB,KAAK4e,cAAgB,EACrB,OAAO,I,MACF,GAAI8S,IAAa,aAAetP,IAAaqP,EAAU,CAC5DzxB,KAAK4e,cAAgB,EACrB,OAAO,I,CAET,OAAO,I,CAGT,iBAAA7e,GACE,GAAIC,KAAK2xB,gBAAkB,GAAK3xB,KAAK4xB,aAAe,EAAG,CACrD9f,YAAW,KACT9R,KAAK6xB,6BAA6B,GACjC,I,EAIP,sBAAMC,CAAiBlwB,GACrB,IACEA,EAAMkM,2BACNlM,EAAMmM,kBACN,GAAI/N,KAAK4e,aAAc,CACrB,MAAMpX,QAAexH,KAAKmqB,oBAAoBrC,WAAW9nB,KAAKge,UAAUzM,eAAgBvR,KAAKge,UAAUhP,GAAIhP,KAAK4e,cAChH,IAAImT,EAActgB,EAAoBjK,GACtC,MAAMsd,EAAQ3kB,OAAAC,OAAAD,OAAAC,OAAAD,OAAAC,OAAA,GAAQJ,KAAKge,WAAc+T,EAAY,IAAE,CAAE/iB,GAAIhP,KAAKge,UAAUhP,KAC5EpI,QAAQC,IAAIie,GAGZ9kB,KAAKgyB,qBAAqB9wB,KAAK,CAC7BC,IAAK,qBACLE,KAAM,CAAC0wB,EAAY,MAErB/xB,KAAKiyB,gBAAgB/wB,KAAK,CAAEC,IAAK,aAAcE,KAAMyjB,G,EAEvD,MAAOxgB,G,EAKX,2BAAAutB,GACE7xB,KAAKkyB,kCAAkChxB,KAAK,CAC1CC,IAAK,qBACLE,KAAM,CAAEwN,UAAW7O,KAAKge,UAAUhP,MAEpC,IAAKhP,KAAK4qB,aAAc,CACtB,M,CAEF,IAAIuH,EAAiB,GACrB,IAAIb,EAAe,GACnBa,EAAiBnyB,KAAKge,UAAUgF,eAAe7f,KAAI1B,IACjD6vB,EAAavL,KAAK,CAChBqM,cAAe,KACfrxB,GAAIU,EAAKqG,MACTpG,KAAMD,EAAKwnB,WAEb,OAAA9oB,OAAAC,OAAAD,OAAAC,OAAA,GACKqB,GAAI,CACPiI,iBAAkB1J,KAAKge,UAAUtU,iBACjCqe,WAAY/nB,KAAKge,UAAU+J,YAAU,IAKzC/nB,KAAKsxB,aAAeA,EACpBtxB,KAAKgyB,qBAAqB9wB,KAAK,CAC7BC,IAAK,qBACLE,KAAM8wB,IAGRnyB,KAAK6jB,iBAAiB3iB,KAAK,CACzBC,IAAK,mBACLJ,GAAIf,KAAK6P,WACTiU,SAAU,YAAc9jB,KAAK6P,aAI/B7P,KAAK6qB,Y,CAGP,qBAAAwH,CAAsBzwB,GACpBA,EAAMkM,2BACNlM,EAAMmM,kBACN/N,KAAKqxB,iBAAmB,MACxBrxB,KAAKkyB,kCAAkChxB,KAAK,CAC1CC,IAAK,qBACLE,KAAM,CAAEwN,UAAW,UAErB7O,KAAKuxB,aAAa,CAAEzvB,OAAQ,CAAEP,MAAO,MACrCvB,KAAKgyB,qBAAqB9wB,KAAK,CAAEC,IAAK,qBAAsBE,KAAM,KAClErB,KAAK6qB,Y,CAIP,qBAAAyH,CAAsB1wB,GACpB,IAAIP,EAAOO,EAAMgL,OAAOvL,KACxB,GAAIA,EAAKwN,WAAa7O,KAAKge,UAAUhP,GAAI,CACvChP,KAAKqxB,iBAAmB,MACxBrxB,KAAK4e,cAAgB,EACrB5e,KAAK6qB,Y,KACA,CACL7qB,KAAKqxB,iBAAmB,KACxBrxB,KAAK6qB,Y,EAIT,UAAAA,GACE7qB,KAAK2F,aAAe3F,KAAK2F,W,CAI3B,MAAA5D,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,mBAAmB6N,QAAS,IAAM/P,KAAK6xB,+BAChD7vB,EAAA,OACEE,MAAO,cAAclC,KAAKqxB,iBAAmB,gBAAkB,0BAAyB,cAC5E,UAAS,iBACN,MAAK,sBACA,wBAEnB,SAASrxB,KAAKge,UAAUzM,oBAAoBvR,KAAKge,UAAU1S,QAE9DtJ,EAAA,OAAKE,MAAM,gCACTF,EAAA,OAAKE,MAAM,sCACTF,EAAA,UAAQE,MAAM,wBAAwBnB,GAAI4B,IAAMK,SAAUyB,GAAOzE,KAAKuxB,aAAa9sB,IACjFzC,EAAA,UAAQT,MAAM,GAAG0B,SAAUjD,KAAK4e,eAAiB,GAAC,eAGjD5e,KAAKsxB,aAAanuB,KAAI1B,GACrBO,EAAA,UAAQT,MAAOE,EAAKV,GAAIkC,SAAUjD,KAAK4e,cAAgBnd,EAAKV,IACzDU,EAAKC,UAKb1B,KAAKqxB,iBACJrvB,EAAA,OAAKE,MAAM,8CACTF,EAAA,UAAQY,KAAK,SAASV,MAAM,2BAA2B6N,QAAStL,GAAOzE,KAAKqyB,sBAAsB5tB,IAAI,KAGtGzC,EAAA,UAAQY,KAAK,SAASV,MAAM,yBAAyB6N,QAAStL,GAAOzE,KAAK8xB,iBAAiBrtB,GAAM6L,SAAUtQ,KAAK4e,gBAAkB,GAAC,WAInI,MAEN5c,EAAA,Y,eC/LV,MAAMuwB,GAAwB,4q3J,MCejBC,GAAkB,M,sJAIoB,G,kGAIjB,K,CAIhC,iBAAAzyB,G,CAIA,qBAAA0yB,CAAsB7wB,GACpBA,EAAMkM,2BACNlM,EAAMmM,kBAEN,MAAMJ,EAA8B/L,EAAMgL,OAC1C5M,KAAK0yB,WAAa1yB,KAAK0yB,WAAW9xB,QAC/Bod,GAAcA,EAAUhP,IAAMrB,EAAItM,KAAK2N,KAE1ChP,KAAK+jB,aAAaU,cAAcsB,KAAKpY,EAAItM,MACzCrB,KAAK2yB,gBAAgBzxB,KAAK,CACxBC,IAAK,aACLE,KAAM,CACJwnB,MAAO7oB,KAAK6P,WACZ+a,aAAc5qB,KAAK4qB,aACnBmH,YAAapkB,EAAItM,KACjB0iB,aAAc/jB,KAAK+jB,gBAIvB/jB,KAAK6qB,Y,CAIP,YAAA+H,CAAa/iB,EAAY6iB,GACvB,OAAOA,EAAWvvB,KAAI,CAAC6a,EAAW+G,IAChC/iB,EAAA,wBACE+hB,aAAc/jB,KAAK+jB,aACnB6G,aAAc5qB,KAAK4qB,aACnB5M,UAAWA,EACX6U,eAAgB7yB,KAAK6yB,eACrBhjB,WAAYA,EACZ8hB,cAAe3xB,KAAK2xB,cACpBC,WAAY7M,EACZ+N,kBAAoBruB,GAAQzE,KAAKyyB,sBAAsBhuB,M,CAK7D,UAAAomB,GACE7qB,KAAK2F,aAAe3F,KAAK2F,W,CAG3B,MAAA5D,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,oBACTF,EAAA,OAAKE,MAAM,sCACRlC,KAAK6yB,eAAe7yB,KAAK6P,YAAYnO,MAEvC1B,KAAK4yB,aAAa5yB,KAAK6P,WAAY7P,KAAK0yB,a,eChFnD,MAAMK,GAAqB,i6pJ,MCUdC,GAAe,M,wUAgBlBhzB,KAAAizB,uBAAkC,MAClCjzB,KAAA4R,UAAqB,KACrB5R,KAAA4qB,aAAe,KACf5qB,KAAAqB,KAA+B,GAC/BrB,KAAA8mB,MAAQ,IAAI/hB,KACZ/E,KAAA6yB,eAAyC,GACzC7yB,KAAAmqB,oBAA2C,IAAI3C,E,8FAlBtB,4B,+CASC,M,iBACF,M,sBACG,E,CASnC,iBAAAznB,GACEC,KAAKkzB,e,CAEP,sBAAMC,CAAiBhyB,EAAK4iB,GAC1B,IACE,IAAIqP,EAAmB,GACvB,MAAM5rB,QAAexH,KAAKmqB,oBAAoBxC,mBAC5C3nB,KAAK2L,WACLiC,EAAsB,IAAI7I,MAAM5D,IAChC4iB,EAAatY,UACbsY,EAAa+B,qBAEfte,EAAO2gB,SAAQ1mB,IACb,IAAK2xB,EAAiBhnB,eAAe3K,EAAKonB,OAAQ,CAChDuK,EAAiB3xB,EAAKonB,OAAS,CAACpnB,E,KAC3B,CACL2xB,EAAiB3xB,EAAKonB,OAAO9C,KAAKtkB,E,KAGtCzB,KAAKqqB,gBAAgBlpB,GAAKsoB,WAAa2J,C,CACvC,MAAO9uB,G,EAKX,mBAAM4uB,GACJ,IACElzB,KAAK8mB,MAAM5hB,SAAS,EAAG,EAAG,EAAG,GAC7BlF,KAAK+jB,aAAatY,UAAU0c,SAAQ1d,IAClCzK,KAAK6yB,eAAepoB,EAAS1J,IAAM,CACjCW,KAAM+I,EAAS/I,KACff,UAAW8J,EAASyB,cACpBmnB,QAAS5oB,EAASyB,cAAc/I,KAAI1B,GAC3BA,EAAKV,KAEf,IAGHf,KAAK4qB,aAAe,KAEpB5qB,KAAKqqB,gBAAkBrqB,KAAK+jB,aAAasG,gBAEzCrqB,KAAKqB,KAAOrB,KAAKqqB,gBACjBrqB,KAAKszB,iBAAmBnzB,OAAOqN,KAAKxN,KAAKqB,MAAMkyB,MAAK,CAACC,EAAGC,IAAMrvB,SAASovB,GAAKpvB,SAASqvB,KAErF,IAAKzzB,KAAK4qB,cAAgB5qB,KAAKszB,iBAAiB7lB,OAAQ,CACtDzN,KAAK4qB,aAAe5qB,KAAKszB,iBAAiB,E,EAE5C,MAAOhvB,GACPsC,QAAQtC,MAAM,mCAAoCA,E,EAItD,sBAAM6E,GACJ2I,YAAW,KACT,IAAK9R,KAAKizB,wBAA0B9yB,OAAOqN,KAAKxN,KAAKqqB,iBAAiB5c,OAAS,EAAG,CAChF7G,QAAQC,IAAI7G,KAAKizB,wBACjB,MAAMS,EAAWvzB,OAAOqN,KAAKxN,KAAKqqB,iBAAiB,GAEnDrqB,KAAK2zB,YAAYD,E,IAElB,I,CAGL,cAAME,CAAShyB,GACb5B,KAAKizB,uBAAyB,KAC9BjzB,KAAK2zB,YAAY/xB,EAAMgL,OAAOvL,MAC9BrB,KAAK6zB,cAAgB,MACrB7zB,KAAK6qB,Y,CAGP,iBAAM8I,CAAYG,GAChB,IACE9zB,KAAK4R,UAAY,KACjB,GAAI5R,KAAK6zB,cAAe,CACtB7zB,KAAK+zB,oB,OAED/zB,KAAKmzB,iBAAiBW,EAAW9zB,KAAK+jB,cAC5C/jB,KAAKgyB,qBAAqB9wB,KAAK,CAAEC,IAAK,qBAAsBE,KAAM,KAClErB,KAAKmf,iBAAiBje,KAAK,CACzBC,IAAK,WACLE,KAAM+C,SAAS0vB,GAAa,QAE9B,GAAI9zB,KAAKizB,uBAAwB,CAC/BjzB,KAAKizB,uBAAyB,K,CAEhCjzB,KAAK4R,UAAY,MACjB5R,KAAK4qB,aAAekJ,C,CACpB,MAAOxvB,G,EAKX,MAAA0vB,CAAOlvB,GACL,MAAMse,EAAc,IAAIre,KAAKD,GAC7B,MAAMmhB,EAAS,UACf,MAAMgO,EAAYj0B,KAAKk0B,sBAAsB9Q,EAAa6C,GAE1D,OAAOgO,EAAY,IAAM7Q,EAAY7d,UAAY,KAAO6d,EAAYrN,a,CAGtE,qBAAAme,CAAsBhsB,EAAM+d,GAC1B,MAAMkO,EAAU,CAAEC,QAAS,SAC3B,OAAOlsB,EAAKmsB,mBAAmBpO,EAAQkO,E,CAGzC,iBAAA9M,CAAkBlmB,EAAKE,EAAO,IAC5BrB,KAAKkyB,kCAAkChxB,KAAK,CAC1CC,IAAK,qBACLE,KAAM,CAAEwN,UAAW,UAErB7O,KAAKgyB,qBAAqB9wB,KAAK,CAAEC,IAAK,qBAAsBE,KAAM,KAClErB,KAAKsnB,YAAYpmB,KAAK,CAAEC,MAAKE,Q,CAG/B,kBAAA0yB,GACE/zB,KAAK6zB,eAAiB7zB,KAAK6zB,a,CAG7B,uBAAAS,G,CAIA,eAAAC,GACE,GAAIv0B,KAAKszB,iBAAiB7lB,QAAUzN,KAAK4qB,cAAgB5qB,KAAKqB,KAAKrB,KAAK4qB,cAAe,CACrF,OAAOzqB,OAAO0gB,QAAQ7gB,KAAKqB,KAAKrB,KAAK4qB,cAAcnB,YAAYtmB,KAAI,EAAEpC,EAAI2xB,GAAa3N,IACpF/iB,EAAA,yBACE+hB,aAAc/jB,KAAK+jB,aACnB6G,aAAc5qB,KAAK4qB,aACnB/a,WAAY9O,EACZ4wB,cAAe5M,EACf8N,eAAgB7yB,KAAK6yB,eACrBH,WAAYA,EACZ8B,kBAAmB/vB,GAAOzE,KAAK8xB,iBAAiBrtB,M,KAG/C,CACL,OAAO,I,EAGX,sBAAMqtB,CAAiBlwB,GACrBA,EAAMkM,2BACN,GAAIlM,EAAMgL,OAAOzL,MAAQ,aAAc,OACvC,MAAMszB,EAAoB7yB,EAAMgL,OAAOvL,KACvC,MAAMupB,aAAEA,EAAY/B,MAAEA,GAAU4L,EAChC,MAAMhL,EAAazpB,KAAKqB,KAAKupB,GAAcnB,WAE3CzpB,KAAK00B,wBAAwBD,GAC7Bz0B,KAAK20B,6BAA6BF,GAClC,IAAKhL,EAAWZ,GAAQ,CACtB7oB,KAAK6qB,Y,KACA,OACC7qB,KAAK40B,6BAA6BH,EAAkB7J,cAC1D5qB,KAAK6qB,Y,CAEP7qB,KAAK60B,uBAAuBJ,EAAkB7J,a,CAGhD,uBAAA8J,CAAwBD,GACtB,MAAM7J,aAAEA,EAAY/B,MAAEA,EAAKkJ,YAAEA,GAAgB0C,EAC7C,MAAMhL,EAAazpB,KAAKqB,KAAKupB,GAAcnB,WAC3C,GAAIA,EAAWZ,GAAQ,CACrBY,EAAWZ,GAASY,EAAWZ,GAAOjoB,QAAOgB,GAASA,EAAMoN,IAAM+iB,EAAY/iB,I,EAGlF,sBAAA6lB,CAAuBjK,GACrB5qB,KAAK80B,yBAAyB5zB,KAAK,CACjCC,IAAK,sBACLE,KAAM,CAAEupB,iB,CAIZ,kCAAMgK,CAA6BhK,GACjC,GAAIA,IAAiB,KAAM,OACnB5qB,KAAKmzB,iBAAiBvI,EAAc5qB,KAAK+jB,a,EAInD,4BAAA4Q,CAA6BF,GAC3B,MAAM7J,aAAEA,EAAY/B,MAAEA,GAAU4L,EAChC,MAAMhL,EAAazpB,KAAKqB,KAAKupB,GAAcnB,WAE3C,IAAKA,EAAWZ,GAAQ,QACfY,EAAWZ,GAClB,IAAK1oB,OAAOqN,KAAKic,GAAYhc,OAAQ,QAC5BzN,KAAKqB,KAAKupB,GACjB5qB,KAAKszB,iBAAmBtzB,KAAKszB,iBAAiB1yB,QAAOsH,GAAQA,GAAQ0iB,IACrE5qB,KAAK4qB,aAAe5qB,KAAKszB,iBAAiB7lB,OAASzN,KAAKszB,iBAAiB,GAAK,I,GAIpF,UAAAzI,GACE7qB,KAAK2F,aAAe3F,KAAK2F,W,CAG3B,MAAA5D,GACE,OACEC,EAACC,EAAI,CAACC,MAAM,wCACVF,EAAA,WACEA,EAAA,WACEA,EAAA,OAAKE,MAAM,gBACTF,EAAA,OAAKE,MAAM,2BAAyB,eACpCF,EAAA,OAAKE,MAAM,gBAAgB6N,QAAS,IAAM/P,KAAKqnB,kBAAkB,kBAC/DrlB,EAAA,KAAGE,MAAM,sBAEXF,EAAA,WACChC,KAAK4R,UACJ5P,EAAA,SAAIhC,KAAK+0B,gBAET/yB,EAACgvB,EAAQ,KACNhxB,KAAKszB,iBAAiB7lB,OACrBzL,EAAA,OAAKE,MAAO,gBAAkBlC,KAAK6zB,cAAgB,OAAS,KAC1D7xB,EAAA,OAAK+N,QAAS,IAAM/P,KAAK+zB,sBACvB/xB,EAAA,QAAME,MAAM,oBAAoBlC,KAAKqB,KAAKrB,KAAK4qB,cAAclB,SAC7D1nB,EAAA,KAAGE,MAAM,2BAEVlC,KAAK6zB,cACJ7xB,EAAA,OAAKE,MAAM,gDACRlC,KAAKszB,iBAAiBnwB,KAAI6xB,GACzBhzB,EAAA,OAAKE,MAAM,gCAAgC6N,QAAS,IAAM/P,KAAK2zB,YAAYqB,IACxEh1B,KAAKqB,KAAK2zB,GAAStL,YAIxB,MACA,2BAOZ1pB,KAAK4R,WACL5P,EAAA,OAAKE,MAAM,mBACRlC,KAAKszB,iBAAiB7lB,OACrBtN,OAAOqN,KAAKxN,KAAKqB,KAAKrB,KAAK4qB,cAAcnB,YAAYhc,OACnDzN,KAAKu0B,kBAELvyB,EAAA,OAAKE,MAAM,QAAM,8BAEjB,Q,qBChRP+yB,GACJ,eAAMC,CACXn0B,EACA6K,GAEA,IACE,MAAMrF,EAAQC,KAAKC,MAAMC,eAAeC,QAAQ,UAChD,GAAIJ,IAAU,KAAM,CAClB,MAAMlF,KAAEA,SAAeyF,EAAMC,KAC3B,gCAAgCR,IAChC,CAAExF,KAAI6K,aAER,GAAIvK,EAAK2F,eAAiB,GAAI,CAC5B,MAAM,IAAIC,MAAM5F,EAAK2F,a,CAEvB,OAAO3F,C,EAET,MAAOiD,GACPsC,QAAQC,IAAIvC,GACZ,MAAM,IAAI2C,MAAM3C,E,GCrBtB,MAAM6wB,GAAeh1B,OAAOi1B,OAAO,MACnCD,GAAa,QAAU,IACvBA,GAAa,SAAW,IACxBA,GAAa,QAAU,IACvBA,GAAa,QAAU,IACvBA,GAAa,WAAa,IAC1BA,GAAa,WAAa,IAC1BA,GAAa,QAAU,IACvB,MAAME,GAAuBl1B,OAAOi1B,OAAO,MAC3Cj1B,OAAOqN,KAAK2nB,IAAchN,SAAQhnB,IAC9Bk0B,GAAqBF,GAAah0B,IAAQA,CAAG,IAEjD,MAAMm0B,GAAe,CAAE1yB,KAAM,QAASvB,KAAM,gBCX5C,MAAMk0B,UAAwBC,OAAS,mBAC3BA,OAAS,aACbr1B,OAAOs1B,UAAUjnB,SAASknB,KAAKF,QAAU,2BACjD,MAAMG,UAA+BC,cAAgB,WAErD,MAAMC,GAASC,UACGF,YAAYC,SAAW,WAC/BD,YAAYC,OAAOC,GACnBA,GAAOA,EAAIC,kBAAkBH,YAEvC,MAAMI,GAAe,EAAGpzB,OAAMvB,QAAQ40B,EAAgBC,KAClD,GAAIX,IAAkBl0B,aAAgBm0B,KAAM,CACxC,GAAIS,EAAgB,CAChB,OAAOC,EAAS70B,EAC5B,KACa,CACD,OAAO80B,GAAmB90B,EAAM60B,EAC5C,CACA,MACS,GAAIP,KACJt0B,aAAgBu0B,aAAeC,GAAOx0B,IAAQ,CAC/C,GAAI40B,EAAgB,CAChB,OAAOC,EAAS70B,EAC5B,KACa,CACD,OAAO80B,GAAmB,IAAIX,KAAK,CAACn0B,IAAQ60B,EACxD,CACA,CAEI,OAAOA,EAASf,GAAavyB,IAASvB,GAAQ,IAAI,EAEtD,MAAM80B,GAAqB,CAAC90B,EAAM60B,KAC9B,MAAME,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAChB,MAAMC,EAAUH,EAAW5uB,OAAOW,MAAM,KAAK,GAC7C+tB,EAAS,KAAOK,GAAW,IACnC,EACI,OAAOH,EAAWI,cAAcn1B,EAAK,EAEzC,SAASo1B,GAAQp1B,GACb,GAAIA,aAAgBq1B,WAAY,CAC5B,OAAOr1B,CACf,MACS,GAAIA,aAAgBu0B,YAAa,CAClC,OAAO,IAAIc,WAAWr1B,EAC9B,KACS,CACD,OAAO,IAAIq1B,WAAWr1B,EAAK00B,OAAQ10B,EAAKs1B,WAAYt1B,EAAKu1B,WACjE,CACA,CACA,IAAIC,GACG,SAASC,GAAqBC,EAAQb,GACzC,GAAIX,IAAkBwB,EAAO11B,gBAAgBm0B,KAAM,CAC/C,OAAOuB,EAAO11B,KACT21B,cACAC,KAAKR,IACLQ,KAAKf,EAClB,MACS,GAAIP,KACJoB,EAAO11B,gBAAgBu0B,aAAeC,GAAOkB,EAAO11B,OAAQ,CAC7D,OAAO60B,EAASO,GAAQM,EAAO11B,MACvC,CACI20B,GAAae,EAAQ,OAAOG,IACxB,IAAKL,GAAc,CACfA,GAAe,IAAIM,WAC/B,CACQjB,EAASW,GAAaO,OAAOF,GAAS,GAE9C,CCpEA,MAAMG,GAAQ,mEAEd,MAAMC,UAAgBZ,aAAe,YAAc,GAAK,IAAIA,WAAW,KACvE,IAAK,IAAI7U,EAAI,EAAGA,EAAIwV,GAAM5pB,OAAQoU,IAAK,CACnCyV,GAAOD,GAAME,WAAW1V,IAAMA,CAClC,CAiBO,MAAM2V,GAAUC,IACnB,IAAIC,EAAeD,EAAOhqB,OAAS,IAAMkqB,EAAMF,EAAOhqB,OAAQoU,EAAG+V,EAAI,EAAGC,EAAUC,EAAUC,EAAUC,EACtG,GAAIP,EAAOA,EAAOhqB,OAAS,KAAO,IAAK,CACnCiqB,IACA,GAAID,EAAOA,EAAOhqB,OAAS,KAAO,IAAK,CACnCiqB,GACZ,CACA,CACI,MAAMO,EAAc,IAAIrC,YAAY8B,GAAeQ,EAAQ,IAAIxB,WAAWuB,GAC1E,IAAKpW,EAAI,EAAGA,EAAI8V,EAAK9V,GAAK,EAAG,CACzBgW,EAAWP,GAAOG,EAAOF,WAAW1V,IACpCiW,EAAWR,GAAOG,EAAOF,WAAW1V,EAAI,IACxCkW,EAAWT,GAAOG,EAAOF,WAAW1V,EAAI,IACxCmW,EAAWV,GAAOG,EAAOF,WAAW1V,EAAI,IACxCqW,EAAMN,KAAQC,GAAY,EAAMC,GAAY,EAC5CI,EAAMN,MAASE,EAAW,KAAO,EAAMC,GAAY,EACnDG,EAAMN,MAASG,EAAW,IAAM,EAAMC,EAAW,EACzD,CACI,OAAOC,CAAW,ECvCtB,MAAMtC,UAA+BC,cAAgB,WAC9C,MAAMuC,GAAe,CAACC,EAAeC,KACxC,UAAWD,IAAkB,SAAU,CACnC,MAAO,CACHx1B,KAAM,UACNvB,KAAMi3B,GAAUF,EAAeC,GAE3C,CACI,MAAMz1B,EAAOw1B,EAAcG,OAAO,GAClC,GAAI31B,IAAS,IAAK,CACd,MAAO,CACHA,KAAM,UACNvB,KAAMm3B,GAAmBJ,EAAcK,UAAU,GAAIJ,GAEjE,CACI,MAAMK,EAAarD,GAAqBzyB,GACxC,IAAK81B,EAAY,CACb,OAAOpD,EACf,CACI,OAAO8C,EAAc3qB,OAAS,EACxB,CACE7K,KAAMyyB,GAAqBzyB,GAC3BvB,KAAM+2B,EAAcK,UAAU,IAEhC,CACE71B,KAAMyyB,GAAqBzyB,GAC9B,EAET,MAAM41B,GAAqB,CAACn3B,EAAMg3B,KAC9B,GAAI1C,GAAuB,CACvB,MAAMgD,EAAUnB,GAAOn2B,GACvB,OAAOi3B,GAAUK,EAASN,EAClC,KACS,CACD,MAAO,CAAEZ,OAAQ,KAAMp2B,OAC/B,GAEA,MAAMi3B,GAAY,CAACj3B,EAAMg3B,KACrB,OAAQA,GACJ,IAAK,OACD,GAAIh3B,aAAgBm0B,KAAM,CAEtB,OAAOn0B,CACvB,KACiB,CAED,OAAO,IAAIm0B,KAAK,CAACn0B,GACjC,CACQ,IAAK,cACL,QACI,GAAIA,aAAgBu0B,YAAa,CAE7B,OAAOv0B,CACvB,KACiB,CAED,OAAOA,EAAK00B,MAC5B,EACA,ECzDA,MAAM6C,GAAYC,OAAOC,aAAa,IACtC,MAAMC,GAAgB,CAACC,EAAS9C,KAE5B,MAAMzoB,EAASurB,EAAQvrB,OACvB,MAAMwrB,EAAiB,IAAIvX,MAAMjU,GACjC,IAAIyrB,EAAQ,EACZF,EAAQ7Q,SAAQ,CAAC4O,EAAQlV,KAErBmU,GAAae,EAAQ,OAAOqB,IACxBa,EAAepX,GAAKuW,EACpB,KAAMc,IAAUzrB,EAAQ,CACpByoB,EAAS+C,EAAe7wB,KAAKwwB,IAC7C,IACU,GACJ,EAEN,MAAMO,GAAgB,CAACC,EAAgBf,KACnC,MAAMY,EAAiBG,EAAejxB,MAAMywB,IAC5C,MAAMI,EAAU,GAChB,IAAK,IAAInX,EAAI,EAAGA,EAAIoX,EAAexrB,OAAQoU,IAAK,CAC5C,MAAMwX,EAAgBlB,GAAac,EAAepX,GAAIwW,GACtDW,EAAQjT,KAAKsT,GACb,GAAIA,EAAcz2B,OAAS,QAAS,CAChC,KACZ,CACA,CACI,OAAOo2B,CAAO,EAEX,SAASM,KACZ,OAAO,IAAIC,gBAAgB,CACvB,SAAAC,CAAUzC,EAAQ0C,GACd3C,GAAqBC,GAAQqB,IACzB,MAAMsB,EAAgBtB,EAAc3qB,OACpC,IAAIksB,EAEJ,GAAID,EAAgB,IAAK,CACrBC,EAAS,IAAIjD,WAAW,GACxB,IAAIkD,SAASD,EAAO5D,QAAQ8D,SAAS,EAAGH,EAC5D,MACqB,GAAIA,EAAgB,MAAO,CAC5BC,EAAS,IAAIjD,WAAW,GACxB,MAAMoD,EAAO,IAAIF,SAASD,EAAO5D,QACjC+D,EAAKD,SAAS,EAAG,KACjBC,EAAKC,UAAU,EAAGL,EACtC,KACqB,CACDC,EAAS,IAAIjD,WAAW,GACxB,MAAMoD,EAAO,IAAIF,SAASD,EAAO5D,QACjC+D,EAAKD,SAAS,EAAG,KACjBC,EAAKE,aAAa,EAAGC,OAAOP,GAChD,CAEgB,GAAI3C,EAAO11B,aAAe01B,EAAO11B,OAAS,SAAU,CAChDs4B,EAAO,IAAM,GACjC,CACgBF,EAAWS,QAAQP,GACnBF,EAAWS,QAAQ9B,EAAc,GAEjD,GAEA,CACA,IAAI+B,GACJ,SAASC,GAAYC,GACjB,OAAOA,EAAO3X,QAAO,CAACC,EAAK2X,IAAU3X,EAAM2X,EAAM7sB,QAAQ,EAC7D,CACA,SAAS8sB,GAAaF,EAAQG,GAC1B,GAAIH,EAAO,GAAG5sB,SAAW+sB,EAAM,CAC3B,OAAOH,EAAOI,OACtB,CACI,MAAM1E,EAAS,IAAIW,WAAW8D,GAC9B,IAAIE,EAAI,EACR,IAAK,IAAI7Y,EAAI,EAAGA,EAAI2Y,EAAM3Y,IAAK,CAC3BkU,EAAOlU,GAAKwY,EAAO,GAAGK,KACtB,GAAIA,IAAML,EAAO,GAAG5sB,OAAQ,CACxB4sB,EAAOI,QACPC,EAAI,CAChB,CACA,CACI,GAAIL,EAAO5sB,QAAUitB,EAAIL,EAAO,GAAG5sB,OAAQ,CACvC4sB,EAAO,GAAKA,EAAO,GAAGM,MAAMD,EACpC,CACI,OAAO3E,CACX,CACO,SAAS6E,GAA0BC,EAAYxC,GAClD,IAAK8B,GAAc,CACfA,GAAe,IAAIW,WAC3B,CACI,MAAMT,EAAS,GACf,IAAIU,EAAQ,EACZ,IAAIC,GAAkB,EACtB,IAAIC,EAAW,MACf,OAAO,IAAI1B,gBAAgB,CACvB,SAAAC,CAAUc,EAAOb,GACbY,EAAOtU,KAAKuU,GACZ,MAAO,KAAM,CACT,GAAIS,IAAU,EAAqB,CAC/B,GAAIX,GAAYC,GAAU,EAAG,CACzB,KACxB,CACoB,MAAMV,EAASY,GAAaF,EAAQ,GACpCY,GAAYtB,EAAO,GAAK,OAAU,IAClCqB,EAAiBrB,EAAO,GAAK,IAC7B,GAAIqB,EAAiB,IAAK,CACtBD,EAAQ,CAChC,MACyB,GAAIC,IAAmB,IAAK,CAC7BD,EAAQ,CAChC,KACyB,CACDA,EAAQ,CAChC,CACA,MACqB,GAAIA,IAAU,EAAiC,CAChD,GAAIX,GAAYC,GAAU,EAAG,CACzB,KACxB,CACoB,MAAMa,EAAcX,GAAaF,EAAQ,GACzCW,EAAiB,IAAIpB,SAASsB,EAAYnF,OAAQmF,EAAYvE,WAAYuE,EAAYztB,QAAQ0tB,UAAU,GACxGJ,EAAQ,CAC5B,MACqB,GAAIA,IAAU,EAAiC,CAChD,GAAIX,GAAYC,GAAU,EAAG,CACzB,KACxB,CACoB,MAAMa,EAAcX,GAAaF,EAAQ,GACzC,MAAMP,EAAO,IAAIF,SAASsB,EAAYnF,OAAQmF,EAAYvE,WAAYuE,EAAYztB,QAClF,MAAM2tB,EAAItB,EAAKuB,UAAU,GACzB,GAAID,EAAIthB,KAAKwhB,IAAI,EAAG,GAAK,IAAM,EAAG,CAE9B7B,EAAWS,QAAQ5E,IACnB,KACxB,CACoB0F,EAAiBI,EAAIthB,KAAKwhB,IAAI,EAAG,IAAMxB,EAAKuB,UAAU,GACtDN,EAAQ,CAC5B,KACqB,CACD,GAAIX,GAAYC,GAAUW,EAAgB,CACtC,KACxB,CACoB,MAAM35B,EAAOk5B,GAAaF,EAAQW,GAClCvB,EAAWS,QAAQ/B,GAAa8C,EAAW55B,EAAO84B,GAAa3C,OAAOn2B,GAAOg3B,IAC7E0C,EAAQ,CAC5B,CACgB,GAAIC,IAAmB,GAAKA,EAAiBH,EAAY,CACrDpB,EAAWS,QAAQ5E,IACnB,KACpB,CACA,CACA,GAEA,CACO,MAAMiG,GAAW,ECpJjB,SAASC,GAAQ1F,GACtB,GAAIA,EAAK,OAAO2F,GAAM3F,EACxB,CAUA,SAAS2F,GAAM3F,GACb,IAAK,IAAI30B,KAAOq6B,GAAQ/F,UAAW,CACjCK,EAAI30B,GAAOq6B,GAAQ/F,UAAUt0B,EACjC,CACE,OAAO20B,CACT,CAWA0F,GAAQ/F,UAAUiG,GAClBF,GAAQ/F,UAAUpsB,iBAAmB,SAASzH,EAAO+5B,GACnD37B,KAAK47B,WAAa57B,KAAK47B,YAAc,IACpC57B,KAAK47B,WAAW,IAAMh6B,GAAS5B,KAAK47B,WAAW,IAAMh6B,IAAU,IAC7DmkB,KAAK4V,GACR,OAAO37B,IACT,EAYAw7B,GAAQ/F,UAAUoG,KAAO,SAASj6B,EAAO+5B,GACvC,SAASD,IACP17B,KAAK87B,IAAIl6B,EAAO85B,GAChBC,EAAGI,MAAM/7B,KAAMg8B,UACnB,CAEEN,EAAGC,GAAKA,EACR37B,KAAK07B,GAAG95B,EAAO85B,GACf,OAAO17B,IACT,EAYAw7B,GAAQ/F,UAAUqG,IAClBN,GAAQ/F,UAAUwG,eAClBT,GAAQ/F,UAAUyG,mBAClBV,GAAQ/F,UAAUjsB,oBAAsB,SAAS5H,EAAO+5B,GACtD37B,KAAK47B,WAAa57B,KAAK47B,YAAc,GAGrC,GAAI,GAAKI,UAAUvuB,OAAQ,CACzBzN,KAAK47B,WAAa,GAClB,OAAO57B,IACX,CAGE,IAAIm8B,EAAYn8B,KAAK47B,WAAW,IAAMh6B,GACtC,IAAKu6B,EAAW,OAAOn8B,KAGvB,GAAI,GAAKg8B,UAAUvuB,OAAQ,QAClBzN,KAAK47B,WAAW,IAAMh6B,GAC7B,OAAO5B,IACX,CAGE,IAAIo8B,EACJ,IAAK,IAAIva,EAAI,EAAGA,EAAIsa,EAAU1uB,OAAQoU,IAAK,CACzCua,EAAKD,EAAUta,GACf,GAAIua,IAAOT,GAAMS,EAAGT,KAAOA,EAAI,CAC7BQ,EAAUjX,OAAOrD,EAAG,GACpB,KACN,CACA,CAIE,GAAIsa,EAAU1uB,SAAW,EAAG,QACnBzN,KAAK47B,WAAW,IAAMh6B,EACjC,CAEE,OAAO5B,IACT,EAUAw7B,GAAQ/F,UAAUv0B,KAAO,SAASU,GAChC5B,KAAK47B,WAAa57B,KAAK47B,YAAc,GAErC,IAAIS,EAAO,IAAI3a,MAAMsa,UAAUvuB,OAAS,GACpC0uB,EAAYn8B,KAAK47B,WAAW,IAAMh6B,GAEtC,IAAK,IAAIigB,EAAI,EAAGA,EAAIma,UAAUvuB,OAAQoU,IAAK,CACzCwa,EAAKxa,EAAI,GAAKma,UAAUna,EAC5B,CAEE,GAAIsa,EAAW,CACbA,EAAYA,EAAUxB,MAAM,GAC5B,IAAK,IAAI9Y,EAAI,EAAG8V,EAAMwE,EAAU1uB,OAAQoU,EAAI8V,IAAO9V,EAAG,CACpDsa,EAAUta,GAAGka,MAAM/7B,KAAMq8B,EAC/B,CACA,CAEE,OAAOr8B,IACT,EAGAw7B,GAAQ/F,UAAU6G,aAAed,GAAQ/F,UAAUv0B,KAUnDs6B,GAAQ/F,UAAU8G,UAAY,SAAS36B,GACrC5B,KAAK47B,WAAa57B,KAAK47B,YAAc,GACrC,OAAO57B,KAAK47B,WAAW,IAAMh6B,IAAU,EACzC,EAUA45B,GAAQ/F,UAAU+G,aAAe,SAAS56B,GACxC,QAAU5B,KAAKu8B,UAAU36B,GAAO6L,MAClC,ECxKO,MAAMgvB,GAAiB,MAC1B,UAAWC,OAAS,YAAa,CAC7B,OAAOA,IACf,MACS,UAAWnpB,SAAW,YAAa,CACpC,OAAOA,MACf,KACS,CACD,OAAOopB,SAAS,cAATA,EACf,CACC,EAV6B,GCCvB,SAASC,GAAK9G,KAAQ+G,GACzB,OAAOA,EAAKna,QAAO,CAACC,EAAKma,KACrB,GAAIhH,EAAI1pB,eAAe0wB,GAAI,CACvBna,EAAIma,GAAKhH,EAAIgH,EACzB,CACQ,OAAOna,CAAG,GACX,GACP,CAEA,MAAMoa,GAAqBC,GAAWlrB,WACtC,MAAMmrB,GAAuBD,GAAWE,aACjC,SAASC,GAAsBrH,EAAKsH,GACvC,GAAIA,EAAKC,gBAAiB,CACtBvH,EAAIwH,aAAeP,GAAmB7pB,KAAK8pB,IAC3ClH,EAAIyH,eAAiBN,GAAqB/pB,KAAK8pB,GACvD,KACS,CACDlH,EAAIwH,aAAeN,GAAWlrB,WAAWoB,KAAK8pB,IAC9ClH,EAAIyH,eAAiBP,GAAWE,aAAahqB,KAAK8pB,GAC1D,CACA,CAEA,MAAMQ,GAAkB,KAEjB,SAAS5G,GAAWd,GACvB,UAAWA,IAAQ,SAAU,CACzB,OAAO2H,GAAW3H,EAC1B,CAEI,OAAOhc,KAAK4jB,MAAM5H,EAAIc,YAAcd,EAAI0E,MAAQgD,GACpD,CACA,SAASC,GAAWxV,GAChB,IAAI0V,EAAI,EAAGlwB,EAAS,EACpB,IAAK,IAAIoU,EAAI,EAAG+b,EAAI3V,EAAIxa,OAAQoU,EAAI+b,EAAG/b,IAAK,CACxC8b,EAAI1V,EAAIsP,WAAW1V,GACnB,GAAI8b,EAAI,IAAM,CACVlwB,GAAU,CACtB,MACa,GAAIkwB,EAAI,KAAO,CAChBlwB,GAAU,CACtB,MACa,GAAIkwB,EAAI,OAAUA,GAAK,MAAQ,CAChClwB,GAAU,CACtB,KACa,CACDoU,IACApU,GAAU,CACtB,CACA,CACI,OAAOA,CACX,CC3CO,SAAS2pB,GAAOtB,GACnB,IAAI7N,EAAM,GACV,IAAK,IAAIpG,KAAKiU,EAAK,CACf,GAAIA,EAAI1pB,eAAeyV,GAAI,CACvB,GAAIoG,EAAIxa,OACJwa,GAAO,IACXA,GAAO4V,mBAAmBhc,GAAK,IAAMgc,mBAAmB/H,EAAIjU,GACxE,CACA,CACI,OAAOoG,CACX,CAOO,SAASuP,GAAOsG,GACnB,IAAIC,EAAM,GACV,IAAIC,EAAQF,EAAG31B,MAAM,KACrB,IAAK,IAAI0Z,EAAI,EAAG+b,EAAII,EAAMvwB,OAAQoU,EAAI+b,EAAG/b,IAAK,CAC1C,IAAIoc,EAAOD,EAAMnc,GAAG1Z,MAAM,KAC1B41B,EAAIG,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,GACnE,CACI,OAAOF,CACX,CC7BO,MAAMI,WAAuBl3B,MAChC,WAAAhB,CAAYm4B,EAAQl1B,EAAam1B,GAC7BC,MAAMF,GACNp+B,KAAKkJ,YAAcA,EACnBlJ,KAAKq+B,QAAUA,EACfr+B,KAAK4C,KAAO,gBACpB,EAEO,MAAM27B,WAAkB/C,GAO3B,WAAAv1B,CAAYm3B,GACRkB,QACAt+B,KAAKw+B,SAAW,MAChBrB,GAAsBn9B,KAAMo9B,GAC5Bp9B,KAAKo9B,KAAOA,EACZp9B,KAAKy+B,MAAQrB,EAAKqB,MAClBz+B,KAAK0+B,OAAStB,EAAKsB,MAC3B,CAUI,OAAAC,CAAQP,EAAQl1B,EAAam1B,GACzBC,MAAMhC,aAAa,QAAS,IAAI6B,GAAeC,EAAQl1B,EAAam1B,IACpE,OAAOr+B,IACf,CAII,IAAA4+B,GACI5+B,KAAK6+B,WAAa,UAClB7+B,KAAK8+B,SACL,OAAO9+B,IACf,CAII,KAAA++B,GACI,GAAI/+B,KAAK6+B,aAAe,WAAa7+B,KAAK6+B,aAAe,OAAQ,CAC7D7+B,KAAKg/B,UACLh/B,KAAKi/B,SACjB,CACQ,OAAOj/B,IACf,CAMI,IAAAk/B,CAAKlG,GACD,GAAIh5B,KAAK6+B,aAAe,OAAQ,CAC5B7+B,KAAKm/B,MAAMnG,EACvB,CAIA,CAMI,MAAAoG,GACIp/B,KAAK6+B,WAAa,OAClB7+B,KAAKw+B,SAAW,KAChBF,MAAMhC,aAAa,OAC3B,CAOI,MAAA+C,CAAOh+B,GACH,MAAM01B,EAASoB,GAAa92B,EAAMrB,KAAK0+B,OAAOrG,YAC9Cr4B,KAAKs/B,SAASvI,EACtB,CAMI,QAAAuI,CAASvI,GACLuH,MAAMhC,aAAa,SAAUvF,EACrC,CAMI,OAAAkI,CAAQM,GACJv/B,KAAK6+B,WAAa,SAClBP,MAAMhC,aAAa,QAASiD,EACpC,CAMI,KAAAC,CAAMC,GAAS,CACf,SAAAC,CAAUC,EAAQlB,EAAQ,IACtB,OAAQkB,EACJ,MACA3/B,KAAK4/B,YACL5/B,KAAK6/B,QACL7/B,KAAKo9B,KAAK0C,KACV9/B,KAAK+/B,OAAOtB,EACxB,CACI,SAAAmB,GACI,MAAMI,EAAWhgC,KAAKo9B,KAAK4C,SAC3B,OAAOA,EAASxU,QAAQ,QAAU,EAAIwU,EAAW,IAAMA,EAAW,GAC1E,CACI,KAAAH,GACI,GAAI7/B,KAAKo9B,KAAK6C,OACRjgC,KAAKo9B,KAAK8C,QAAUC,OAAOngC,KAAKo9B,KAAK6C,OAAS,OAC1CjgC,KAAKo9B,KAAK8C,QAAUC,OAAOngC,KAAKo9B,KAAK6C,QAAU,IAAM,CAC3D,MAAO,IAAMjgC,KAAKo9B,KAAK6C,IACnC,KACa,CACD,MAAO,EACnB,CACA,CACI,MAAAF,CAAOtB,GACH,MAAM2B,EAAehJ,GAAOqH,GAC5B,OAAO2B,EAAa3yB,OAAS,IAAM2yB,EAAe,EAC1D,ECzIK,MAACC,GAAW,mEAAmEl4B,MAAM,IAAKsF,GAAS,GACrG,IAAC6yB,GAAO,EAAUC,GAQd,SAASnJ,GAAOpR,GACnB,IAAIkR,EAAU,GACd,EAAG,CACCA,EAAUmJ,GAASra,EAAMvY,IAAUypB,EACnClR,EAAMlM,KAAK2S,MAAMzG,EAAMvY,GAC/B,OAAauY,EAAM,GACf,OAAOkR,CACX,CAqBO,SAASsJ,KACZ,MAAMC,EAAMrJ,IAAQ,IAAIryB,MACxB,GAAI07B,IAAQF,GACR,OAAOD,GAAO,EAAGC,GAAOE,EAC5B,OAAOA,EAAM,IAAMrJ,GAAOkJ,KAC9B,CC3CA,IAAI/+B,GAAQ,MACZ,IACIA,UAAem/B,iBAAmB,aAC9B,oBAAqB,IAAIA,cACjC,CACA,MAAOC,GAGP,CACO,MAAMC,GAAUr/B,GCPhB,SAASs/B,GAAIzD,GAChB,MAAM0D,EAAU1D,EAAK0D,QAErB,IACI,GAAI,qBAAuBJ,kBAAoBI,GAAWF,IAAU,CAChE,OAAO,IAAIF,cACvB,CACA,CACI,MAAO7/B,GAAG,CACV,IAAKigC,EAAS,CACV,IACI,OAAO,IAAI9D,GAAW,CAAC,UAAUxS,OAAO,UAAUpiB,KAAK,OAAM,oBACzE,CACQ,MAAOvH,GAAG,CAClB,CACA,CACO,SAASkgC,KAAkB,CCZlC,SAASC,KAAQ,CACjB,MAAMC,GAAU,WACZ,MAAMC,EAAM,IAAIR,GAAe,CAC3BI,QAAS,QAEb,OAAO,MAAQI,EAAIC,YACtB,CALe,GAMT,MAAMC,WAAgB7C,GAOzB,WAAAt4B,CAAYm3B,GACRkB,MAAMlB,GACNp9B,KAAKqhC,QAAU,MACf,UAAWC,WAAa,YAAa,CACjC,MAAMC,EAAQ,WAAaD,SAAS/F,SACpC,IAAI0E,EAAOqB,SAASrB,KAEpB,IAAKA,EAAM,CACPA,EAAOsB,EAAQ,MAAQ,IACvC,CACYvhC,KAAKwhC,UACOF,WAAa,aACjBlE,EAAK4C,WAAasB,SAAStB,UAC3BC,IAAS7C,EAAK6C,IAClC,CAIQ,MAAMwB,EAAcrE,GAAQA,EAAKqE,YACjCzhC,KAAKi2B,eAAiBgL,KAAYQ,EAClC,GAAIzhC,KAAKo9B,KAAKsE,gBAAiB,CAC3B1hC,KAAK2hC,UAAYZ,IAC7B,CACA,CACI,QAAIr/B,GACA,MAAO,SACf,CAOI,MAAAo9B,GACI9+B,KAAK4hC,MACb,CAOI,KAAApC,CAAMC,GACFz/B,KAAK6+B,WAAa,UAClB,MAAMW,EAAQ,KACVx/B,KAAK6+B,WAAa,SAClBY,GAAS,EAEb,GAAIz/B,KAAKqhC,UAAYrhC,KAAKw+B,SAAU,CAChC,IAAIjR,EAAQ,EACZ,GAAIvtB,KAAKqhC,QAAS,CACd9T,IACAvtB,KAAK67B,KAAK,gBAAgB,aACpBtO,GAASiS,GAC/B,GACA,CACY,IAAKx/B,KAAKw+B,SAAU,CAChBjR,IACAvtB,KAAK67B,KAAK,SAAS,aACbtO,GAASiS,GAC/B,GACA,CACA,KACa,CACDA,GACZ,CACA,CAMI,IAAAoC,GACI5hC,KAAKqhC,QAAU,KACfrhC,KAAK6hC,SACL7hC,KAAKs8B,aAAa,OAC1B,CAMI,MAAA+C,CAAOh+B,GACH,MAAM60B,EAAYa,IAEd,GAAI,YAAc/2B,KAAK6+B,YAAc9H,EAAOn0B,OAAS,OAAQ,CACzD5C,KAAKo/B,QACrB,CAEY,GAAI,UAAYrI,EAAOn0B,KAAM,CACzB5C,KAAKi/B,QAAQ,CAAE/1B,YAAa,mCAC5B,OAAO,KACvB,CAEYlJ,KAAKs/B,SAASvI,EAAO,EAGzBoC,GAAc93B,EAAMrB,KAAK0+B,OAAOrG,YAAYlQ,QAAQ+N,GAEpD,GAAI,WAAal2B,KAAK6+B,WAAY,CAE9B7+B,KAAKqhC,QAAU,MACfrhC,KAAKs8B,aAAa,gBAClB,GAAI,SAAWt8B,KAAK6+B,WAAY,CAC5B7+B,KAAK4hC,MACrB,CAGA,CACA,CAMI,OAAA5C,GACI,MAAMD,EAAQ,KACV/+B,KAAKm/B,MAAM,CAAC,CAAEv8B,KAAM,UAAW,EAEnC,GAAI,SAAW5C,KAAK6+B,WAAY,CAC5BE,GACZ,KACa,CAGD/+B,KAAK67B,KAAK,OAAQkD,EAC9B,CACA,CAOI,KAAAI,CAAMnG,GACFh5B,KAAKw+B,SAAW,MAChBzF,GAAcC,GAAU33B,IACpBrB,KAAK8hC,QAAQzgC,GAAM,KACfrB,KAAKw+B,SAAW,KAChBx+B,KAAKs8B,aAAa,QAAQ,GAC5B,GAEd,CAMI,GAAAyF,GACI,MAAMpC,EAAS3/B,KAAKo9B,KAAK8C,OAAS,QAAU,OAC5C,MAAMzB,EAAQz+B,KAAKy+B,OAAS,GAE5B,GAAI,QAAUz+B,KAAKo9B,KAAK4E,kBAAmB,CACvCvD,EAAMz+B,KAAKo9B,KAAK6E,gBAAkBzB,IAC9C,CACQ,IAAKxgC,KAAKi2B,iBAAmBwI,EAAMyD,IAAK,CACpCzD,EAAM0D,IAAM,CACxB,CACQ,OAAOniC,KAAK0/B,UAAUC,EAAQlB,EACtC,CAOI,OAAA2D,CAAQhF,EAAO,IACXj9B,OAAOC,OAAOg9B,EAAM,CAAEoE,GAAIxhC,KAAKwhC,GAAIG,UAAW3hC,KAAK2hC,WAAa3hC,KAAKo9B,MACrE,OAAO,IAAIiF,GAAQriC,KAAK+hC,MAAO3E,EACvC,CAQI,OAAA0E,CAAQzgC,EAAMs6B,GACV,MAAM2G,EAAMtiC,KAAKoiC,QAAQ,CACrBG,OAAQ,OACRlhC,KAAMA,IAEVihC,EAAI5G,GAAG,UAAWC,GAClB2G,EAAI5G,GAAG,SAAS,CAAC8G,EAAWnE,KACxBr+B,KAAK2+B,QAAQ,iBAAkB6D,EAAWnE,EAAQ,GAE9D,CAMI,MAAAwD,GACI,MAAMS,EAAMtiC,KAAKoiC,UACjBE,EAAI5G,GAAG,OAAQ17B,KAAKq/B,OAAOnsB,KAAKlT,OAChCsiC,EAAI5G,GAAG,SAAS,CAAC8G,EAAWnE,KACxBr+B,KAAK2+B,QAAQ,iBAAkB6D,EAAWnE,EAAQ,IAEtDr+B,KAAKyiC,QAAUH,CACvB,EAEO,MAAMD,WAAgB7G,GAOzB,WAAAv1B,CAAY87B,EAAK3E,GACbkB,QACAnB,GAAsBn9B,KAAMo9B,GAC5Bp9B,KAAKo9B,KAAOA,EACZp9B,KAAKuiC,OAASnF,EAAKmF,QAAU,MAC7BviC,KAAK+hC,IAAMA,EACX/hC,KAAKqB,KAAOsD,YAAcy4B,EAAK/7B,KAAO+7B,EAAK/7B,KAAO,KAClDrB,KAAKo1B,QACb,CAMI,MAAAA,GACI,IAAIppB,EACJ,MAAMoxB,EAAOR,GAAK58B,KAAKo9B,KAAM,QAAS,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,aACjHA,EAAK0D,UAAY9gC,KAAKo9B,KAAKoE,GAC3B,MAAMN,EAAOlhC,KAAKkhC,IAAM,IAAIR,GAAetD,GAC3C,IACI8D,EAAItC,KAAK5+B,KAAKuiC,OAAQviC,KAAK+hC,IAAK,MAChC,IACI,GAAI/hC,KAAKo9B,KAAKsF,aAAc,CACxBxB,EAAIyB,uBAAyBzB,EAAIyB,sBAAsB,MACvD,IAAK,IAAI9gB,KAAK7hB,KAAKo9B,KAAKsF,aAAc,CAClC,GAAI1iC,KAAKo9B,KAAKsF,aAAat2B,eAAeyV,GAAI,CAC1Cqf,EAAI0B,iBAAiB/gB,EAAG7hB,KAAKo9B,KAAKsF,aAAa7gB,GAC3E,CACA,CACA,CACA,CACY,MAAOhhB,GAAG,CACV,GAAI,SAAWb,KAAKuiC,OAAQ,CACxB,IACIrB,EAAI0B,iBAAiB,eAAgB,2BACzD,CACgB,MAAO/hC,GAAG,CAC1B,CACY,IACIqgC,EAAI0B,iBAAiB,SAAU,MAC/C,CACY,MAAO/hC,GAAG,EACTmL,EAAKhM,KAAKo9B,KAAKuE,aAAe,MAAQ31B,SAAY,OAAS,EAAIA,EAAG62B,WAAW3B,GAE9E,GAAI,oBAAqBA,EAAK,CAC1BA,EAAIQ,gBAAkB1hC,KAAKo9B,KAAKsE,eAChD,CACY,GAAI1hC,KAAKo9B,KAAK0F,eAAgB,CAC1B5B,EAAI6B,QAAU/iC,KAAKo9B,KAAK0F,cACxC,CACY5B,EAAI8B,mBAAqB,KACrB,IAAIh3B,EACJ,GAAIk1B,EAAIrC,aAAe,EAAG,EACrB7yB,EAAKhM,KAAKo9B,KAAKuE,aAAe,MAAQ31B,SAAY,OAAS,EAAIA,EAAGi3B,aAAa/B,EACpG,CACgB,GAAI,IAAMA,EAAIrC,WACV,OACJ,GAAI,MAAQqC,EAAIvqB,QAAU,OAASuqB,EAAIvqB,OAAQ,CAC3C3W,KAAKkjC,QACzB,KACqB,CAGDljC,KAAKs9B,cAAa,KACdt9B,KAAK2+B,eAAeuC,EAAIvqB,SAAW,SAAWuqB,EAAIvqB,OAAS,EAAE,GAC9D,EACvB,GAEYuqB,EAAIhC,KAAKl/B,KAAKqB,KAC1B,CACQ,MAAOR,GAIHb,KAAKs9B,cAAa,KACdt9B,KAAK2+B,QAAQ99B,EAAE,GAChB,GACH,MACZ,CACQ,UAAWuI,WAAa,YAAa,CACjCpJ,KAAKS,MAAQ4hC,GAAQc,gBACrBd,GAAQe,SAASpjC,KAAKS,OAAST,IAC3C,CACA,CAMI,OAAA2+B,CAAQgC,GACJ3gC,KAAKs8B,aAAa,QAASqE,EAAK3gC,KAAKkhC,KACrClhC,KAAKqjC,QAAQ,KACrB,CAMI,OAAAA,CAAQC,GACJ,GAAI,qBAAuBtjC,KAAKkhC,KAAO,OAASlhC,KAAKkhC,IAAK,CACtD,MACZ,CACQlhC,KAAKkhC,IAAI8B,mBAAqBhC,GAC9B,GAAIsC,EAAW,CACX,IACItjC,KAAKkhC,IAAIqC,OACzB,CACY,MAAO1iC,GAAG,CACtB,CACQ,UAAWuI,WAAa,YAAa,QAC1Bi5B,GAAQe,SAASpjC,KAAKS,MACzC,CACQT,KAAKkhC,IAAM,IACnB,CAMI,MAAAgC,GACI,MAAM7hC,EAAOrB,KAAKkhC,IAAIsC,aACtB,GAAIniC,IAAS,KAAM,CACfrB,KAAKs8B,aAAa,OAAQj7B,GAC1BrB,KAAKs8B,aAAa,WAClBt8B,KAAKqjC,SACjB,CACA,CAMI,KAAAE,GACIvjC,KAAKqjC,SACb,EAEAhB,GAAQc,cAAgB,EACxBd,GAAQe,SAAW,GAMnB,UAAWh6B,WAAa,YAAa,CAEjC,UAAWq6B,cAAgB,WAAY,CAEnCA,YAAY,WAAYC,GAChC,MACS,UAAWr6B,mBAAqB,WAAY,CAC7C,MAAMs6B,EAAmB,eAAgB3G,GAAa,WAAa,SACnE3zB,iBAAiBs6B,EAAkBD,GAAe,MAC1D,CACA,CACA,SAASA,KACL,IAAK,IAAI7hB,KAAKwgB,GAAQe,SAAU,CAC5B,GAAIf,GAAQe,SAASh3B,eAAeyV,GAAI,CACpCwgB,GAAQe,SAASvhB,GAAG0hB,OAChC,CACA,CACA,CCpYO,MAAMK,GAAW,MACpB,MAAMC,SAA4BC,UAAY,mBAAqBA,QAAQC,UAAY,WACvF,GAAIF,EAAoB,CACpB,OAAQzH,GAAO0H,QAAQC,UAAU9M,KAAKmF,EAC9C,KACS,CACD,MAAO,CAACA,EAAIkB,IAAiBA,EAAalB,EAAI,EACtD,CACC,EARuB,GASjB,MAAM4H,GAAYhH,GAAWgH,WAAahH,GAAWiH,aAErD,MAAMC,GAAoB,cCNjC,MAAMC,UAAuBC,YAAc,oBAChCA,UAAUC,UAAY,UAC7BD,UAAUC,QAAQ/Y,gBAAkB,cACjC,MAAMgZ,WAAW/F,GAOpB,WAAAt4B,CAAYm3B,GACRkB,MAAMlB,GACNp9B,KAAKi2B,gBAAkBmH,EAAKqE,WACpC,CACI,QAAI//B,GACA,MAAO,WACf,CACI,MAAAo9B,GACI,IAAK9+B,KAAKukC,QAAS,CAEf,MACZ,CACQ,MAAMxC,EAAM/hC,KAAK+hC,MACjB,MAAMyC,EAAYxkC,KAAKo9B,KAAKoH,UAE5B,MAAMpH,EAAO+G,GACP,GACAvH,GAAK58B,KAAKo9B,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,uBACpM,GAAIp9B,KAAKo9B,KAAKsF,aAAc,CACxBtF,EAAKqH,QAAUzkC,KAAKo9B,KAAKsF,YACrC,CACQ,IACI1iC,KAAK0kC,IACyBP,GACpBK,EACI,IAAIR,GAAUjC,EAAKyC,GACnB,IAAIR,GAAUjC,GAClB,IAAIiC,GAAUjC,EAAKyC,EAAWpH,EACpD,CACQ,MAAOuD,GACH,OAAO3gC,KAAKs8B,aAAa,QAASqE,EAC9C,CACQ3gC,KAAK0kC,GAAGrM,WAAar4B,KAAK0+B,OAAOrG,WACjCr4B,KAAK2kC,mBACb,CAMI,iBAAAA,GACI3kC,KAAK0kC,GAAGE,OAAS,KACb,GAAI5kC,KAAKo9B,KAAKyH,UAAW,CACrB7kC,KAAK0kC,GAAGI,QAAQC,OAChC,CACY/kC,KAAKo/B,QAAQ,EAEjBp/B,KAAK0kC,GAAGM,QAAWC,GAAejlC,KAAKi/B,QAAQ,CAC3C/1B,YAAa,8BACbm1B,QAAS4G,IAEbjlC,KAAK0kC,GAAGQ,UAAajgB,GAAOjlB,KAAKq/B,OAAOpa,EAAG5jB,MAC3CrB,KAAK0kC,GAAGS,QAAWtkC,GAAMb,KAAK2+B,QAAQ,kBAAmB99B,EACjE,CACI,KAAAs+B,CAAMnG,GACFh5B,KAAKw+B,SAAW,MAGhB,IAAK,IAAI3c,EAAI,EAAGA,EAAImX,EAAQvrB,OAAQoU,IAAK,CACrC,MAAMkV,EAASiC,EAAQnX,GACvB,MAAMujB,EAAavjB,IAAMmX,EAAQvrB,OAAS,EAC1CuoB,GAAae,EAAQ/2B,KAAKi2B,gBAAiB50B,IAmBvC,IAC+B,CAEvBrB,KAAK0kC,GAAGxF,KAAK79B,EACrC,CAIA,CACgB,MAAOR,GACvB,CACgB,GAAIukC,EAAY,CAGZxB,IAAS,KACL5jC,KAAKw+B,SAAW,KAChBx+B,KAAKs8B,aAAa,QAAQ,GAC3Bt8B,KAAKs9B,aAC5B,IAEA,CACA,CACI,OAAA0B,GACI,UAAWh/B,KAAK0kC,KAAO,YAAa,CAChC1kC,KAAK0kC,GAAG3F,QACR/+B,KAAK0kC,GAAK,IACtB,CACA,CAMI,GAAA3C,GACI,MAAMpC,EAAS3/B,KAAKo9B,KAAK8C,OAAS,MAAQ,KAC1C,MAAMzB,EAAQz+B,KAAKy+B,OAAS,GAE5B,GAAIz+B,KAAKo9B,KAAK4E,kBAAmB,CAC7BvD,EAAMz+B,KAAKo9B,KAAK6E,gBAAkBzB,IAC9C,CAEQ,IAAKxgC,KAAKi2B,eAAgB,CACtBwI,EAAM0D,IAAM,CACxB,CACQ,OAAOniC,KAAK0/B,UAAUC,EAAQlB,EACtC,CAOI,KAAA8F,GACI,QAASP,EACjB,ECnJO,MAAMqB,WAAW9G,GACpB,QAAI78B,GACA,MAAO,cACf,CACI,MAAAo9B,GAEI,UAAWwG,eAAiB,WAAY,CACpC,MACZ,CAEQtlC,KAAKulC,UAAY,IAAID,aAAatlC,KAAK0/B,UAAU,SAAU1/B,KAAKo9B,KAAKoI,iBAAiBxlC,KAAK0B,OAC3F1B,KAAKulC,UAAUE,OACVxO,MAAK,KACNj3B,KAAKi/B,SAAS,IAEbyG,OAAO/E,IACR3gC,KAAK2+B,QAAQ,qBAAsBgC,EAAI,IAG3C3gC,KAAKulC,UAAUI,MAAM1O,MAAK,KACtBj3B,KAAKulC,UAAUK,4BAA4B3O,MAAM4O,IAC7C,MAAMC,EAAgBlL,GAA0BuF,OAAO4F,iBAAkB/lC,KAAK0+B,OAAOrG,YACrF,MAAM2N,EAASH,EAAOI,SAASC,YAAYJ,GAAeK,YAC1D,MAAMC,EAAgB9M,KACtB8M,EAAcH,SAASI,OAAOR,EAAOrH,UACrCx+B,KAAKsmC,OAASF,EAAc5H,SAAS+H,YACrC,MAAMC,EAAO,KACTR,EACKQ,OACAvP,MAAK,EAAGwP,OAAMllC,YACf,GAAIklC,EAAM,CACN,MAC5B,CACwBzmC,KAAKs/B,SAAS/9B,GACdilC,GAAM,IAELd,OAAO/E,IAAD,GACT,EAEN6F,IACA,MAAMzP,EAAS,CAAEn0B,KAAM,QACvB,GAAI5C,KAAKy+B,MAAMyD,IAAK,CAChBnL,EAAO11B,KAAO,WAAWrB,KAAKy+B,MAAMyD,OACxD,CACgBliC,KAAKsmC,OAAOnH,MAAMpI,GAAQE,MAAK,IAAMj3B,KAAKo/B,UAAS,GACrD,GAEd,CACI,KAAAD,CAAMnG,GACFh5B,KAAKw+B,SAAW,MAChB,IAAK,IAAI3c,EAAI,EAAGA,EAAImX,EAAQvrB,OAAQoU,IAAK,CACrC,MAAMkV,EAASiC,EAAQnX,GACvB,MAAMujB,EAAavjB,IAAMmX,EAAQvrB,OAAS,EAC1CzN,KAAKsmC,OAAOnH,MAAMpI,GAAQE,MAAK,KAC3B,GAAImO,EAAY,CACZxB,IAAS,KACL5jC,KAAKw+B,SAAW,KAChBx+B,KAAKs8B,aAAa,QAAQ,GAC3Bt8B,KAAKs9B,aAC5B,IAEA,CACA,CACI,OAAA0B,GACI,IAAIhzB,GACHA,EAAKhM,KAAKulC,aAAe,MAAQv5B,SAAY,OAAS,EAAIA,EAAG+yB,OACtE,EClEO,MAAM2H,GAAa,CACtBC,UAAWrC,GACXsC,aAAcvB,GACdhE,QAASD,ICab,MAAMyF,GAAK,sPACX,MAAMC,GAAQ,CACV,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UAElI,SAASrgC,GAAMwhB,GAClB,GAAIA,EAAIxa,OAAS,IAAM,CACnB,KAAM,cACd,CACI,MAAM4R,EAAM4I,EAAKwL,EAAIxL,EAAIuD,QAAQ,KAAM3qB,EAAIonB,EAAIuD,QAAQ,KACvD,GAAIiI,IAAM,GAAK5yB,IAAM,EAAG,CACpBonB,EAAMA,EAAIwQ,UAAU,EAAGhF,GAAKxL,EAAIwQ,UAAUhF,EAAG5yB,GAAGyB,QAAQ,KAAM,KAAO2lB,EAAIwQ,UAAU53B,EAAGonB,EAAIxa,OAClG,CACI,IAAIs5B,EAAIF,GAAGG,KAAK/e,GAAO,IAAK8Z,EAAM,GAAIlgB,EAAI,GAC1C,MAAOA,IAAK,CACRkgB,EAAI+E,GAAMjlB,IAAMklB,EAAEllB,IAAM,EAChC,CACI,GAAI4R,IAAM,GAAK5yB,IAAM,EAAG,CACpBkhC,EAAI13B,OAASgV,EACb0iB,EAAIkF,KAAOlF,EAAIkF,KAAKxO,UAAU,EAAGsJ,EAAIkF,KAAKx5B,OAAS,GAAGnL,QAAQ,KAAM,KACpEy/B,EAAImF,UAAYnF,EAAImF,UAAU5kC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9Ey/B,EAAIoF,QAAU,IACtB,CACIpF,EAAIqF,UAAYA,GAAUrF,EAAKA,EAAI,SACnCA,EAAIsF,SAAWA,GAAStF,EAAKA,EAAI,UACjC,OAAOA,CACX,CACA,SAASqF,GAAUtR,EAAKgK,GACpB,MAAMwH,EAAO,WAAYC,EAAQzH,EAAKx9B,QAAQglC,EAAM,KAAKn/B,MAAM,KAC/D,GAAI23B,EAAKnF,MAAM,EAAG,IAAM,KAAOmF,EAAKryB,SAAW,EAAG,CAC9C85B,EAAMriB,OAAO,EAAG,EACxB,CACI,GAAI4a,EAAKnF,OAAO,IAAM,IAAK,CACvB4M,EAAMriB,OAAOqiB,EAAM95B,OAAS,EAAG,EACvC,CACI,OAAO85B,CACX,CACA,SAASF,GAAStF,EAAKtD,GACnB,MAAMp9B,EAAO,GACbo9B,EAAMn8B,QAAQ,6BAA6B,SAAUklC,EAAIC,EAAIC,GACzD,GAAID,EAAI,CACJpmC,EAAKomC,GAAMC,CACvB,CACA,IACI,OAAOrmC,CACX,CCxDO,MAAMsmC,WAAenM,GAOxB,WAAAv1B,CAAY87B,EAAK3E,EAAO,IACpBkB,QACAt+B,KAAKq4B,WAAa6L,GAClBlkC,KAAK4nC,YAAc,GACnB,GAAI7F,GAAO,kBAAoBA,EAAK,CAChC3E,EAAO2E,EACPA,EAAM,IAClB,CACQ,GAAIA,EAAK,CACLA,EAAMt7B,GAAMs7B,GACZ3E,EAAK4C,SAAW+B,EAAIkF,KACpB7J,EAAK8C,OAAS6B,EAAIxG,WAAa,SAAWwG,EAAIxG,WAAa,MAC3D6B,EAAK6C,KAAO8B,EAAI9B,KAChB,GAAI8B,EAAItD,MACJrB,EAAKqB,MAAQsD,EAAItD,KACjC,MACa,GAAIrB,EAAK6J,KAAM,CAChB7J,EAAK4C,SAAWv5B,GAAM22B,EAAK6J,MAAMA,IAC7C,CACQ9J,GAAsBn9B,KAAMo9B,GAC5Bp9B,KAAKkgC,OACD,MAAQ9C,EAAK8C,OACP9C,EAAK8C,cACEoB,WAAa,aAAe,WAAaA,SAAS/F,SACnE,GAAI6B,EAAK4C,WAAa5C,EAAK6C,KAAM,CAE7B7C,EAAK6C,KAAOjgC,KAAKkgC,OAAS,MAAQ,IAC9C,CACQlgC,KAAKggC,SACD5C,EAAK4C,kBACOsB,WAAa,YAAcA,SAAStB,SAAW,aAC/DhgC,KAAKigC,KACD7C,EAAK6C,cACOqB,WAAa,aAAeA,SAASrB,KACvCqB,SAASrB,KACTjgC,KAAKkgC,OACD,MACA,MAClBlgC,KAAK0mC,WAAatJ,EAAKsJ,YAAc,CACjC,UACA,YACA,gBAEJ1mC,KAAK4nC,YAAc,GACnB5nC,KAAK6nC,cAAgB,EACrB7nC,KAAKo9B,KAAOj9B,OAAOC,OAAO,CACtB0/B,KAAM,aACNgI,MAAO,MACPpG,gBAAiB,MACjBqG,QAAS,KACT9F,eAAgB,IAChB+F,gBAAiB,MACjBC,iBAAkB,KAClBC,mBAAoB,KACpBC,kBAAmB,CACfC,UAAW,MAEf5C,iBAAkB,GAClB6C,oBAAqB,OACtBjL,GACHp9B,KAAKo9B,KAAK0C,KACN9/B,KAAKo9B,KAAK0C,KAAKx9B,QAAQ,MAAO,KACzBtC,KAAKo9B,KAAK6K,iBAAmB,IAAM,IAC5C,UAAWjoC,KAAKo9B,KAAKqB,QAAU,SAAU,CACrCz+B,KAAKo9B,KAAKqB,MAAQjH,GAAOx3B,KAAKo9B,KAAKqB,MAC/C,CAEQz+B,KAAKe,GAAK,KACVf,KAAKsoC,SAAW,KAChBtoC,KAAKuoC,aAAe,KACpBvoC,KAAKwoC,YAAc,KAEnBxoC,KAAKyoC,iBAAmB,KACxB,UAAWp/B,mBAAqB,WAAY,CACxC,GAAIrJ,KAAKo9B,KAAKiL,oBAAqB,CAI/BroC,KAAK0oC,0BAA4B,KAC7B,GAAI1oC,KAAKulC,UAAW,CAEhBvlC,KAAKulC,UAAUrJ,qBACfl8B,KAAKulC,UAAUxG,OACvC,GAEgB11B,iBAAiB,eAAgBrJ,KAAK0oC,0BAA2B,MACjF,CACY,GAAI1oC,KAAKggC,WAAa,YAAa,CAC/BhgC,KAAK2oC,qBAAuB,KACxB3oC,KAAKi/B,QAAQ,kBAAmB,CAC5B/1B,YAAa,2BACf,EAENG,iBAAiB,UAAWrJ,KAAK2oC,qBAAsB,MACvE,CACA,CACQ3oC,KAAK4+B,MACb,CAQI,eAAAgK,CAAgBlnC,GACZ,MAAM+8B,EAAQt+B,OAAOC,OAAO,GAAIJ,KAAKo9B,KAAKqB,OAE1CA,EAAMoK,IAAMtN,GAEZkD,EAAM8G,UAAY7jC,EAElB,GAAI1B,KAAKe,GACL09B,EAAMyD,IAAMliC,KAAKe,GACrB,MAAMq8B,EAAOj9B,OAAOC,OAAO,GAAIJ,KAAKo9B,KAAM,CACtCqB,QACAC,OAAQ1+B,KACRggC,SAAUhgC,KAAKggC,SACfE,OAAQlgC,KAAKkgC,OACbD,KAAMjgC,KAAKigC,MACZjgC,KAAKo9B,KAAKoI,iBAAiB9jC,IAC9B,OAAO,IAAIglC,GAAWhlC,GAAM07B,EACpC,CAMI,IAAAwB,GACI,IAAI2G,EACJ,GAAIvlC,KAAKo9B,KAAK4K,iBACVL,GAAOmB,uBACP9oC,KAAK0mC,WAAWlb,QAAQ,gBAAkB,EAAG,CAC7C+Z,EAAY,WACxB,MACa,GAAI,IAAMvlC,KAAK0mC,WAAWj5B,OAAQ,CAEnCzN,KAAKs9B,cAAa,KACdt9B,KAAKs8B,aAAa,QAAS,0BAA0B,GACtD,GACH,MACZ,KACa,CACDiJ,EAAYvlC,KAAK0mC,WAAW,EACxC,CACQ1mC,KAAK6+B,WAAa,UAElB,IACI0G,EAAYvlC,KAAK4oC,gBAAgBrD,EAC7C,CACQ,MAAO1kC,GACHb,KAAK0mC,WAAWjM,QAChBz6B,KAAK4+B,OACL,MACZ,CACQ2G,EAAU3G,OACV5+B,KAAK+oC,aAAaxD,EAC1B,CAMI,YAAAwD,CAAaxD,GACT,GAAIvlC,KAAKulC,UAAW,CAChBvlC,KAAKulC,UAAUrJ,oBAC3B,CAEQl8B,KAAKulC,UAAYA,EAEjBA,EACK7J,GAAG,QAAS17B,KAAKgpC,QAAQ91B,KAAKlT,OAC9B07B,GAAG,SAAU17B,KAAKs/B,SAASpsB,KAAKlT,OAChC07B,GAAG,QAAS17B,KAAK2+B,QAAQzrB,KAAKlT,OAC9B07B,GAAG,SAAU0C,GAAWp+B,KAAKi/B,QAAQ,kBAAmBb,IACrE,CAOI,KAAA6K,CAAMvnC,GACF,IAAI6jC,EAAYvlC,KAAK4oC,gBAAgBlnC,GACrC,IAAIwnC,EAAS,MACbvB,GAAOmB,sBAAwB,MAC/B,MAAMK,EAAkB,KACpB,GAAID,EACA,OACJ3D,EAAUrG,KAAK,CAAC,CAAEt8B,KAAM,OAAQvB,KAAM,WACtCkkC,EAAU1J,KAAK,UAAWuN,IACtB,GAAIF,EACA,OACJ,GAAI,SAAWE,EAAIxmC,MAAQ,UAAYwmC,EAAI/nC,KAAM,CAC7CrB,KAAKqpC,UAAY,KACjBrpC,KAAKs8B,aAAa,YAAaiJ,GAC/B,IAAKA,EACD,OACJoC,GAAOmB,sBAAwB,cAAgBvD,EAAU7jC,KACzD1B,KAAKulC,UAAU/F,OAAM,KACjB,GAAI0J,EACA,OACJ,GAAI,WAAalpC,KAAK6+B,WAClB,OACJwE,IACArjC,KAAK+oC,aAAaxD,GAClBA,EAAUrG,KAAK,CAAC,CAAEt8B,KAAM,aACxB5C,KAAKs8B,aAAa,UAAWiJ,GAC7BA,EAAY,KACZvlC,KAAKqpC,UAAY,MACjBrpC,KAAKspC,OAAO,GAEpC,KACqB,CACD,MAAM3I,EAAM,IAAI15B,MAAM,eAEtB05B,EAAI4E,UAAYA,EAAU7jC,KAC1B1B,KAAKs8B,aAAa,eAAgBqE,EACtD,IACc,EAEN,SAAS4I,IACL,GAAIL,EACA,OAEJA,EAAS,KACT7F,IACAkC,EAAUxG,QACVwG,EAAY,IACxB,CAEQ,MAAMJ,EAAWxE,IACb,MAAMr8B,EAAQ,IAAI2C,MAAM,gBAAkB05B,GAE1Cr8B,EAAMihC,UAAYA,EAAU7jC,KAC5B6nC,IACAvpC,KAAKs8B,aAAa,eAAgBh4B,EAAM,EAE5C,SAASklC,IACLrE,EAAQ,mBACpB,CAEQ,SAASH,IACLG,EAAQ,gBACpB,CAEQ,SAASsE,EAAUC,GACf,GAAInE,GAAamE,EAAGhoC,OAAS6jC,EAAU7jC,KAAM,CACzC6nC,GAChB,CACA,CAEQ,MAAMlG,EAAU,KACZkC,EAAUtJ,eAAe,OAAQkN,GACjC5D,EAAUtJ,eAAe,QAASkJ,GAClCI,EAAUtJ,eAAe,QAASuN,GAClCxpC,KAAK87B,IAAI,QAASkJ,GAClBhlC,KAAK87B,IAAI,YAAa2N,EAAU,EAEpClE,EAAU1J,KAAK,OAAQsN,GACvB5D,EAAU1J,KAAK,QAASsJ,GACxBI,EAAU1J,KAAK,QAAS2N,GACxBxpC,KAAK67B,KAAK,QAASmJ,GACnBhlC,KAAK67B,KAAK,YAAa4N,GACvB,GAAIzpC,KAAKsoC,SAAS9c,QAAQ,mBAAqB,GAC3C9pB,IAAS,eAAgB,CAEzB1B,KAAKs9B,cAAa,KACd,IAAK4L,EAAQ,CACT3D,EAAU3G,MAC9B,IACe,IACf,KACa,CACD2G,EAAU3G,MACtB,CACA,CAMI,MAAAQ,GACIp/B,KAAK6+B,WAAa,OAClB8I,GAAOmB,sBAAwB,cAAgB9oC,KAAKulC,UAAU7jC,KAC9D1B,KAAKs8B,aAAa,QAClBt8B,KAAKspC,QAGL,GAAI,SAAWtpC,KAAK6+B,YAAc7+B,KAAKo9B,KAAK2K,QAAS,CACjD,IAAIlmB,EAAI,EACR,MAAM+b,EAAI59B,KAAKsoC,SAAS76B,OACxB,KAAOoU,EAAI+b,EAAG/b,IAAK,CACf7hB,KAAKipC,MAAMjpC,KAAKsoC,SAASzmB,GACzC,CACA,CACA,CAMI,QAAAyd,CAASvI,GACL,GAAI,YAAc/2B,KAAK6+B,YACnB,SAAW7+B,KAAK6+B,YAChB,YAAc7+B,KAAK6+B,WAAY,CAC/B7+B,KAAKs8B,aAAa,SAAUvF,GAE5B/2B,KAAKs8B,aAAa,aAClBt8B,KAAK2pC,mBACL,OAAQ5S,EAAOn0B,MACX,IAAK,OACD5C,KAAK4pC,YAAYpjC,KAAKC,MAAMswB,EAAO11B,OACnC,MACJ,IAAK,OACDrB,KAAK6pC,WAAW,QAChB7pC,KAAKs8B,aAAa,QAClBt8B,KAAKs8B,aAAa,QAClB,MACJ,IAAK,QACD,MAAMqE,EAAM,IAAI15B,MAAM,gBAEtB05B,EAAI13B,KAAO8tB,EAAO11B,KAClBrB,KAAK2+B,QAAQgC,GACb,MACJ,IAAK,UACD3gC,KAAKs8B,aAAa,OAAQvF,EAAO11B,MACjCrB,KAAKs8B,aAAa,UAAWvF,EAAO11B,MACpC,MAEpB,CAGA,CAOI,WAAAuoC,CAAYvoC,GACRrB,KAAKs8B,aAAa,YAAaj7B,GAC/BrB,KAAKe,GAAKM,EAAK6gC,IACfliC,KAAKulC,UAAU9G,MAAMyD,IAAM7gC,EAAK6gC,IAChCliC,KAAKsoC,SAAWtoC,KAAK8pC,eAAezoC,EAAKinC,UACzCtoC,KAAKuoC,aAAelnC,EAAKknC,aACzBvoC,KAAKwoC,YAAcnnC,EAAKmnC,YACxBxoC,KAAK66B,WAAax5B,EAAKw5B,WACvB76B,KAAKo/B,SAEL,GAAI,WAAap/B,KAAK6+B,WAClB,OACJ7+B,KAAK2pC,kBACb,CAMI,gBAAAA,GACI3pC,KAAKu9B,eAAev9B,KAAKyoC,kBACzBzoC,KAAKyoC,iBAAmBzoC,KAAKs9B,cAAa,KACtCt9B,KAAKi/B,QAAQ,eAAe,GAC7Bj/B,KAAKuoC,aAAevoC,KAAKwoC,aAC5B,GAAIxoC,KAAKo9B,KAAKyH,UAAW,CACrB7kC,KAAKyoC,iBAAiB1D,OAClC,CACA,CAMI,OAAAiE,GACIhpC,KAAK4nC,YAAY1iB,OAAO,EAAGllB,KAAK6nC,eAIhC7nC,KAAK6nC,cAAgB,EACrB,GAAI,IAAM7nC,KAAK4nC,YAAYn6B,OAAQ,CAC/BzN,KAAKs8B,aAAa,QAC9B,KACa,CACDt8B,KAAKspC,OACjB,CACA,CAMI,KAAAA,GACI,GAAI,WAAatpC,KAAK6+B,YAClB7+B,KAAKulC,UAAU/G,WACdx+B,KAAKqpC,WACNrpC,KAAK4nC,YAAYn6B,OAAQ,CACzB,MAAMurB,EAAUh5B,KAAK+pC,qBACrB/pC,KAAKulC,UAAUrG,KAAKlG,GAGpBh5B,KAAK6nC,cAAgB7O,EAAQvrB,OAC7BzN,KAAKs8B,aAAa,QAC9B,CACA,CAOI,kBAAAyN,GACI,MAAMC,EAAyBhqC,KAAK66B,YAChC76B,KAAKulC,UAAU7jC,OAAS,WACxB1B,KAAK4nC,YAAYn6B,OAAS,EAC9B,IAAKu8B,EAAwB,CACzB,OAAOhqC,KAAK4nC,WACxB,CACQ,IAAIqC,EAAc,EAClB,IAAK,IAAIpoB,EAAI,EAAGA,EAAI7hB,KAAK4nC,YAAYn6B,OAAQoU,IAAK,CAC9C,MAAMxgB,EAAOrB,KAAK4nC,YAAY/lB,GAAGxgB,KACjC,GAAIA,EAAM,CACN4oC,GAAerT,GAAWv1B,EAC1C,CACY,GAAIwgB,EAAI,GAAKooB,EAAcjqC,KAAK66B,WAAY,CACxC,OAAO76B,KAAK4nC,YAAYjN,MAAM,EAAG9Y,EACjD,CACYooB,GAAe,CAC3B,CACQ,OAAOjqC,KAAK4nC,WACpB,CASI,KAAAzI,CAAMiK,EAAKjV,EAASwH,GAChB37B,KAAK6pC,WAAW,UAAWT,EAAKjV,EAASwH,GACzC,OAAO37B,IACf,CACI,IAAAk/B,CAAKkK,EAAKjV,EAASwH,GACf37B,KAAK6pC,WAAW,UAAWT,EAAKjV,EAASwH,GACzC,OAAO37B,IACf,CAUI,UAAA6pC,CAAWjnC,EAAMvB,EAAM8yB,EAASwH,GAC5B,GAAI,oBAAsBt6B,EAAM,CAC5Bs6B,EAAKt6B,EACLA,EAAOsD,SACnB,CACQ,GAAI,oBAAsBwvB,EAAS,CAC/BwH,EAAKxH,EACLA,EAAU,IACtB,CACQ,GAAI,YAAcn0B,KAAK6+B,YAAc,WAAa7+B,KAAK6+B,WAAY,CAC/D,MACZ,CACQ1K,EAAUA,GAAW,GACrBA,EAAQ+V,SAAW,QAAU/V,EAAQ+V,SACrC,MAAMnT,EAAS,CACXn0B,KAAMA,EACNvB,KAAMA,EACN8yB,QAASA,GAEbn0B,KAAKs8B,aAAa,eAAgBvF,GAClC/2B,KAAK4nC,YAAY7hB,KAAKgR,GACtB,GAAI4E,EACA37B,KAAK67B,KAAK,QAASF,GACvB37B,KAAKspC,OACb,CAII,KAAAvK,GACI,MAAMA,EAAQ,KACV/+B,KAAKi/B,QAAQ,gBACbj/B,KAAKulC,UAAUxG,OAAO,EAE1B,MAAMoL,EAAkB,KACpBnqC,KAAK87B,IAAI,UAAWqO,GACpBnqC,KAAK87B,IAAI,eAAgBqO,GACzBpL,GAAO,EAEX,MAAMqL,EAAiB,KAEnBpqC,KAAK67B,KAAK,UAAWsO,GACrBnqC,KAAK67B,KAAK,eAAgBsO,EAAgB,EAE9C,GAAI,YAAcnqC,KAAK6+B,YAAc,SAAW7+B,KAAK6+B,WAAY,CAC7D7+B,KAAK6+B,WAAa,UAClB,GAAI7+B,KAAK4nC,YAAYn6B,OAAQ,CACzBzN,KAAK67B,KAAK,SAAS,KACf,GAAI77B,KAAKqpC,UAAW,CAChBe,GACxB,KACyB,CACDrL,GACxB,IAEA,MACiB,GAAI/+B,KAAKqpC,UAAW,CACrBe,GAChB,KACiB,CACDrL,GAChB,CACA,CACQ,OAAO/+B,IACf,CAMI,OAAA2+B,CAAQgC,GACJgH,GAAOmB,sBAAwB,MAC/B9oC,KAAKs8B,aAAa,QAASqE,GAC3B3gC,KAAKi/B,QAAQ,kBAAmB0B,EACxC,CAMI,OAAA1B,CAAQb,EAAQl1B,GACZ,GAAI,YAAclJ,KAAK6+B,YACnB,SAAW7+B,KAAK6+B,YAChB,YAAc7+B,KAAK6+B,WAAY,CAE/B7+B,KAAKu9B,eAAev9B,KAAKyoC,kBAEzBzoC,KAAKulC,UAAUrJ,mBAAmB,SAElCl8B,KAAKulC,UAAUxG,QAEf/+B,KAAKulC,UAAUrJ,qBACf,UAAW1yB,sBAAwB,WAAY,CAC3CA,oBAAoB,eAAgBxJ,KAAK0oC,0BAA2B,OACpEl/B,oBAAoB,UAAWxJ,KAAK2oC,qBAAsB,MAC1E,CAEY3oC,KAAK6+B,WAAa,SAElB7+B,KAAKe,GAAK,KAEVf,KAAKs8B,aAAa,QAAS8B,EAAQl1B,GAGnClJ,KAAK4nC,YAAc,GACnB5nC,KAAK6nC,cAAgB,CACjC,CACA,CAOI,cAAAiC,CAAexB,GACX,MAAM+B,EAAmB,GACzB,IAAIxoB,EAAI,EACR,MAAM6Y,EAAI4N,EAAS76B,OACnB,KAAOoU,EAAI6Y,EAAG7Y,IAAK,CACf,IAAK7hB,KAAK0mC,WAAWlb,QAAQ8c,EAASzmB,IAClCwoB,EAAiBtkB,KAAKuiB,EAASzmB,GAC/C,CACQ,OAAOwoB,CACf,EAEA1C,GAAOpM,SAAWA,GCvkBX,SAAS+O,GAAIvI,EAAKjC,EAAO,GAAIyK,GAChC,IAAIzU,EAAMiM,EAEVwI,EAAMA,UAAejJ,WAAa,aAAeA,SACjD,GAAI,MAAQS,EACRA,EAAMwI,EAAIhP,SAAW,KAAOgP,EAAItD,KAEpC,UAAWlF,IAAQ,SAAU,CACzB,GAAI,MAAQA,EAAIxJ,OAAO,GAAI,CACvB,GAAI,MAAQwJ,EAAIxJ,OAAO,GAAI,CACvBwJ,EAAMwI,EAAIhP,SAAWwG,CACrC,KACiB,CACDA,EAAMwI,EAAItD,KAAOlF,CACjC,CACA,CACQ,IAAK,sBAAsBzgB,KAAKygB,GAAM,CAClC,GAAI,qBAAuBwI,EAAK,CAC5BxI,EAAMwI,EAAIhP,SAAW,KAAOwG,CAC5C,KACiB,CACDA,EAAM,WAAaA,CACnC,CACA,CAEQjM,EAAMrvB,GAAMs7B,EACpB,CAEI,IAAKjM,EAAImK,KAAM,CACX,GAAI,cAAc3e,KAAKwU,EAAIyF,UAAW,CAClCzF,EAAImK,KAAO,IACvB,MACa,GAAI,eAAe3e,KAAKwU,EAAIyF,UAAW,CACxCzF,EAAImK,KAAO,KACvB,CACA,CACInK,EAAIgK,KAAOhK,EAAIgK,MAAQ,IACvB,MAAM0K,EAAO1U,EAAImR,KAAKzb,QAAQ,QAAU,EACxC,MAAMyb,EAAOuD,EAAO,IAAM1U,EAAImR,KAAO,IAAMnR,EAAImR,KAE/CnR,EAAI/0B,GAAK+0B,EAAIyF,SAAW,MAAQ0L,EAAO,IAAMnR,EAAImK,KAAOH,EAExDhK,EAAI2U,KACA3U,EAAIyF,SACA,MACA0L,GACCsD,GAAOA,EAAItK,OAASnK,EAAImK,KAAO,GAAK,IAAMnK,EAAImK,MACvD,OAAOnK,CACX,CC1DA,MAAMH,UAA+BC,cAAgB,WACrD,MAAMC,GAAUC,UACEF,YAAYC,SAAW,WAC/BD,YAAYC,OAAOC,GACnBA,EAAIC,kBAAkBH,YAEhC,MAAMpnB,GAAWrO,OAAOs1B,UAAUjnB,SAClC,MAAM+mB,UAAwBC,OAAS,mBAC3BA,OAAS,aACbhnB,GAASknB,KAAKF,QAAU,2BAChC,MAAMkV,UAAwBC,OAAS,mBAC3BA,OAAS,aACbn8B,GAASknB,KAAKiV,QAAU,2BAMzB,SAAS1P,GAASnF,GACrB,OAASH,KAA0BG,aAAeF,aAAeC,GAAOC,KACnEP,IAAkBO,aAAeN,MACjCkV,IAAkB5U,aAAe6U,IAC1C,CACO,SAASC,GAAU9U,EAAK+U,GAC3B,IAAK/U,UAAcA,IAAQ,SAAU,CACjC,OAAO,KACf,CACI,GAAIpU,MAAMopB,QAAQhV,GAAM,CACpB,IAAK,IAAIjU,EAAI,EAAG+b,EAAI9H,EAAIroB,OAAQoU,EAAI+b,EAAG/b,IAAK,CACxC,GAAI+oB,GAAU9U,EAAIjU,IAAK,CACnB,OAAO,IACvB,CACA,CACQ,OAAO,KACf,CACI,GAAIoZ,GAASnF,GAAM,CACf,OAAO,IACf,CACI,GAAIA,EAAI+U,eACG/U,EAAI+U,SAAW,YACtB7O,UAAUvuB,SAAW,EAAG,CACxB,OAAOm9B,GAAU9U,EAAI+U,SAAU,KACvC,CACI,IAAK,MAAM1pC,KAAO20B,EAAK,CACnB,GAAI31B,OAAOs1B,UAAUrpB,eAAespB,KAAKI,EAAK30B,IAAQypC,GAAU9U,EAAI30B,IAAO,CACvE,OAAO,IACnB,CACA,CACI,OAAO,KACX,CCzCO,SAAS4pC,GAAkBhU,GAC9B,MAAMiU,EAAU,GAChB,MAAMC,EAAalU,EAAO11B,KAC1B,MAAM6pC,EAAOnU,EACbmU,EAAK7pC,KAAO8pC,GAAmBF,EAAYD,GAC3CE,EAAKE,YAAcJ,EAAQv9B,OAC3B,MAAO,CAAEspB,OAAQmU,EAAMF,QAASA,EACpC,CACA,SAASG,GAAmB9pC,EAAM2pC,GAC9B,IAAK3pC,EACD,OAAOA,EACX,GAAI45B,GAAS55B,GAAO,CAChB,MAAMwB,EAAc,CAAEwoC,aAAc,KAAMrlB,IAAKglB,EAAQv9B,QACvDu9B,EAAQjlB,KAAK1kB,GACb,OAAOwB,CACf,MACS,GAAI6e,MAAMopB,QAAQzpC,GAAO,CAC1B,MAAMiqC,EAAU,IAAI5pB,MAAMrgB,EAAKoM,QAC/B,IAAK,IAAIoU,EAAI,EAAGA,EAAIxgB,EAAKoM,OAAQoU,IAAK,CAClCypB,EAAQzpB,GAAKspB,GAAmB9pC,EAAKwgB,GAAImpB,EACrD,CACQ,OAAOM,CACf,MACS,UAAWjqC,IAAS,YAAcA,aAAgB0D,MAAO,CAC1D,MAAMumC,EAAU,GAChB,IAAK,MAAMnqC,KAAOE,EAAM,CACpB,GAAIlB,OAAOs1B,UAAUrpB,eAAespB,KAAKr0B,EAAMF,GAAM,CACjDmqC,EAAQnqC,GAAOgqC,GAAmB9pC,EAAKF,GAAM6pC,EAC7D,CACA,CACQ,OAAOM,CACf,CACI,OAAOjqC,CACX,CASO,SAASkqC,GAAkBxU,EAAQiU,GACtCjU,EAAO11B,KAAOmqC,GAAmBzU,EAAO11B,KAAM2pC,UACvCjU,EAAOqU,YACd,OAAOrU,CACX,CACA,SAASyU,GAAmBnqC,EAAM2pC,GAC9B,IAAK3pC,EACD,OAAOA,EACX,GAAIA,GAAQA,EAAKgqC,eAAiB,KAAM,CACpC,MAAMI,SAAsBpqC,EAAK2kB,MAAQ,UACrC3kB,EAAK2kB,KAAO,GACZ3kB,EAAK2kB,IAAMglB,EAAQv9B,OACvB,GAAIg+B,EAAc,CACd,OAAOT,EAAQ3pC,EAAK2kB,IAChC,KACa,CACD,MAAM,IAAI/e,MAAM,sBAC5B,CACA,MACS,GAAIya,MAAMopB,QAAQzpC,GAAO,CAC1B,IAAK,IAAIwgB,EAAI,EAAGA,EAAIxgB,EAAKoM,OAAQoU,IAAK,CAClCxgB,EAAKwgB,GAAK2pB,GAAmBnqC,EAAKwgB,GAAImpB,EAClD,CACA,MACS,UAAW3pC,IAAS,SAAU,CAC/B,IAAK,MAAMF,KAAOE,EAAM,CACpB,GAAIlB,OAAOs1B,UAAUrpB,eAAespB,KAAKr0B,EAAMF,GAAM,CACjDE,EAAKF,GAAOqqC,GAAmBnqC,EAAKF,GAAM6pC,EAC1D,CACA,CACA,CACI,OAAO3pC,CACX,CC5EA,MAAMqqC,GAAkB,CACpB,UACA,gBACA,aACA,gBACA,cACA,kBAOG,MAAMnQ,GAAW,EACjB,IAAIoQ,IACX,SAAWA,GACPA,EAAWA,EAAW,WAAa,GAAK,UACxCA,EAAWA,EAAW,cAAgB,GAAK,aAC3CA,EAAWA,EAAW,SAAW,GAAK,QACtCA,EAAWA,EAAW,OAAS,GAAK,MACpCA,EAAWA,EAAW,iBAAmB,GAAK,gBAC9CA,EAAWA,EAAW,gBAAkB,GAAK,eAC7CA,EAAWA,EAAW,cAAgB,GAAK,YAC9C,EARD,CAQGA,KAAeA,GAAa,KAIxB,MAAMC,GAMT,WAAA3lC,CAAY4lC,GACR7rC,KAAK6rC,SAAWA,CACxB,CAOI,MAAAzU,CAAOtB,GACH,GAAIA,EAAIlzB,OAAS+oC,GAAWG,OAAShW,EAAIlzB,OAAS+oC,GAAWI,IAAK,CAC9D,GAAInB,GAAU9U,GAAM,CAChB,OAAO91B,KAAKgsC,eAAe,CACvBppC,KAAMkzB,EAAIlzB,OAAS+oC,GAAWG,MACxBH,GAAWM,aACXN,GAAWO,WACjBC,IAAKrW,EAAIqW,IACT9qC,KAAMy0B,EAAIz0B,KACVN,GAAI+0B,EAAI/0B,IAE5B,CACA,CACQ,MAAO,CAACf,KAAKosC,eAAetW,GACpC,CAII,cAAAsW,CAAetW,GAEX,IAAI7N,EAAM,GAAK6N,EAAIlzB,KAEnB,GAAIkzB,EAAIlzB,OAAS+oC,GAAWM,cACxBnW,EAAIlzB,OAAS+oC,GAAWO,WAAY,CACpCjkB,GAAO6N,EAAIsV,YAAc,GACrC,CAGQ,GAAItV,EAAIqW,KAAO,MAAQrW,EAAIqW,IAAK,CAC5BlkB,GAAO6N,EAAIqW,IAAM,GAC7B,CAEQ,GAAI,MAAQrW,EAAI/0B,GAAI,CAChBknB,GAAO6N,EAAI/0B,EACvB,CAEQ,GAAI,MAAQ+0B,EAAIz0B,KAAM,CAClB4mB,GAAOzhB,KAAK6lC,UAAUvW,EAAIz0B,KAAMrB,KAAK6rC,SACjD,CACQ,OAAO5jB,CACf,CAMI,cAAA+jB,CAAelW,GACX,MAAMwW,EAAiBvB,GAAkBjV,GACzC,MAAMoV,EAAOlrC,KAAKosC,eAAeE,EAAevV,QAChD,MAAMiU,EAAUsB,EAAetB,QAC/BA,EAAQuB,QAAQrB,GAChB,OAAOF,CACf,EAGA,SAASwB,GAASjrC,GACd,OAAOpB,OAAOs1B,UAAUjnB,SAASknB,KAAKn0B,KAAW,iBACrD,CAMO,MAAMkrC,WAAgBjR,GAMzB,WAAAv1B,CAAYymC,GACRpO,QACAt+B,KAAK0sC,QAAUA,CACvB,CAMI,GAAAC,CAAI7W,GACA,IAAIiB,EACJ,UAAWjB,IAAQ,SAAU,CACzB,GAAI91B,KAAK4sC,cAAe,CACpB,MAAM,IAAI3lC,MAAM,kDAChC,CACY8vB,EAAS/2B,KAAK6sC,aAAa/W,GAC3B,MAAMgX,EAAgB/V,EAAOn0B,OAAS+oC,GAAWM,aACjD,GAAIa,GAAiB/V,EAAOn0B,OAAS+oC,GAAWO,WAAY,CACxDnV,EAAOn0B,KAAOkqC,EAAgBnB,GAAWG,MAAQH,GAAWI,IAE5D/rC,KAAK4sC,cAAgB,IAAIG,GAAoBhW,GAE7C,GAAIA,EAAOqU,cAAgB,EAAG,CAC1B9M,MAAMhC,aAAa,UAAWvF,EAClD,CACA,KACiB,CAEDuH,MAAMhC,aAAa,UAAWvF,EAC9C,CACA,MACa,GAAIkE,GAASnF,IAAQA,EAAI2B,OAAQ,CAElC,IAAKz3B,KAAK4sC,cAAe,CACrB,MAAM,IAAI3lC,MAAM,mDAChC,KACiB,CACD8vB,EAAS/2B,KAAK4sC,cAAcI,eAAelX,GAC3C,GAAIiB,EAAQ,CAER/2B,KAAK4sC,cAAgB,KACrBtO,MAAMhC,aAAa,UAAWvF,EAClD,CACA,CACA,KACa,CACD,MAAM,IAAI9vB,MAAM,iBAAmB6uB,EAC/C,CACA,CAOI,YAAA+W,CAAa5kB,GACT,IAAIpG,EAAI,EAER,MAAM+V,EAAI,CACNh1B,KAAMu9B,OAAOlY,EAAIsQ,OAAO,KAE5B,GAAIoT,GAAW/T,EAAEh1B,QAAU+B,UAAW,CAClC,MAAM,IAAIsC,MAAM,uBAAyB2wB,EAAEh1B,KACvD,CAEQ,GAAIg1B,EAAEh1B,OAAS+oC,GAAWM,cACtBrU,EAAEh1B,OAAS+oC,GAAWO,WAAY,CAClC,MAAMtf,EAAQ/K,EAAI,EAClB,MAAOoG,EAAIsQ,SAAS1W,KAAO,KAAOA,GAAKoG,EAAIxa,OAAQ,EACnD,MAAMw/B,EAAMhlB,EAAIwQ,UAAU7L,EAAO/K,GACjC,GAAIorB,GAAO9M,OAAO8M,IAAQhlB,EAAIsQ,OAAO1W,KAAO,IAAK,CAC7C,MAAM,IAAI5a,MAAM,sBAChC,CACY2wB,EAAEwT,YAAcjL,OAAO8M,EACnC,CAEQ,GAAI,MAAQhlB,EAAIsQ,OAAO1W,EAAI,GAAI,CAC3B,MAAM+K,EAAQ/K,EAAI,EAClB,QAASA,EAAG,CACR,MAAM8b,EAAI1V,EAAIsQ,OAAO1W,GACrB,GAAI,MAAQ8b,EACR,MACJ,GAAI9b,IAAMoG,EAAIxa,OACV,KACpB,CACYmqB,EAAEuU,IAAMlkB,EAAIwQ,UAAU7L,EAAO/K,EACzC,KACa,CACD+V,EAAEuU,IAAM,GACpB,CAEQ,MAAMe,EAAOjlB,EAAIsQ,OAAO1W,EAAI,GAC5B,GAAI,KAAOqrB,GAAQ/M,OAAO+M,IAASA,EAAM,CACrC,MAAMtgB,EAAQ/K,EAAI,EAClB,QAASA,EAAG,CACR,MAAM8b,EAAI1V,EAAIsQ,OAAO1W,GACrB,GAAI,MAAQ8b,GAAKwC,OAAOxC,IAAMA,EAAG,GAC3B9b,EACF,KACpB,CACgB,GAAIA,IAAMoG,EAAIxa,OACV,KACpB,CACYmqB,EAAE72B,GAAKo/B,OAAOlY,EAAIwQ,UAAU7L,EAAO/K,EAAI,GACnD,CAEQ,GAAIoG,EAAIsQ,SAAS1W,GAAI,CACjB,MAAMsrB,EAAUntC,KAAKotC,SAASnlB,EAAIolB,OAAOxrB,IACzC,GAAI4qB,GAAQa,eAAe1V,EAAEh1B,KAAMuqC,GAAU,CACzCvV,EAAEv2B,KAAO8rC,CACzB,KACiB,CACD,MAAM,IAAIlmC,MAAM,kBAChC,CACA,CACQ,OAAO2wB,CACf,CACI,QAAAwV,CAASnlB,GACL,IACI,OAAOzhB,KAAKC,MAAMwhB,EAAKjoB,KAAK0sC,QACxC,CACQ,MAAO7rC,GACH,OAAO,KACnB,CACA,CACI,qBAAOysC,CAAe1qC,EAAMuqC,GACxB,OAAQvqC,GACJ,KAAK+oC,GAAW4B,QACZ,OAAOf,GAASW,GACpB,KAAKxB,GAAW6B,WACZ,OAAOL,IAAYxoC,UACvB,KAAKgnC,GAAW8B,cACZ,cAAcN,IAAY,UAAYX,GAASW,GACnD,KAAKxB,GAAWG,MAChB,KAAKH,GAAWM,aACZ,OAAQvqB,MAAMopB,QAAQqC,YACVA,EAAQ,KAAO,iBACXA,EAAQ,KAAO,UACnBzB,GAAgBlgB,QAAQ2hB,EAAQ,OAAS,GACzD,KAAKxB,GAAWI,IAChB,KAAKJ,GAAWO,WACZ,OAAOxqB,MAAMopB,QAAQqC,GAErC,CAII,OAAAO,GACI,GAAI1tC,KAAK4sC,cAAe,CACpB5sC,KAAK4sC,cAAce,yBACnB3tC,KAAK4sC,cAAgB,IACjC,CACA,EAUA,MAAMG,GACF,WAAA9mC,CAAY8wB,GACR/2B,KAAK+2B,OAASA,EACd/2B,KAAKgrC,QAAU,GACfhrC,KAAK4tC,UAAY7W,CACzB,CASI,cAAAiW,CAAea,GACX7tC,KAAKgrC,QAAQjlB,KAAK8nB,GAClB,GAAI7tC,KAAKgrC,QAAQv9B,SAAWzN,KAAK4tC,UAAUxC,YAAa,CAEpD,MAAMrU,EAASwU,GAAkBvrC,KAAK4tC,UAAW5tC,KAAKgrC,SACtDhrC,KAAK2tC,yBACL,OAAO5W,CACnB,CACQ,OAAO,IACf,CAII,sBAAA4W,GACI3tC,KAAK4tC,UAAY,KACjB5tC,KAAKgrC,QAAU,EACvB,E,uGCrTO,SAAStP,GAAG5F,EAAK7Q,EAAI0W,GACxB7F,EAAI4F,GAAGzW,EAAI0W,GACX,OAAO,SAASmS,IACZhY,EAAIgG,IAAI7W,EAAI0W,EACpB,CACA,CCEA,MAAM+P,GAAkBvrC,OAAO4tC,OAAO,CAClCC,QAAS,EACTC,cAAe,EACfC,WAAY,EACZC,cAAe,EAEfC,YAAa,EACbnS,eAAgB,IA0Bb,MAAM0L,WAAenM,GAIxB,WAAAv1B,CAAYooC,EAAIlC,EAAK/O,GACjBkB,QAeAt+B,KAAKsuC,UAAY,MAKjBtuC,KAAKuuC,UAAY,MAIjBvuC,KAAKwuC,cAAgB,GAIrBxuC,KAAKyuC,WAAa,GAOlBzuC,KAAK0uC,OAAS,GAKd1uC,KAAK2uC,UAAY,EACjB3uC,KAAK4uC,IAAM,EACX5uC,KAAK6uC,KAAO,GACZ7uC,KAAK8uC,MAAQ,GACb9uC,KAAKquC,GAAKA,EACVruC,KAAKmsC,IAAMA,EACX,GAAI/O,GAAQA,EAAK2R,KAAM,CACnB/uC,KAAK+uC,KAAO3R,EAAK2R,IAC7B,CACQ/uC,KAAKgvC,MAAQ7uC,OAAOC,OAAO,GAAIg9B,GAC/B,GAAIp9B,KAAKquC,GAAGY,aACRjvC,KAAK4+B,MACjB,CAeI,gBAAIsQ,GACA,OAAQlvC,KAAKsuC,SACrB,CAMI,SAAAa,GACI,GAAInvC,KAAKovC,KACL,OACJ,MAAMf,EAAKruC,KAAKquC,GAChBruC,KAAKovC,KAAO,CACR1T,GAAG2S,EAAI,OAAQruC,KAAK4kC,OAAO1xB,KAAKlT,OAChC07B,GAAG2S,EAAI,SAAUruC,KAAKqvC,SAASn8B,KAAKlT,OACpC07B,GAAG2S,EAAI,QAASruC,KAAKmlC,QAAQjyB,KAAKlT,OAClC07B,GAAG2S,EAAI,QAASruC,KAAKglC,QAAQ9xB,KAAKlT,OAE9C,CAkBI,UAAIsvC,GACA,QAAStvC,KAAKovC,IACtB,CAWI,OAAApB,GACI,GAAIhuC,KAAKsuC,UACL,OAAOtuC,KACXA,KAAKmvC,YACL,IAAKnvC,KAAKquC,GAAG,iBACTruC,KAAKquC,GAAGzP,OACZ,GAAI,SAAW5+B,KAAKquC,GAAGkB,YACnBvvC,KAAK4kC,SACT,OAAO5kC,IACf,CAII,IAAA4+B,GACI,OAAO5+B,KAAKguC,SACpB,CAgBI,IAAA9O,IAAQ7C,GACJA,EAAKkQ,QAAQ,WACbvsC,KAAKkB,KAAK66B,MAAM/7B,KAAMq8B,GACtB,OAAOr8B,IACf,CAkBI,IAAAkB,CAAK+jB,KAAOoX,GACR,GAAIqP,GAAgBt/B,eAAe6Y,GAAK,CACpC,MAAM,IAAIhe,MAAM,IAAMge,EAAGzW,WAAa,6BAClD,CACQ6tB,EAAKkQ,QAAQtnB,GACb,GAAIjlB,KAAKgvC,MAAMQ,UAAYxvC,KAAK8uC,MAAMW,YAAczvC,KAAK8uC,MAAMY,SAAU,CACrE1vC,KAAK2vC,YAAYtT,GACjB,OAAOr8B,IACnB,CACQ,MAAM+2B,EAAS,CACXn0B,KAAM+oC,GAAWG,MACjBzqC,KAAMg7B,GAEVtF,EAAO5C,QAAU,GACjB4C,EAAO5C,QAAQ+V,SAAWlqC,KAAK8uC,MAAM5E,WAAa,MAElD,GAAI,oBAAsB7N,EAAKA,EAAK5uB,OAAS,GAAI,CAC7C,MAAM1M,EAAKf,KAAK4uC,MAChB,MAAMgB,EAAMvT,EAAKwT,MACjB7vC,KAAK8vC,qBAAqB/uC,EAAI6uC,GAC9B7Y,EAAOh2B,GAAKA,CACxB,CACQ,MAAMgvC,EAAsB/vC,KAAKquC,GAAG2B,QAChChwC,KAAKquC,GAAG2B,OAAOzK,WACfvlC,KAAKquC,GAAG2B,OAAOzK,UAAU/G,SAC7B,MAAMyR,EAAgBjwC,KAAK8uC,MAAMY,YAAcK,IAAwB/vC,KAAKsuC,WAC5E,GAAI2B,QAEC,GAAIjwC,KAAKsuC,UAAW,CACrBtuC,KAAKkwC,wBAAwBnZ,GAC7B/2B,KAAK+2B,OAAOA,EACxB,KACa,CACD/2B,KAAKyuC,WAAW1oB,KAAKgR,EACjC,CACQ/2B,KAAK8uC,MAAQ,GACb,OAAO9uC,IACf,CAII,oBAAA8vC,CAAqB/uC,EAAI6uC,GACrB,IAAI5jC,EACJ,MAAM+2B,GAAW/2B,EAAKhM,KAAK8uC,MAAM/L,WAAa,MAAQ/2B,SAAY,EAAIA,EAAKhM,KAAKgvC,MAAMmB,WACtF,GAAIpN,IAAYp+B,UAAW,CACvB3E,KAAK6uC,KAAK9tC,GAAM6uC,EAChB,MACZ,CAEQ,MAAMQ,EAAQpwC,KAAKquC,GAAG/Q,cAAa,YACxBt9B,KAAK6uC,KAAK9tC,GACjB,IAAK,IAAI8gB,EAAI,EAAGA,EAAI7hB,KAAKyuC,WAAWhhC,OAAQoU,IAAK,CAC7C,GAAI7hB,KAAKyuC,WAAW5sB,GAAG9gB,KAAOA,EAAI,CAC9Bf,KAAKyuC,WAAWvpB,OAAOrD,EAAG,EAC9C,CACA,CACY+tB,EAAIla,KAAK11B,KAAM,IAAIiH,MAAM,2BAA2B,GACrD87B,GACH/iC,KAAK6uC,KAAK9tC,GAAM,IAAIs7B,KAEhBr8B,KAAKquC,GAAG9Q,eAAe6S,GACvBR,EAAI7T,MAAM/7B,KAAM,CAAC,QAASq8B,GAAM,CAE5C,CAiBI,WAAAgU,CAAYprB,KAAOoX,GAEf,MAAMiU,EAAUtwC,KAAK8uC,MAAM/L,UAAYp+B,WAAa3E,KAAKgvC,MAAMmB,aAAexrC,UAC9E,OAAO,IAAIm/B,SAAQ,CAACC,EAASwM,KACzBlU,EAAKtW,MAAK,CAACyqB,EAAMC,KACb,GAAIH,EAAS,CACT,OAAOE,EAAOD,EAAOC,GAAQzM,EAAQ0M,EACzD,KACqB,CACD,OAAO1M,EAAQyM,EACnC,KAEYxwC,KAAKkB,KAAK+jB,KAAOoX,EAAK,GAElC,CAMI,WAAAsT,CAAYtT,GACR,IAAIuT,EACJ,UAAWvT,EAAKA,EAAK5uB,OAAS,KAAO,WAAY,CAC7CmiC,EAAMvT,EAAKwT,KACvB,CACQ,MAAM9Y,EAAS,CACXh2B,GAAIf,KAAK2uC,YACT+B,SAAU,EACVC,QAAS,MACTtU,OACAyS,MAAO3uC,OAAOC,OAAO,CAAEqvC,UAAW,MAAQzvC,KAAK8uC,QAEnDzS,EAAKtW,MAAK,CAAC4a,KAAQiQ,KACf,GAAI7Z,IAAW/2B,KAAK0uC,OAAO,GAAI,CAE3B,MAChB,CACY,MAAMmC,EAAWlQ,IAAQ,KACzB,GAAIkQ,EAAU,CACV,GAAI9Z,EAAO2Z,SAAW1wC,KAAKgvC,MAAMQ,QAAS,CACtCxvC,KAAK0uC,OAAOjU,QACZ,GAAImV,EAAK,CACLA,EAAIjP,EAC5B,CACA,CACA,KACiB,CACD3gC,KAAK0uC,OAAOjU,QACZ,GAAImV,EAAK,CACLA,EAAI,QAASgB,EACjC,CACA,CACY7Z,EAAO4Z,QAAU,MACjB,OAAO3wC,KAAK8wC,aAAa,IAE7B9wC,KAAK0uC,OAAO3oB,KAAKgR,GACjB/2B,KAAK8wC,aACb,CAOI,WAAAA,CAAYC,EAAQ,OAChB,IAAK/wC,KAAKsuC,WAAatuC,KAAK0uC,OAAOjhC,SAAW,EAAG,CAC7C,MACZ,CACQ,MAAMspB,EAAS/2B,KAAK0uC,OAAO,GAC3B,GAAI3X,EAAO4Z,UAAYI,EAAO,CAC1B,MACZ,CACQha,EAAO4Z,QAAU,KACjB5Z,EAAO2Z,WACP1wC,KAAK8uC,MAAQ/X,EAAO+X,MACpB9uC,KAAKkB,KAAK66B,MAAM/7B,KAAM+2B,EAAOsF,KACrC,CAOI,MAAAtF,CAAOA,GACHA,EAAOoV,IAAMnsC,KAAKmsC,IAClBnsC,KAAKquC,GAAG2C,QAAQja,EACxB,CAMI,MAAA6N,GACI,UAAW5kC,KAAK+uC,MAAQ,WAAY,CAChC/uC,KAAK+uC,MAAM1tC,IACPrB,KAAKixC,mBAAmB5vC,EAAK,GAE7C,KACa,CACDrB,KAAKixC,mBAAmBjxC,KAAK+uC,KACzC,CACA,CAOI,kBAAAkC,CAAmB5vC,GACfrB,KAAK+2B,OAAO,CACRn0B,KAAM+oC,GAAW4B,QACjBlsC,KAAMrB,KAAKkxC,KACL/wC,OAAOC,OAAO,CAAE+wC,IAAKnxC,KAAKkxC,KAAME,OAAQpxC,KAAKqxC,aAAehwC,GAC5DA,GAElB,CAOI,OAAA8jC,CAAQxE,GACJ,IAAK3gC,KAAKsuC,UAAW,CACjBtuC,KAAKs8B,aAAa,gBAAiBqE,EAC/C,CACA,CAQI,OAAAqE,CAAQ5G,EAAQl1B,GACZlJ,KAAKsuC,UAAY,aACVtuC,KAAKe,GACZf,KAAKs8B,aAAa,aAAc8B,EAAQl1B,EAChD,CAOI,QAAAmmC,CAAStY,GACL,MAAMua,EAAgBva,EAAOoV,MAAQnsC,KAAKmsC,IAC1C,IAAKmF,EACD,OACJ,OAAQva,EAAOn0B,MACX,KAAK+oC,GAAW4B,QACZ,GAAIxW,EAAO11B,MAAQ01B,EAAO11B,KAAK6gC,IAAK,CAChCliC,KAAKuxC,UAAUxa,EAAO11B,KAAK6gC,IAAKnL,EAAO11B,KAAK8vC,IAChE,KACqB,CACDnxC,KAAKs8B,aAAa,gBAAiB,IAAIr1B,MAAM,6LACjE,CACgB,MACJ,KAAK0kC,GAAWG,MAChB,KAAKH,GAAWM,aACZjsC,KAAKwxC,QAAQza,GACb,MACJ,KAAK4U,GAAWI,IAChB,KAAKJ,GAAWO,WACZlsC,KAAKyxC,MAAM1a,GACX,MACJ,KAAK4U,GAAW6B,WACZxtC,KAAK0xC,eACL,MACJ,KAAK/F,GAAW8B,cACZztC,KAAK0tC,UACL,MAAM/M,EAAM,IAAI15B,MAAM8vB,EAAO11B,KAAKkB,SAElCo+B,EAAIt/B,KAAO01B,EAAO11B,KAAKA,KACvBrB,KAAKs8B,aAAa,gBAAiBqE,GACnC,MAEhB,CAOI,OAAA6Q,CAAQza,GACJ,MAAMsF,EAAOtF,EAAO11B,MAAQ,GAC5B,GAAI,MAAQ01B,EAAOh2B,GAAI,CACnBs7B,EAAKtW,KAAK/lB,KAAK4vC,IAAI7Y,EAAOh2B,IACtC,CACQ,GAAIf,KAAKsuC,UAAW,CAChBtuC,KAAK2xC,UAAUtV,EAC3B,KACa,CACDr8B,KAAKwuC,cAAczoB,KAAK5lB,OAAO4tC,OAAO1R,GAClD,CACA,CACI,SAAAsV,CAAUtV,GACN,GAAIr8B,KAAK4xC,eAAiB5xC,KAAK4xC,cAAcnkC,OAAQ,CACjD,MAAM8uB,EAAYv8B,KAAK4xC,cAAcjX,QACrC,IAAK,MAAMkX,KAAYtV,EAAW,CAC9BsV,EAAS9V,MAAM/7B,KAAMq8B,EACrC,CACA,CACQiC,MAAMp9B,KAAK66B,MAAM/7B,KAAMq8B,GACvB,GAAIr8B,KAAKkxC,MAAQ7U,EAAK5uB,eAAiB4uB,EAAKA,EAAK5uB,OAAS,KAAO,SAAU,CACvEzN,KAAKqxC,YAAchV,EAAKA,EAAK5uB,OAAS,EAClD,CACA,CAMI,GAAAmiC,CAAI7uC,GACA,MAAM27B,EAAO18B,KACb,IAAI8xC,EAAO,MACX,OAAO,YAAazV,GAEhB,GAAIyV,EACA,OACJA,EAAO,KACPpV,EAAK3F,OAAO,CACRn0B,KAAM+oC,GAAWI,IACjBhrC,GAAIA,EACJM,KAAMg7B,GAEtB,CACA,CAOI,KAAAoV,CAAM1a,GACF,MAAM6Y,EAAM5vC,KAAK6uC,KAAK9X,EAAOh2B,IAC7B,GAAI,oBAAsB6uC,EAAK,CAC3BA,EAAI7T,MAAM/7B,KAAM+2B,EAAO11B,aAChBrB,KAAK6uC,KAAK9X,EAAOh2B,GACpC,CAGA,CAMI,SAAAwwC,CAAUxwC,EAAIowC,GACVnxC,KAAKe,GAAKA,EACVf,KAAKuuC,UAAY4C,GAAOnxC,KAAKkxC,OAASC,EACtCnxC,KAAKkxC,KAAOC,EACZnxC,KAAKsuC,UAAY,KACjBtuC,KAAK+xC,eACL/xC,KAAKs8B,aAAa,WAClBt8B,KAAK8wC,YAAY,KACzB,CAMI,YAAAiB,GACI/xC,KAAKwuC,cAAcrmB,SAASkU,GAASr8B,KAAK2xC,UAAUtV,KACpDr8B,KAAKwuC,cAAgB,GACrBxuC,KAAKyuC,WAAWtmB,SAAS4O,IACrB/2B,KAAKkwC,wBAAwBnZ,GAC7B/2B,KAAK+2B,OAAOA,EAAO,IAEvB/2B,KAAKyuC,WAAa,EAC1B,CAMI,YAAAiD,GACI1xC,KAAK0tC,UACL1tC,KAAKglC,QAAQ,uBACrB,CAQI,OAAA0I,GACI,GAAI1tC,KAAKovC,KAAM,CAEXpvC,KAAKovC,KAAKjnB,SAAS2lB,GAAeA,MAClC9tC,KAAKovC,KAAOzqC,SACxB,CACQ3E,KAAKquC,GAAG,YAAYruC,KAC5B,CAiBI,UAAAkuC,GACI,GAAIluC,KAAKsuC,UAAW,CAChBtuC,KAAK+2B,OAAO,CAAEn0B,KAAM+oC,GAAW6B,YAC3C,CAEQxtC,KAAK0tC,UACL,GAAI1tC,KAAKsuC,UAAW,CAEhBtuC,KAAKglC,QAAQ,uBACzB,CACQ,OAAOhlC,IACf,CAMI,KAAA++B,GACI,OAAO/+B,KAAKkuC,YACpB,CAUI,QAAAhE,CAASA,GACLlqC,KAAK8uC,MAAM5E,SAAWA,EACtB,OAAOlqC,IACf,CAUI,YAAI0vC,GACA1vC,KAAK8uC,MAAMY,SAAW,KACtB,OAAO1vC,IACf,CAcI,OAAA+iC,CAAQA,GACJ/iC,KAAK8uC,MAAM/L,QAAUA,EACrB,OAAO/iC,IACf,CAYI,KAAAgyC,CAAMH,GACF7xC,KAAK4xC,cAAgB5xC,KAAK4xC,eAAiB,GAC3C5xC,KAAK4xC,cAAc7rB,KAAK8rB,GACxB,OAAO7xC,IACf,CAYI,UAAAiyC,CAAWJ,GACP7xC,KAAK4xC,cAAgB5xC,KAAK4xC,eAAiB,GAC3C5xC,KAAK4xC,cAAcrF,QAAQsF,GAC3B,OAAO7xC,IACf,CAmBI,MAAAkyC,CAAOL,GACH,IAAK7xC,KAAK4xC,cAAe,CACrB,OAAO5xC,IACnB,CACQ,GAAI6xC,EAAU,CACV,MAAMtV,EAAYv8B,KAAK4xC,cACvB,IAAK,IAAI/vB,EAAI,EAAGA,EAAI0a,EAAU9uB,OAAQoU,IAAK,CACvC,GAAIgwB,IAAatV,EAAU1a,GAAI,CAC3B0a,EAAUrX,OAAOrD,EAAG,GACpB,OAAO7hB,IAC3B,CACA,CACA,KACa,CACDA,KAAK4xC,cAAgB,EACjC,CACQ,OAAO5xC,IACf,CAKI,YAAAmyC,GACI,OAAOnyC,KAAK4xC,eAAiB,EACrC,CAcI,aAAAQ,CAAcP,GACV7xC,KAAKqyC,sBAAwBryC,KAAKqyC,uBAAyB,GAC3DryC,KAAKqyC,sBAAsBtsB,KAAK8rB,GAChC,OAAO7xC,IACf,CAcI,kBAAAsyC,CAAmBT,GACf7xC,KAAKqyC,sBAAwBryC,KAAKqyC,uBAAyB,GAC3DryC,KAAKqyC,sBAAsB9F,QAAQsF,GACnC,OAAO7xC,IACf,CAmBI,cAAAuyC,CAAeV,GACX,IAAK7xC,KAAKqyC,sBAAuB,CAC7B,OAAOryC,IACnB,CACQ,GAAI6xC,EAAU,CACV,MAAMtV,EAAYv8B,KAAKqyC,sBACvB,IAAK,IAAIxwB,EAAI,EAAGA,EAAI0a,EAAU9uB,OAAQoU,IAAK,CACvC,GAAIgwB,IAAatV,EAAU1a,GAAI,CAC3B0a,EAAUrX,OAAOrD,EAAG,GACpB,OAAO7hB,IAC3B,CACA,CACA,KACa,CACDA,KAAKqyC,sBAAwB,EACzC,CACQ,OAAOryC,IACf,CAKI,oBAAAwyC,GACI,OAAOxyC,KAAKqyC,uBAAyB,EAC7C,CAQI,uBAAAnC,CAAwBnZ,GACpB,GAAI/2B,KAAKqyC,uBAAyBryC,KAAKqyC,sBAAsB5kC,OAAQ,CACjE,MAAM8uB,EAAYv8B,KAAKqyC,sBAAsB1X,QAC7C,IAAK,MAAMkX,KAAYtV,EAAW,CAC9BsV,EAAS9V,MAAM/7B,KAAM+2B,EAAO11B,KAC5C,CACA,CACA,ECzzBO,SAASoxC,GAAQrV,GACpBA,EAAOA,GAAQ,GACfp9B,KAAK0yC,GAAKtV,EAAKrjB,KAAO,IACtB/Z,KAAKga,IAAMojB,EAAKpjB,KAAO,IACvBha,KAAK2yC,OAASvV,EAAKuV,QAAU,EAC7B3yC,KAAK4yC,OAASxV,EAAKwV,OAAS,GAAKxV,EAAKwV,QAAU,EAAIxV,EAAKwV,OAAS,EAClE5yC,KAAK6yC,SAAW,CACpB,CAOAJ,GAAQhd,UAAUqd,SAAW,WACzB,IAAIJ,EAAK1yC,KAAK0yC,GAAK54B,KAAKwhB,IAAIt7B,KAAK2yC,OAAQ3yC,KAAK6yC,YAC9C,GAAI7yC,KAAK4yC,OAAQ,CACb,IAAIG,EAAOj5B,KAAKk5B,SAChB,IAAIC,EAAYn5B,KAAK2S,MAAMsmB,EAAO/yC,KAAK4yC,OAASF,GAChDA,GAAM54B,KAAK2S,MAAMsmB,EAAO,IAAM,IAAM,EAAIL,EAAKO,EAAYP,EAAKO,CACtE,CACI,OAAOn5B,KAAKC,IAAI24B,EAAI1yC,KAAKga,KAAO,CACpC,EAMAy4B,GAAQhd,UAAUyd,MAAQ,WACtBlzC,KAAK6yC,SAAW,CACpB,EAMAJ,GAAQhd,UAAU0d,OAAS,SAAUp5B,GACjC/Z,KAAK0yC,GAAK34B,CACd,EAMA04B,GAAQhd,UAAU2d,OAAS,SAAUp5B,GACjCha,KAAKga,IAAMA,CACf,EAMAy4B,GAAQhd,UAAU4d,UAAY,SAAUT,GACpC5yC,KAAK4yC,OAASA,CAClB,EC3DO,MAAMU,WAAgB9X,GACzB,WAAAv1B,CAAY87B,EAAK3E,GACb,IAAIpxB,EACJsyB,QACAt+B,KAAKuzC,KAAO,GACZvzC,KAAKovC,KAAO,GACZ,GAAIrN,GAAO,kBAAoBA,EAAK,CAChC3E,EAAO2E,EACPA,EAAMp9B,SAClB,CACQy4B,EAAOA,GAAQ,GACfA,EAAK0C,KAAO1C,EAAK0C,MAAQ,aACzB9/B,KAAKo9B,KAAOA,EACZD,GAAsBn9B,KAAMo9B,GAC5Bp9B,KAAKwzC,aAAapW,EAAKoW,eAAiB,OACxCxzC,KAAKyzC,qBAAqBrW,EAAKqW,sBAAwBC,UACvD1zC,KAAK2zC,kBAAkBvW,EAAKuW,mBAAqB,KACjD3zC,KAAK4zC,qBAAqBxW,EAAKwW,sBAAwB,KACvD5zC,KAAK6zC,qBAAqB7nC,EAAKoxB,EAAKyW,uBAAyB,MAAQ7nC,SAAY,EAAIA,EAAK,IAC1FhM,KAAK8zC,QAAU,IAAIrB,GAAQ,CACvB14B,IAAK/Z,KAAK2zC,oBACV35B,IAAKha,KAAK4zC,uBACVhB,OAAQ5yC,KAAK6zC,wBAEjB7zC,KAAK+iC,QAAQ,MAAQ3F,EAAK2F,QAAU,IAAQ3F,EAAK2F,SACjD/iC,KAAKuvC,YAAc,SACnBvvC,KAAK+hC,IAAMA,EACX,MAAMgS,EAAU3W,EAAK4W,QAAUA,GAC/Bh0C,KAAKi0C,QAAU,IAAIF,EAAQnI,QAC3B5rC,KAAKk0C,QAAU,IAAIH,EAAQtH,QAC3BzsC,KAAKivC,aAAe7R,EAAK+W,cAAgB,MACzC,GAAIn0C,KAAKivC,aACLjvC,KAAK4+B,MACjB,CACI,YAAA4U,CAAaY,GACT,IAAKpY,UAAUvuB,OACX,OAAOzN,KAAKq0C,cAChBr0C,KAAKq0C,gBAAkBD,EACvB,OAAOp0C,IACf,CACI,oBAAAyzC,CAAqBW,GACjB,GAAIA,IAAMzvC,UACN,OAAO3E,KAAKs0C,sBAChBt0C,KAAKs0C,sBAAwBF,EAC7B,OAAOp0C,IACf,CACI,iBAAA2zC,CAAkBS,GACd,IAAIpoC,EACJ,GAAIooC,IAAMzvC,UACN,OAAO3E,KAAKu0C,mBAChBv0C,KAAKu0C,mBAAqBH,GACzBpoC,EAAKhM,KAAK8zC,WAAa,MAAQ9nC,SAAY,OAAS,EAAIA,EAAGmnC,OAAOiB,GACnE,OAAOp0C,IACf,CACI,mBAAA6zC,CAAoBO,GAChB,IAAIpoC,EACJ,GAAIooC,IAAMzvC,UACN,OAAO3E,KAAKw0C,qBAChBx0C,KAAKw0C,qBAAuBJ,GAC3BpoC,EAAKhM,KAAK8zC,WAAa,MAAQ9nC,SAAY,OAAS,EAAIA,EAAGqnC,UAAUe,GACtE,OAAOp0C,IACf,CACI,oBAAA4zC,CAAqBQ,GACjB,IAAIpoC,EACJ,GAAIooC,IAAMzvC,UACN,OAAO3E,KAAKy0C,sBAChBz0C,KAAKy0C,sBAAwBL,GAC5BpoC,EAAKhM,KAAK8zC,WAAa,MAAQ9nC,SAAY,OAAS,EAAIA,EAAGonC,OAAOgB,GACnE,OAAOp0C,IACf,CACI,OAAA+iC,CAAQqR,GACJ,IAAKpY,UAAUvuB,OACX,OAAOzN,KAAK00C,SAChB10C,KAAK00C,SAAWN,EAChB,OAAOp0C,IACf,CAOI,oBAAA20C,GAEI,IAAK30C,KAAK40C,eACN50C,KAAKq0C,eACLr0C,KAAK8zC,QAAQjB,WAAa,EAAG,CAE7B7yC,KAAK60C,WACjB,CACA,CAQI,IAAAjW,CAAKjD,GACD,IAAK37B,KAAKuvC,YAAY/jB,QAAQ,QAC1B,OAAOxrB,KACXA,KAAKgwC,OAAS,IAAI8E,GAAO90C,KAAK+hC,IAAK/hC,KAAKo9B,MACxC,MAAMsB,EAAS1+B,KAAKgwC,OACpB,MAAMtT,EAAO18B,KACbA,KAAKuvC,YAAc,UACnBvvC,KAAK+0C,cAAgB,MAErB,MAAMC,EAAiBtZ,GAAGgD,EAAQ,QAAQ,WACtChC,EAAKkI,SACLjJ,GAAMA,GAClB,IACQ,MAAMgD,EAAWgC,IACb3gC,KAAKqjC,UACLrjC,KAAKuvC,YAAc,SACnBvvC,KAAKs8B,aAAa,QAASqE,GAC3B,GAAIhF,EAAI,CACJA,EAAGgF,EACnB,KACiB,CAED3gC,KAAK20C,sBACrB,GAGQ,MAAMM,EAAWvZ,GAAGgD,EAAQ,QAASC,GACrC,GAAI,QAAU3+B,KAAK00C,SAAU,CACzB,MAAM3R,EAAU/iC,KAAK00C,SAErB,MAAMtE,EAAQpwC,KAAKs9B,cAAa,KAC5B0X,IACArW,EAAQ,IAAI13B,MAAM,YAClBy3B,EAAOK,OAAO,GACfgE,GACH,GAAI/iC,KAAKo9B,KAAKyH,UAAW,CACrBuL,EAAMrL,OACtB,CACY/kC,KAAKovC,KAAKrpB,MAAK,KACX/lB,KAAKu9B,eAAe6S,EAAM,GAE1C,CACQpwC,KAAKovC,KAAKrpB,KAAKivB,GACfh1C,KAAKovC,KAAKrpB,KAAKkvB,GACf,OAAOj1C,IACf,CAOI,OAAAguC,CAAQrS,GACJ,OAAO37B,KAAK4+B,KAAKjD,EACzB,CAMI,MAAAiJ,GAEI5kC,KAAKqjC,UAELrjC,KAAKuvC,YAAc,OACnBvvC,KAAKs8B,aAAa,QAElB,MAAMoC,EAAS1+B,KAAKgwC,OACpBhwC,KAAKovC,KAAKrpB,KAAK2V,GAAGgD,EAAQ,OAAQ1+B,KAAKk1C,OAAOhiC,KAAKlT,OAAQ07B,GAAGgD,EAAQ,OAAQ1+B,KAAKm1C,OAAOjiC,KAAKlT,OAAQ07B,GAAGgD,EAAQ,QAAS1+B,KAAKmlC,QAAQjyB,KAAKlT,OAAQ07B,GAAGgD,EAAQ,QAAS1+B,KAAKglC,QAAQ9xB,KAAKlT,OAAQ07B,GAAG17B,KAAKk0C,QAAS,UAAWl0C,KAAKo1C,UAAUliC,KAAKlT,OAC3P,CAMI,MAAAk1C,GACIl1C,KAAKs8B,aAAa,OAC1B,CAMI,MAAA6Y,CAAO9zC,GACH,IACIrB,KAAKk0C,QAAQvH,IAAItrC,EAC7B,CACQ,MAAOR,GACHb,KAAKglC,QAAQ,cAAenkC,EACxC,CACA,CAMI,SAAAu0C,CAAUre,GAEN6M,IAAS,KACL5jC,KAAKs8B,aAAa,SAAUvF,EAAO,GACpC/2B,KAAKs9B,aAChB,CAMI,OAAA6H,CAAQxE,GACJ3gC,KAAKs8B,aAAa,QAASqE,EACnC,CAOI,MAAAjC,CAAOyN,EAAK/O,GACR,IAAIsB,EAAS1+B,KAAKuzC,KAAKpH,GACvB,IAAKzN,EAAQ,CACTA,EAAS,IAAIiJ,GAAO3nC,KAAMmsC,EAAK/O,GAC/Bp9B,KAAKuzC,KAAKpH,GAAOzN,CAC7B,MACa,GAAI1+B,KAAKivC,eAAiBvQ,EAAO4Q,OAAQ,CAC1C5Q,EAAOsP,SACnB,CACQ,OAAOtP,CACf,CAOI,QAAA2W,CAAS3W,GACL,MAAM6U,EAAOpzC,OAAOqN,KAAKxN,KAAKuzC,MAC9B,IAAK,MAAMpH,KAAOoH,EAAM,CACpB,MAAM7U,EAAS1+B,KAAKuzC,KAAKpH,GACzB,GAAIzN,EAAO4Q,OAAQ,CACf,MAChB,CACA,CACQtvC,KAAKs1C,QACb,CAOI,OAAAtE,CAAQja,GACJ,MAAMkC,EAAiBj5B,KAAKi0C,QAAQ7c,OAAOL,GAC3C,IAAK,IAAIlV,EAAI,EAAGA,EAAIoX,EAAexrB,OAAQoU,IAAK,CAC5C7hB,KAAKgwC,OAAO7Q,MAAMlG,EAAepX,GAAIkV,EAAO5C,QACxD,CACA,CAMI,OAAAkP,GACIrjC,KAAKovC,KAAKjnB,SAAS2lB,GAAeA,MAClC9tC,KAAKovC,KAAK3hC,OAAS,EACnBzN,KAAKk0C,QAAQxG,SACrB,CAMI,MAAA4H,GACIt1C,KAAK+0C,cAAgB,KACrB/0C,KAAK40C,cAAgB,MACrB50C,KAAKglC,QAAQ,gBACb,GAAIhlC,KAAKgwC,OACLhwC,KAAKgwC,OAAOjR,OACxB,CAMI,UAAAmP,GACI,OAAOluC,KAAKs1C,QACpB,CAMI,OAAAtQ,CAAQ5G,EAAQl1B,GACZlJ,KAAKqjC,UACLrjC,KAAK8zC,QAAQZ,QACblzC,KAAKuvC,YAAc,SACnBvvC,KAAKs8B,aAAa,QAAS8B,EAAQl1B,GACnC,GAAIlJ,KAAKq0C,gBAAkBr0C,KAAK+0C,cAAe,CAC3C/0C,KAAK60C,WACjB,CACA,CAMI,SAAAA,GACI,GAAI70C,KAAK40C,eAAiB50C,KAAK+0C,cAC3B,OAAO/0C,KACX,MAAM08B,EAAO18B,KACb,GAAIA,KAAK8zC,QAAQjB,UAAY7yC,KAAKs0C,sBAAuB,CACrDt0C,KAAK8zC,QAAQZ,QACblzC,KAAKs8B,aAAa,oBAClBt8B,KAAK40C,cAAgB,KACjC,KACa,CACD,MAAMW,EAAQv1C,KAAK8zC,QAAQhB,WAC3B9yC,KAAK40C,cAAgB,KACrB,MAAMxE,EAAQpwC,KAAKs9B,cAAa,KAC5B,GAAIZ,EAAKqY,cACL,OACJ/0C,KAAKs8B,aAAa,oBAAqBI,EAAKoX,QAAQjB,UAEpD,GAAInW,EAAKqY,cACL,OACJrY,EAAKkC,MAAM+B,IACP,GAAIA,EAAK,CACLjE,EAAKkY,cAAgB,MACrBlY,EAAKmY,YACL70C,KAAKs8B,aAAa,kBAAmBqE,EAC7D,KACyB,CACDjE,EAAK8Y,aAC7B,IACkB,GACHD,GACH,GAAIv1C,KAAKo9B,KAAKyH,UAAW,CACrBuL,EAAMrL,OACtB,CACY/kC,KAAKovC,KAAKrpB,MAAK,KACX/lB,KAAKu9B,eAAe6S,EAAM,GAE1C,CACA,CAMI,WAAAoF,GACI,MAAMC,EAAUz1C,KAAK8zC,QAAQjB,SAC7B7yC,KAAK40C,cAAgB,MACrB50C,KAAK8zC,QAAQZ,QACblzC,KAAKs8B,aAAa,YAAamZ,EACvC,EC9VA,MAAMC,GAAQ,GACd,SAASpe,GAAOyK,EAAK3E,GACjB,UAAW2E,IAAQ,SAAU,CACzB3E,EAAO2E,EACPA,EAAMp9B,SACd,CACIy4B,EAAOA,GAAQ,GACf,MAAMuY,EAASrL,GAAIvI,EAAK3E,EAAK0C,MAAQ,cACrC,MAAMz1B,EAASsrC,EAAOtrC,OACtB,MAAMtJ,EAAK40C,EAAO50C,GAClB,MAAM++B,EAAO6V,EAAO7V,KACpB,MAAMwR,EAAgBoE,GAAM30C,IAAO++B,KAAQ4V,GAAM30C,GAAI,QACrD,MAAM60C,EAAgBxY,EAAKyY,UACvBzY,EAAK,yBACL,QAAUA,EAAK0Y,WACfxE,EACJ,IAAIjD,EACJ,GAAIuH,EAAe,CACfvH,EAAK,IAAIiF,GAAQjpC,EAAQ+yB,EACjC,KACS,CACD,IAAKsY,GAAM30C,GAAK,CACZ20C,GAAM30C,GAAM,IAAIuyC,GAAQjpC,EAAQ+yB,EAC5C,CACQiR,EAAKqH,GAAM30C,EACnB,CACI,GAAI40C,EAAOlX,QAAUrB,EAAKqB,MAAO,CAC7BrB,EAAKqB,MAAQkX,EAAOtO,QAC5B,CACI,OAAOgH,EAAG3P,OAAOiX,EAAO7V,KAAM1C,EAClC,CAGAj9B,OAAOC,OAAOk3B,GAAQ,CAClBgc,WACA3L,UACA0G,GAAI/W,GACJ0W,QAAS1W,KC3Cb,MAAMye,GAAmB,+w3I,MCiBZC,GAAa,M,yIAuBhBh2C,KAAAgE,eAAiC,IAAIC,EACrCjE,KAAAmS,gBAA8B,GAC9BnS,KAAAi2C,qBAA+C,CAAE98B,EAAG,GAAIC,EAAG,IAE3DpZ,KAAA8mB,MAAgB,GAChB9mB,KAAAk2C,YAA2B,IAAIjhB,GAC/Bj1B,KAAAgJ,cAAgB,IAAIhD,EACpBhG,KAAAmqB,oBAAsB,IAAI3C,EAE1BxnB,KAAAm2C,qBAAuB,MAsU/Bn2C,KAAAo2C,kBAAoB,CAAE1hC,IAAK,EAAGE,KAAM,EAAGuE,EAAG,EAAGC,EAAG,GAkBhDpZ,KAAAq2C,2BAA6Cz0C,IAE3C,MAAM00C,EAAK10C,EAAMgX,QAAU5Y,KAAKo2C,kBAAkBj9B,EAClD,MAAMo9B,EAAK30C,EAAMmX,QAAU/Y,KAAKo2C,kBAAkBh9B,EAGlDpZ,KAAKw2C,gBAAgBC,UAAYz2C,KAAKo2C,kBAAkB1hC,IAAM6hC,EAC9Dv2C,KAAKw2C,gBAAgBE,WAAa12C,KAAKo2C,kBAAkBxhC,KAAO0hC,EAChE,GAAIx8B,KAAKK,IAAIm8B,GAAM,GAAKx8B,KAAKK,IAAIo8B,GAAM,EAAG,CACxCv2C,KAAK22C,mBAAqB,I,GAI9B32C,KAAA42C,8BAA+C,KAC7CxtC,SAASI,oBAAoB,YAAaxJ,KAAKq2C,4BAC/CjtC,SAASI,oBAAoB,UAAWxJ,KAAK42C,8BAA8B,E,+LA/XnC,G,kBAMM,IAAIz2C,O,UACV,IAAIuhB,M,wBACP,M,iBAEQ,K,gBAChB,M,wBACQ,M,sBACF,M,qBACV,E,CAY3B,aAAAm1B,GACEnwC,eAAeowC,QAAQ,QAAStwC,KAAK6lC,UAAUrsC,KAAK+2C,SACpD/2C,KAAKg3C,e,CAGP,iBAAAj3C,GACE,GAAIC,KAAKi3C,QAAS,CAChBnwC,EAAMowC,SAASC,QAAUn3C,KAAKi3C,O,CAGhC,GAAIj3C,KAAK+2C,SAAW,GAAI,CACtB/2C,KAAKg3C,e,EAGT,aAAAA,GACE,IACEh3C,KAAKk2C,YAAYhhB,UAAUl1B,KAAK2L,WAAY3L,KAAK4L,UAAUqrB,MAAKmgB,IAC9Dp3C,KAAKq3C,aAAaD,GAClBp3C,KAAKgE,eAAeszC,gBAAgBt3C,KAAK2L,WAAY3L,KAAKqG,UAAWrG,KAAKsG,SAAS2wB,MAAKsgB,MAAMC,IAC5Fx3C,KAAKmS,sBAAwBnS,KAAKgE,eAAeyzC,aAAaz3C,KAAK4L,UACnE5L,KAAK+jB,aAAalY,SAAWurC,EAAS,aAAavrC,SACnD7L,KAAK+jB,aAAanN,WAAa5W,KAAK03C,cAAcN,GAClDp3C,KAAK+jB,aAAa5I,mBAAqBi8B,EAAS,aAAaj8B,mBAC7Dnb,KAAK+jB,aAAapM,aAAe,IAAI5S,KAAKyyC,EAAYG,2BAA2BC,MAAM1iC,UACvFlV,KAAK+jB,aAAa8zB,WAAa,IAAI9yC,KAAKyyC,EAAYG,2BAA2BG,IAAI5iC,UACnFlV,KAAK+jB,aAAa+B,oBAAsBiyB,EAAmB/3C,KAAK+jB,aAAanN,YAC7E5W,KAAK+jB,aAAaU,cAAgB+yB,EAAYQ,YAAc,GAC5Dh4C,KAAK+jB,aAAak0B,mBAAqB,GACvC,IAAIC,EAAiBd,EAAS,aAAa,2BAC3Cp3C,KAAKiS,mBAAqBimC,EAAe5iC,MAAK6iC,GAAQA,EAAKlvC,OAAS,OAASkvC,EAAKlvC,OAAS,QAC3FjJ,KAAKo4C,6BAA6Bp4C,KAAK+jB,aAAaU,eACpDzkB,KAAKo4C,6BAA6Bp4C,KAAK+jB,aAAak0B,oBACpDj4C,KAAK8mB,MAAQ9mB,KAAKq4C,uBAAuB,IAAItzC,MAC7C,IAAIuzC,EAAoB,IAAIvzC,KAAK/E,KAAKu4C,6BACtCD,EAAYpzC,SAAS,EAAG,EAAG,EAAG,GAC9BlF,KAAK2mB,KAAO6wB,EAAY7wB,KACxB3mB,KAAK+jB,aAAa4C,KAAO3mB,KAAK2mB,KAC9B3mB,KAAK+jB,aAAa8H,WAAa2rB,EAAYgB,OAC3C1mC,YAAW,KACT9R,KAAKy4C,gBAAgBz4C,KAAK8mB,MAAM,GAC/B,KACH,IAAK9mB,KAAK+jB,aAAa5I,mBAAoB,CACzC,MAAM9Z,QAAarB,KAAKmqB,oBAAoB1C,mBAAmBznB,KAAK2L,WAAYiC,EAAsB,IAAI7I,MAAS/E,KAAKsG,SACxHtG,KAAKqqB,gBAAelqB,OAAAC,OAAAD,OAAAC,OAAA,GAAQJ,KAAKqqB,iBAAoBhpB,GACrDrB,KAAK+jB,aAAasG,gBAAkBhpB,C,CAEtCrB,KAAK0+B,OAAS2P,GAAG,oCACjBruC,KAAK0+B,OAAOhD,GAAG,OAAO6b,MAAMnO,IAC1B,IAAIsP,EAAclyC,KAAKC,MAAM2iC,GAC7B,GAAIsP,EAAa,CACf,MAAMC,OAAEA,EAAMC,IAAEA,EAAGC,QAAEA,GAAgEH,EACrF,GAAIE,EAAIpqC,aAAexO,KAAK2L,WAAW6C,WAAY,CACjD,IAAIhH,EACJ,GAAImxC,IAAW,uBAAwB,CACrCnxC,EAASqxC,C,KACJ,CACLrxC,EAAShB,KAAKC,MAAMoyC,E,CAEtBjyC,QAAQC,IAAIW,EAAQmxC,GACpB,MAAMG,EAA6B,CAAC,gBAAiB,qBAAsB,sBAAuB,gCAAiC,gCACnI,GAAIA,EAASh4C,SAAS63C,GAAS,CAC7B,IAAII,EACJ,GAAIJ,IAAW,sBAAwBA,IAAW,gCAAiC,CACjFI,EAAqB,OAAO/nC,EAAyBxJ,G,KAChD,CACLuxC,EAAqBtnC,EAAoBjK,E,CAE3CxH,KAAKg5C,wBAAwBD,EAAoBp0C,U,MAC5C,GAAIg0C,IAAW,uBAAwB,CAC5C34C,KAAK+jB,aAAY5jB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAK+jB,cAAY,CACpBU,cAAezkB,KAAK+jB,aAAaU,cAAc7jB,QAAOC,GAAKA,EAAEsG,OAASK,K,KAEnE,CACL,M,MAIN,GACF,G,CAEJ,MAAOlD,GAAO,C,CAElB,gBAAA6E,GACEnJ,KAAKy4C,gBAAgBz4C,KAAK8mB,M,CAG5B,uBAAMzI,CAAkB4G,GACtB,IACEA,EAAGnX,2BACHmX,EAAGhX,uBAEGjO,KAAKgJ,cAAc9B,YAAY+d,EAAGrY,O,CAMxC,MAAOtI,G,EAIX,wBAAA20C,CAAyB53C,GACvB,OAAOrB,KAAK+jB,aAAaU,cAAcnP,MACrCvG,GAAWA,EAAQC,KAAO3N,EAAK2N,IAAOD,EAAQpH,YAActG,EAAKsG,WAAaoH,EAAQnH,UAAYvG,EAAKuG,SAAWmH,EAAQjH,QAAUzG,EAAKyG,O,CAG7I,4BAAAswC,CAA6Bp6B,GAC3BA,EAAUmK,SAAQ7gB,IAChBA,EAAasP,WAAa5W,KAAK+jB,aAAa+B,oBAC5Cxe,EAAaoC,iBAAmB,GAChCpC,EAAaoC,iBAAiB7D,SAAW,IAAId,KAAKuC,EAAaK,UAAY,aAC3EL,EAAaoC,iBAAiB8G,YAAcxQ,KAAK4lB,WAAWte,EAAaoC,iBAAiB7D,UAC1FyB,EAAaoC,iBAAiBif,kBAAoBrhB,EAAaoC,iBAAiB7D,SAASqP,UAEzF5N,EAAaoC,iBAAiB5D,OAAS,IAAIf,KAAKuC,EAAaM,QAAU,aACvEN,EAAaoC,iBAAiB+G,UAAYzQ,KAAK4lB,WAAWte,EAAaoC,iBAAiB5D,QACxFwB,EAAaoC,iBAAiBkf,gBAAkBthB,EAAaoC,iBAAiB5D,OAAOoP,UAErF5N,EAAaoC,iBAAiByG,eAAiB7I,EAAamQ,WAC5DnQ,EAAamE,UAAY,IAAIzL,KAAK+jB,aAAatY,UAAU,G,CAG7D,YAAA4rC,CAAa6B,G,QACX,IAAIC,EAAsC,IAAIz3B,MAC9C,IAAI1K,GAAAhL,EAAAktC,EAAgB9xC,aAAS,MAAA4E,SAAA,SAAAA,EAAEF,aAAS,MAAAkL,SAAA,SAAAA,EAAEvJ,OAAQ,CAChD0rC,EAAYD,EAAgB9xC,UAAU0E,UACtCotC,EAAgB9xC,UAAU0E,UAAUqc,SAAQlc,IAC1CA,EAAauX,SAAW,IAAI,G,CAGhCxjB,KAAK+jB,aAAatY,UAAY0tC,C,CAGhC,aAAAzB,CAAcn/B,GACZ,OAAOA,EAAM,aAAa6gC,gB,CAG5B,yBAAAb,GACE,OAAOv4C,KAAK+jB,aAAapM,Y,CAG3B,uBAAA0hC,GACE,OAAOr5C,KAAK+jB,aAAa8zB,U,CAG3B,MAAA7jB,CAAOlvB,GACL,MAAMse,EAAc,IAAIre,KAAKD,GAC7B,MAAMmhB,EAAS,QACf,MAAMgO,EAAYj0B,KAAKk0B,sBAAsB9Q,EAAa6C,GAC1D,OAAOgO,EAAY,IAAM7Q,EAAY7d,S,CAGvC,qBAAA2uB,CAAsBhsB,EAAM+d,GAC1B,MAAMkO,EAAU,CAAEC,QAAS,SAC3B,OAAOlsB,EAAKmsB,mBAAmBpO,EAAQkO,E,CAGzC,iBAAAmlB,CAAkBpxC,EAAM+d,EAAS,WAC/B,OAAO/d,EAAK7C,eAAe4gB,EAAQ,CAAE3gB,MAAO,UAAa,IAAM4C,EAAK6N,a,CAGtE,UAAA6P,CAAW1d,EAAM+d,EAAS,WACxB,OAAO/d,EAAK3C,UAAY,IAAM2C,EAAK7C,eAAe4gB,EAAQ,CAAE3gB,MAAO,UAAa,IAAM4C,EAAK6N,a,CAE7F,gCAAMwjC,GACJ,MAAMC,EAAgBC,EAAkB,IAAI10C,KAAK/E,KAAK+jB,aAAa8zB,aACnE,MAAM6B,EAAUC,EAAW,IAAI50C,KAAK/E,KAAK+jB,aAAa8zB,aACtD,MAAM+B,QAAgB55C,KAAKgE,eAAeszC,gBAAgBt3C,KAAK2L,WAAY+tC,EAASF,GACpFx5C,KAAK+jB,aAAa8zB,WAAa,IAAI9yC,KAAKy0C,GAAetkC,UACvD,MAAM2kC,EAAcD,EAAQ5B,YAAc,GAC1Ch4C,KAAKo4C,6BAA6ByB,GAClC75C,KAAK2mB,KAAO,IAAI3mB,KAAK2mB,QAASizB,EAAQjzB,MACtC,GAAI3mB,KAAK+jB,aAAa8H,WAAW7rB,KAAK+jB,aAAa8H,WAAWpe,OAAS,GAAGue,YAAc4tB,EAAQpB,OAAO,GAAGxsB,UAAW,CACnHhsB,KAAK+jB,aAAa8H,WAAW7rB,KAAK+jB,aAAa8H,WAAWpe,OAAS,GAAGse,UACpE/rB,KAAK+jB,aAAa8H,WAAW7rB,KAAK+jB,aAAa8H,WAAWpe,OAAS,GAAGse,UAAY6tB,EAAQpB,OAAO,GAAGzsB,S,CAExG,IAAI+tB,EAAY,IAAIF,EAAQpB,QAC5BsB,EAAUrf,QACVz6B,KAAK+jB,aAAY5jB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAK+jB,cAAY,CACpB4C,KAAM3mB,KAAK2mB,KACXkF,WAAY,IAAI7rB,KAAK+jB,aAAa8H,cAAeiuB,GACjDr1B,cAAe,IAAIzkB,KAAK+jB,aAAaU,iBAAkBo1B,I,CAG3D,eAAApB,CAAgBsB,GACd/5C,KAAKw2C,gBAAkBx2C,KAAKw2C,iBAAmBx2C,KAAK4T,QAAQkE,cAAc,4BAC1E,MAAMkiC,EAAch6C,KAAK4T,QAAQkE,cAAc,gBAC/C,MAAMmiC,EAAUj6C,KAAK4T,QAAQkE,cAAc,QAAUiiC,GACrD,GAAIE,EAAS,CACXj6C,KAAKw2C,gBAAgB0D,SAAS,CAAEtlC,KAAM,IACtC,MAAMulC,EAAWF,EAAQ9hC,wBACzB,MAAMiiC,EAAgBp6C,KAAKw2C,gBAAgBr+B,wBAC3C,MAAMkiC,EAAkBL,EAAY7hC,wBACpCnY,KAAKw2C,gBAAgB0D,SAAS,CAC5BtlC,KAAMulC,EAASvlC,KAAOwlC,EAAcxlC,KAAOylC,EAAgBpiC,MAAQkiC,EAASliC,O,EAI1E,uBAAA+gC,CAAwB33C,EAAiD8E,GAC/E,IAAIm0C,EAAW,IAAIt6C,KAAK+jB,aAAaU,eACrCpjB,EAAK8mB,SAAQoyB,IACX,IAAKv6C,KAAKi5C,yBAAyBsB,GAAI,CACrCD,EAAWA,EAAS15C,QAAOmO,GAAWA,EAAQC,KAAOurC,EAAEvrC,I,KAG3DhP,KAAKo4C,6BAA6B/2C,GAClC,GAAI8E,EAAM,CACRm0C,EAAWA,EAAS15C,QAAOmO,GAAWA,EAAQ5H,OAAShB,G,CAEzD9E,EAAK8mB,SAAQoyB,IACX,IAAKD,EAAShlC,MAAKvG,GAAWA,EAAQC,KAAOurC,EAAEvrC,KAAK,CAClDsrC,EAASv0B,KAAKw0B,E,KAGlBv6C,KAAK+jB,aAAY5jB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAK+jB,cAAY,CACpBU,cAAe61B,IAEjBxoC,YAAW,KACT9R,KAAKy4C,gBAAgBz4C,KAAKq4C,uBAAuB,IAAItzC,KAAK1D,EAAK,GAAGsG,YAAY,GAC7E,I,CAiBG,sBAAA0wC,CAAuBnwC,GAC7B,OAAO2hB,EAAO3hB,GAAM4hB,OAAO,W,CAG7B,gBAAAjG,CAAiBjiB,GACf,IAAI44C,EAAoB54C,EAAMgL,OAAOkX,SACrC9jB,KAAKw2C,gBAAkBx2C,KAAKw2C,iBAAmBx2C,KAAK4T,QAAQkE,cAAc,4BAC1E,MAAMkiC,EAAch6C,KAAK4T,QAAQkE,cAAc,gBAC/C,MAAMyL,EAAWvjB,KAAK4T,QAAQkE,cAAc,IAAM0iC,GAClD,GAAIj3B,EAAU,CACZvjB,KAAKw2C,gBAAgB0D,SAAS,CAAExlC,IAAK,IACrC,MAAMylC,EAAW52B,EAASpL,wBAC1B,MAAMiiC,EAAgBp6C,KAAKw2C,gBAAgBr+B,wBAC3C,MAAMkiC,EAAkBL,EAAY7hC,wBACpCnY,KAAKw2C,gBAAgB0D,SAAS,CAC5BxlC,IAAKylC,EAASzlC,IAAM0lC,EAAc1lC,IAAM2lC,EAAgBniC,OAASiiC,EAASjiC,Q,EAKhF,wBAAAuiC,CAAyB74C,GACvBA,EAAMmM,kBACNnM,EAAMkM,2BACN,IAAIwsC,EAAW,IAAIt6C,KAAK+jB,aAAaU,eACrC61B,EAAWA,EAAS15C,QAAO0G,GAAgBA,EAAa0H,KAAO,mBAC/DsrC,EAASv0B,QAAQnkB,EAAMgL,QACvB5M,KAAKo4C,6BAA6Bx2C,EAAMgL,QACxC5M,KAAK+jB,aAAY5jB,OAAAC,OAAAD,OAAAC,OAAA,GACZJ,KAAK+jB,cAAY,CACpBU,cAAe61B,G,CAInB,wBAAAI,GAEE,OAAO16C,KAAK+jB,cAAgB/jB,KAAK+jB,aAAa4C,MAAQ3mB,KAAK+jB,aAAa4C,KAAKlZ,M,CAG/E,cAAAktC,CAAe/4C,GACb,MAAM+L,EAA8B/L,EAAMgL,OAC1C,MAAMguC,EAAkB56C,KAAK4T,QAAQkE,cAAc,kBACnD,OAAQnK,EAAIxM,KACV,IAAK,eACHy5C,EAAgBC,UAAUC,OAAO,cACjCF,EAAgBC,UAAUC,OAAO,oBACjCF,EAAgBC,UAAUE,OAAO,oBAEjC/6C,KAAKg7C,WAAa,MAClBh7C,KAAK8qB,iBAAmB,KACxB,MACF,IAAK,aACH8vB,EAAgBC,UAAUC,OAAO,oBACjCF,EAAgBC,UAAUC,OAAO,cACjCF,EAAgBC,UAAUE,OAAO,cAEjC/6C,KAAKg7C,WAAa,KAClBh7C,KAAK8qB,iBAAmB,MACxB,MACF,IAAK,WACH,IAAIhmB,EAAK,IAAIC,KAAK4I,EAAItM,MACtBrB,KAAKy4C,gBAAgB3zC,EAAGS,UAAY,KAAOT,EAAGkR,WAAa,GAAK,IAAMlR,EAAGiR,eACzE,MACF,IAAK,SACH,MACF,IAAK,MACH/V,KAAKi7C,YAActtC,EAAItM,KACvB,MACF,IAAK,YACHrB,KAAKy4C,gBAAgBz4C,KAAK8mB,OAC1B,MACF,IAAK,gBACH9mB,KAAKk7C,gBACL,M,CAIN,aAAAA,GACE,MAAMN,EAAkB56C,KAAK4T,QAAQkE,cAAc,kBACnD8iC,EAAgBC,UAAUC,OAAO,oBACjCF,EAAgBC,UAAUC,OAAO,cAEjC96C,KAAKg7C,WAAa,MAClBh7C,KAAK8qB,iBAAmB,K,CAI1B,iBAAAqwB,CAAkBv5C,GAChB5B,KAAK22C,mBAAqB,MAC1B,IAAIyE,EAAsBx5C,GAASA,EAAME,OAAS9B,KAAKq7C,qBAAqBz5C,EAAME,OAAuB,qBAAuB,MAChI,IAAKs5C,EAAqB,CACxBp7C,KAAKo2C,kBAAoB,CAEvBxhC,KAAM5U,KAAKw2C,gBAAgBE,WAC3BhiC,IAAK1U,KAAKw2C,gBAAgBC,UAE1Bt9B,EAAGvX,EAAMgX,QACTQ,EAAGxX,EAAMmX,SAEX3P,SAASC,iBAAiB,YAAarJ,KAAKq2C,4BAC5CjtC,SAASC,iBAAiB,UAAWrJ,KAAK42C,8B,EAsB9C,iBAAA0E,GACE,MAAMlB,EAAgBp6C,KAAKw2C,gBAAgBr+B,wBAC3C,IAAIojC,EAAmB,IACvB,IAAIC,EAAWpB,EAAcniC,MAAQsjC,EACrC,IAAIE,EAAQrB,EAAcjhC,EAAIoiC,EAC9B,IAAIG,EAAStB,EAAcjhC,EAAIihC,EAAcniC,MAE7C,IAAI0jC,EAAQj6B,MAAMC,KAAK3hB,KAAK4T,QAAQgoC,iBAAiB,eAErD,GAAID,EAAMluC,OAAQ,CAChBkuC,EAAMx4C,KAAIo0C,MAAOsE,IACf,IAAIC,EAAYD,EAAe1jC,wBAC/B,GAAIwjC,EAAMnwB,QAAQqwB,KAAoBF,EAAMluC,OAAS,EAAG,CACtD,GAAIquC,EAAU3iC,EAAI2iC,EAAU7jC,OAASyjC,IAAW17C,KAAKm2C,qBAAsB,CACzEn2C,KAAKm2C,qBAAuB,WACtBn2C,KAAKu5C,6BACXv5C,KAAKm2C,qBAAuB,K,EAGhC,GAAI2F,EAAU3iC,EAAI2iC,EAAU7jC,MAAQwjC,QAE7B,GAAIK,EAAU3iC,EAAIuiC,OAElB,CACL,IAAIK,EAAeF,EAAe/jC,cAAc,eAChD,IAAIkkC,EAAa,EACjB,IAAIC,EAAaH,EAAU7jC,MAC3B,GAAI6jC,EAAU3iC,EAAIsiC,EAAO,CACvBO,EAAaliC,KAAKK,IAAI2hC,EAAU3iC,GAAKsiC,EACrCO,EAAaF,EAAU3iC,EAAI,EAAIW,KAAKK,IAAI2hC,EAAU3iC,GAAKsiC,EAAQ3hC,KAAKK,IAAI6hC,GACxEC,EAAaH,EAAU3iC,EAAI2iC,EAAU7jC,MAAQyjC,EAASF,EAAWM,EAAU3iC,EAAI2iC,EAAU7jC,MAAQwjC,C,KAC5F,CACLQ,EAAaT,EAAWS,EAAaA,EAAaA,EAAaT,EAAWM,EAAU3iC,EAAIsiC,C,CAE1FM,EAAatnC,MAAMunC,WAAaA,EAAa,KAC7CD,EAAatnC,MAAMwD,MAAQgkC,EAAa,I,MAMhD,oBAAAZ,CAAqBznC,EAAsBsoC,GACzC,IAAIC,EAAiBvoC,EACrB,MAAOuoC,IAAmB,KAAM,CAC9B,GAAIA,EAAeC,QAAQ,IAAIF,KAAc,CAC3C,OAAO,I,CAETC,EAAiBA,EAAeE,a,CAElC,OAAO,K,CAIT,gCAAAC,CAAiC16C,GAC/BA,EAAMqM,iBACNrM,EAAMkM,2BACN9N,KAAK26C,eAAe/4C,E,CAKtB,sBAAA26C,CAAuB36C,GACrB,IAAI46C,EAAax8C,KAAK+jB,aAAaU,cAAcjjB,MAAKi7C,GAAeA,EAAY17C,KAAOa,EAAMgL,OAAO7L,KACrG,GAAIy7C,GAAc56C,EAAMgL,QAAUhL,EAAMgL,OAAOvL,KAAM,CACnDlB,OAAO0gB,QAAQjf,EAAMgL,OAAOvL,MAAM8mB,SAAQ,EAAEhnB,EAAKI,MAC/Ci7C,EAAWr7C,GAAOI,CAAK,G,EAM7B,wBAAAm7C,CAAyB96C,GACvB,GAAIA,EAAMgL,OAAO7L,KAAO,6BAA8B,CACpD,IAAIi5C,EAAc5wC,SAAS0O,cAAc,+BACzC,IAAI6kC,EAAgBvzC,SAASwyC,iBAAiB,iCAC9C,IAAIgB,EAAiBxzC,SAASwyC,iBAAiB,sCAC/C57C,KAAKi2C,qBAAuB,CAAE98B,EAAG,GAAIC,EAAG,IAExCujC,EAAcx0B,SAAQvU,IACpB,MAAMipC,EAAcjpC,EACpB5T,KAAKi2C,qBAAqB98B,EAAE4M,KAAK,CAC/BnR,KAAMioC,EAAYrjC,WAAawgC,EAAY1gC,YAC3CrB,MAAO4kC,EAAYvjC,YACnBvY,GAAI87C,EAAYC,aAAa,aAC7B,IAGJF,EAAez0B,SAAQvU,IACrB,MAAMipC,EAAcjpC,EACpB5T,KAAKi2C,qBAAqB78B,EAAE2M,KAAK,CAC/BrR,IAAKmoC,EAAYE,UACjB7kC,OAAQ2kC,EAAYG,aACpBj8C,GAAI87C,EAAYC,aAAa,cAC7B,IAEJ98C,KAAKi9C,kBAAkB,KAAMr7C,EAAMgL,OAAOvL,K,MACrC,GAAIO,EAAMgL,OAAO7L,KAAO,YAAa,CAC1Cf,KAAKi9C,kBAAkB,KAAMr7C,EAAMgL,OAAOvL,K,MACrC,GAAIO,EAAMgL,OAAO7L,KAAO,gBAAiB,CAC9Cf,KAAKi9C,kBAAkB,MAAOr7C,EAAMgL,OAAOvL,K,MACtC,GAAIO,EAAMgL,OAAO7L,KAAO,mBAAoB,CACjDf,KAAKi9C,kBAAkB,MAAOr7C,EAAMgL,OAAOvL,K,EAI/C,uBAAM47C,CAAkBC,EAAmBC,GACzC,IAAIC,EAAUC,EACd,GAAIF,EAAiB,CACnBC,EAAWp9C,KAAKi2C,qBAAqB98B,EAAE3X,MAAKwW,GAAOA,EAAIpD,KAAOuoC,EAAgBhkC,GAAKgkC,EAAgBhkC,GAAKnB,EAAIpD,KAAOoD,EAAIC,QACvHolC,EAAWr9C,KAAKi2C,qBAAqB78B,EAAE5X,MAAKwW,GAAOA,EAAItD,IAAMyoC,EAAgB/jC,GAAK+jC,EAAgB/jC,GAAKpB,EAAItD,IAAMsD,EAAIE,Q,CAGvH,GAAIglC,GAAqBE,GAAYC,EAAU,CAC7Cr9C,KAAKs9C,yBAAyBp8C,KAAK,CACjCoiB,gBAAiB+5B,EAASt8C,GAAK,IAAMq8C,EAASr8C,I,KAE3C,CACLf,KAAKs9C,yBAAyBp8C,KAAK,CAAEoiB,gBAAiB,I,CAExD,IAAK45B,EAAmB,CACtBl9C,KAAKu9C,cAAcr8C,KAAK,CACtB2N,UAAWsuC,EAAgBp8C,GAC3BqT,WAAY+oC,EAAgB/oC,WAC5BD,SAAWkpC,GAAYA,EAASt8C,IAAO,SACvCmT,UAAYkpC,GAAYA,EAASr8C,IAAO,SACxCoF,KAAMg3C,EAAgBh3C,KACtBE,UAAWm3C,EAAgBJ,GAAYA,EAASr8C,IAChDuF,QAASm3C,EAAeL,GAAYA,EAASr8C,GAAIo8C,EAAgB/iC,W,EAKvE,MAAArY,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,uBACAA,EAAA,kBACAA,EAAA,OAAKjB,GAAG,gBAAgBmB,MAAM,gBAC3BlC,KAAK06C,2BAA0B,CAE5B16C,KAAK8qB,iBACH9oB,EAAA,sBACE+yB,eAAgB,4BAChBzuB,QAAStG,KAAKsG,QACdD,UAAWrG,KAAKqG,UAChBsF,WAAY3L,KAAK2L,WACjBzJ,MAAM,wBACN6hB,aAAc/jB,KAAK+jB,aACnB25B,cAAej5C,GAAOzE,KAAK26C,eAAel2C,KAE1C,KACJzE,KAAKg7C,WACHh5C,EAAA,eAAaE,MAAM,kBAAkB0U,WAAY5W,KAAK+jB,aAAanN,WAAY8mC,cAAej5C,GAAOzE,KAAK26C,eAAel2C,KACvH,KACJzC,EAAA,OAAKE,MAAM,0BAA0BgZ,YAAatZ,GAAS5B,KAAKm7C,kBAAkBv5C,GAAQ+7C,SAAU,IAAM39C,KAAKs7C,qBAC7Gt5C,EAAA,OAAKjB,GAAG,qBACNiB,EAAA,kBACEqoB,gBAAiBrqB,KAAKqqB,gBACtB/jB,QAAStG,KAAKsG,QACdqF,WAAY3L,KAAK2L,WACjBmb,MAAO9mB,KAAK8mB,MACZ/C,aAAc/jB,KAAK+jB,aACnB25B,cAAej5C,GAAOzE,KAAK26C,eAAel2C,KAE5CzC,EAAA,gBACEmQ,gBAAiBnS,KAAKmS,gBACtBtG,SAAU7L,KAAK+jB,aAAalY,SAC5Bib,MAAO9mB,KAAK8mB,MACZT,qBAAsBrmB,KAAK22C,mBAC3B5yB,aAAc/jB,KAAK+jB,eAErB/hB,EAAA,kBAAgB8kB,MAAO9mB,KAAK8mB,MAAO/C,aAAc/jB,KAAK+jB,aAAc25B,cAAej5C,GAAOzE,KAAK26C,eAAel2C,QAKpHzC,EAAA,qBAAmBO,QAAQ,6BAG9BvC,KAAKi7C,aACJj5C,EAAA,qBACEiQ,mBAAoBjS,KAAKiS,mBACzBE,gBAAiBnS,KAAKmS,gBACtBtG,SAAU7L,KAAK+jB,aAAalY,SAC5BD,SAAU5L,KAAK4L,SACfD,WAAY3L,KAAK2L,WACjBlC,YAAazJ,KAAKi7C,YAClB2C,qBAAsBh+B,GAAM5f,KAAKi7C,YAAc,O,mGCrlBpD,MAAM4C,GAAsC,CAKjD,CACEC,MAAO,KACPC,KAAM,qHAER,CACED,MAAO,KACPC,KAAM,yDAER,CACED,MAAO,KACPC,KAAM,kEAER,CAAED,MAAO,KAAMC,KAAM,sDACrB,CACED,MAAO,KACPC,KAAM,oFAER,CACED,MAAO,KACPC,KAAM,4EAER,CACED,MAAO,KACPC,KAAM,0DAER,CAAED,MAAO,KAAMC,KAAM,iDACrB,CACED,MAAO,KACPC,KAAM,2EAER,CACED,MAAO,KACPC,KAAM,2EAER,CACED,MAAO,KACPC,KAAM,oEAER,CACED,MAAO,KACPC,KAAM,iH,MCvCGC,GAAQ,M,6CAC+B,G,eACTH,E,CACzC,iBAAA99C,GACEC,KAAKi+C,W,CAGP,gBAAA90C,GACEnJ,KAAKk+C,kB,CAIP,YAAAC,GACEn+C,KAAKi+C,YACLj+C,KAAKk+C,kB,CAGC,SAAAD,GACN,GAAIj+C,KAAKo+C,iBAAmB,GAAIp+C,KAAKq+C,UAAUt4B,KAAKvf,KAAKC,MAAMzG,KAAKo+C,gB,CAG9D,SAAAE,CAAUC,EAAiBC,GACjC,MAAMC,EAAMr1C,SAASs1C,cAAcH,GACnC,MAAMI,EAAgB,GAEtBx+C,OAAOqN,KAAKgxC,GAAYr2B,SAAQ0U,IAC9B4hB,EAAIG,aAAa/hB,EAAM2hB,EAAW3hB,IAClC8hB,EAAc54B,KAAK,IAAI8W,MAAS2hB,EAAW3hB,OAAU,IAGvD,MAAMgiB,EAAW,GAAGN,IAAUI,EAAcv2C,KAAK,MACjD,MAAM02C,EAAc11C,SAAS0O,cAAc+mC,GAE3C,IAAKC,EAAa,CAChB11C,SAAS21C,KAAKC,YAAYP,E,EAItB,gBAAAP,GACNl+C,KAAKq+C,UAAUl2B,SAAQ5d,IACrB,GAAIA,EAAIuzC,MAAO,CACb99C,KAAKs+C,UAAU,OAAQ,CACrB7T,KAAMlgC,EAAIwzC,KACVkB,IAAK,aACLr8C,KAAM,Y,CAGV,GAAI2H,EAAI20C,KAAM,CACZl/C,KAAKs+C,UAAU,SAAU,CACvBj/B,IAAK9U,EAAIwzC,M,KAMjB,MAAAh8C,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,a,iECjER,MAAMm9C,GAAkB,uI,MCeXC,GAAY,M,4KAOqB,E,gBACI,CAC9C,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,Y,gBAE8C,CAC9C,KACA,KACA,KACA,KACA,KACA,KACA,M,YAEwC,c,eACG,I,gBACC,Q,iBACC,S,eACF,O,aACF,K,sBACS,S,eACP,I,aACgB,CAC3Dz4B,KAAM,I,CAQR,gBAAAxd,GACEnJ,KAAKq/C,eAAiBr/C,KAAK4T,QAAQkE,cAAc,qBACjDwnC,EAAEt/C,KAAKq/C,gBAAgBE,gBACrB,CACEC,MAAOx/C,KAAKw/C,MACZp6B,UAAWyE,EAAO7pB,KAAK6F,UACvBwf,QAASwE,EAAO7pB,KAAK8F,QACrB25C,QAASz/C,KAAKy/C,QACd3yB,UAAW9sB,KAAK8sB,UAChB7G,OAAQ,CACN6D,OAAQ9pB,KAAK8pB,OACb41B,UAAW1/C,KAAK0/C,UAChBC,WAAY3/C,KAAK2/C,WACjBC,YAAa5/C,KAAK4/C,YAClBC,UAAW7/C,KAAK6/C,UAChBC,QAAS9/C,KAAK8/C,QACdC,iBAAkB//C,KAAK+/C,iBACvBC,UAAWhgD,KAAKggD,UAChBC,WAAYjgD,KAAKigD,WACjBC,WAAYlgD,KAAKkgD,WACjBC,SAAUngD,KAAKmgD,YAGnB,CAACvzB,EAAOC,KACN7sB,KAAKogD,YAAYl/C,KAAK,CAAE0rB,QAAOC,OAAM,G,CAK3C,MAAA9qB,GACE,OAAOC,EAAA,SAAOE,MAAM,mBAAmBU,KAAK,Q,4CC7FhD,MAAMy9C,GAAmB,8wD,MCQZC,GAAa,M,sCACL,M,eACE,M,eACA,M,sBACO,M,oBAE6B,CACvDvrB,eAAgB,gBAChBwrB,eAAgB,UAChBC,aAAc,wB,sBAG4B,CAAC,oCAAqC,2B,CAElF,iBAAAzgD,GACEC,KAAKygD,wB,CAGP,sBAAAA,GACE35C,EAAM45C,aAAate,QAAQue,IAAI3gD,KAAK4gD,cAAc1tC,KAAKlT,MAAOA,KAAK6gD,YAAY3tC,KAAKlT,OACpF8G,EAAM45C,aAAaI,SAASH,IAAI3gD,KAAK+gD,eAAe7tC,KAAKlT,MAAOA,KAAK6gD,YAAY3tC,KAAKlT,M,CAGxF,eAAAghD,CAAgB1W,GACd,OAAOA,EAAIniC,MAAM,KAAK,E,CAGxB,iBAAA84C,CAAkB3W,GAChB,OAAOtqC,KAAKkhD,iBAAiBpgD,SAASd,KAAKghD,gBAAgB1W,G,CAG7D,aAAAsW,CAAcO,GACZ,GAAInhD,KAAKihD,kBAAkBE,EAAO7W,KAAM,CACtCtqC,KAAK4R,UAAY,KACjB,GAAI5R,KAAKghD,gBAAgBG,EAAO7W,OAAS,2BAA4B,CACnEtqC,KAAKohD,eAAersB,eAAiB,gB,MAChC,GAAI/0B,KAAKghD,gBAAgBG,EAAO7W,OAAS,mCAAoC,CAClFtqC,KAAKqhD,iBAAmB,I,KACnB,CACLrhD,KAAKohD,eAAersB,eAAiB,e,CAEvC/0B,KAAKshD,W,CAEP,OAAOH,C,CAGT,cAAAJ,CAAeD,G,MACb9gD,KAAK4R,UAAY,MAEjB,IAAI5F,EAAA80C,EAASz/C,KAAK2F,gBAAY,MAAAgF,SAAA,SAAAA,EAAEqf,OAAQ,CACtCrrB,KAAK6gD,YAAYC,EAASz/C,KAAK2F,cAE/B,MAAM,IAAIC,MAAM65C,EAASz/C,KAAK2F,a,CAGhC,GAAIhH,KAAKihD,kBAAkBH,EAASK,OAAO7W,KAAM,CAC/CtqC,KAAKuhD,iBAAiB,UAAW,K,CAGnC,OAAOT,C,CAGT,WAAAD,CAAYv8C,GACV,GAAItE,KAAKqhD,iBAAkB,CACzBrhD,KAAKqhD,iBAAmB,K,CAE1B,IAAKrhD,KAAKwhD,QAAS,CACjBxhD,KAAKshD,W,CAEPthD,KAAKuhD,iBAAiBj9C,EAAO,OAC7B,OAAOw/B,QAAQyM,OAAOjsC,E,CAGxB,SAAAg9C,GACEthD,KAAKwhD,QAAU,I,CAGjB,mBAAAC,CAAoBC,GAClB,GAAI1hD,KAAKqhD,iBAAkB,CACzBrhD,KAAKwhD,QAAU,MACfxhD,KAAKqhD,iBAAmB,K,KACnB,CACL,MAAM9L,EAAQmM,EAAY,EAAI,IAE9B5vC,YAAW,KACT9R,KAAKwhD,QAAU,KAAK,GACnBjM,E,EAIP,gBAAAgM,CAAiBh/C,EAAiBo/C,GAChC3hD,KAAK0hD,UAAYC,EACjB3hD,KAAKohD,eAAcjhD,OAAAC,OAAAD,OAAAC,OAAA,GACdJ,KAAKohD,gBAAc,CACtB,CAACO,EAAU,iBAAmB,gBAAiBp/C,IAEjDvC,KAAKyhD,oBAAoBE,E,CAG3B,aAAAC,GACE,GAAI5hD,KAAK4R,UAAW,OAAO5R,KAAKohD,eAAersB,eAC/C,OAAO/0B,KAAK0hD,UAAY1hD,KAAKohD,eAAeb,eAAiBvgD,KAAKohD,eAAeZ,Y,CAEnF,MAAAz+C,GACE,OACEC,EAACC,EAAI,KACFjC,KAAK4R,WAAa5R,KAAKwhD,SACtBx/C,EAAA,OAAKE,MAAM,0BACTF,EAAA,OAAKE,MAAM,oBACTF,EAAA,4BAKNA,EAAA,OAAKE,MAAM,kBAAiB,cAAclC,KAAK4R,WAAa5R,KAAKwhD,UAAYxhD,KAAK0hD,UAAY,OAAS,WACnG1hD,KAAK4R,WAAa5R,KAAKwhD,UAAYxhD,KAAK0hD,WACxC1/C,EAACgvB,EAAQ,KACPhvB,EAAA,OAAKE,MAAM,oBACTF,EAAA,OAAKiW,MAAM,KAAKC,OAAO,KAAK2pC,QAAQ,YAAY5/B,KAAK,OAAO6/B,MAAM,8BAChE9/C,EAAA,QACEu4C,EAAE,0gBACFt4B,KAAK,QAAO,YACF,UAAS,YACT,cAIhBjgB,EAAA,SAAIhC,KAAK4hD,mB,eCvIvB,MAAMG,GAAqB,4zB,MCOdC,GAAe,M,sCACA,E,CAC1B,MAAAjgD,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,mBACTF,EAAA,QAAME,MAAM,WACXlC,KAAKuC,SAAWP,EAAA,KAAGE,MAAO,OAAQlC,KAAKuC,U,eCdlD,MAAM0/C,GAAe,8oiI,MCORC,GAAS,M,oEAIpB,UAAAC,CAAWC,GACT,GAAIpiD,KAAKqiD,eAAgB,CACvBnlB,aAAal9B,KAAKqiD,e,CAGpB,GAAID,EAAY,CACdpiD,KAAKqiD,eAAiBvwC,YAAW,KAC/B9R,KAAK4+B,KAAO,IAAI,GACf,I,KACE,CACL5+B,KAAK4+B,KAAO,K,EAGhB,MAAA78B,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,QACEsgD,aAAc,IAAMtiD,KAAKmiD,WAAW,MACpCI,aAAc,IAAMviD,KAAKmiD,WAAW,QAEpCngD,EAAA,KACEE,MAAM,eAAc,cACR,UAAS,iBACN,MAAK,sBACA,gBAGvBlC,KAAK4+B,MACJ58B,EAAA,OAAKE,MAAM,wCAAwCyd,KAAK,WACtD3d,EAAA,OAAKE,MAAM,kBACXF,EAAA,OAAKE,MAAM,qBACTF,EAAA,KAAGE,MAAM,qBACTF,EAAA,QAAMwgD,UAAWxiD,KAAKuC,Y"}
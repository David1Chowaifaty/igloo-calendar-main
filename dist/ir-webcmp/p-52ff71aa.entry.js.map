{"version":3,"names":["iglBookPropertyContainerCss","IglBookPropertyContainer","this","bookingService","BookingService","roomService","RoomService","setRoomsData","roomServiceResp","roomsData","Array","_b","_a","My_Result","roomtypes","length","forEach","roomCategory","expanded","calendarData","roomsInfo","initializeApp","roomResponse","languageTexts","countriesList","Promise","all","fetchData","propertyid","language","fetchLanguage","getCountries","console","log","locales","entries","direction","countryNodeList","allowed_payment_methods","paymentMethods","currency","allowed_booking_sources","adult_child_constraints","calendar_legends","legendData","paymentCodesToShow","showPaymentDetails","some","method","includes","code","error","componentDidLoad","baseurl","axios","defaults","baseURL","ticket","ticketChanged","sessionStorage","setItem","JSON","stringify","handleCloseBookingWindow","bookingItem","handleTriggerClicked","tomorrow","Date","setDate","getDate","FROM_DATE","from_date","defaultDateRange","fromDate","fromDateStr","toDate","toDateStr","dateDifference","message","TO_DATE","to_date","EMAIL","event_type","ID","NAME","PHONE","REFERENCE_TYPE","TITLE","Lcz_NewBooking","render","h","Host","class","onClick","bind","name","allowedBookingSources","adultChildConstraints","bookingData","onResetBookingData","e","stopImmediatePropagation","stopPropagation","resetBookingData","emit","onCloseBookingWindow"],"sources":["src/components/igl-book-property-container/igl-book-property-container.css?tag=igl-book-property-container&encapsulation=scoped","src/components/igl-book-property-container/igl-book-property-container.tsx"],"sourcesContent":[":host {\n  display: block;\n  margin: 0;\n  padding: 0;\n}\n.book-container {\n  width: min-content;\n  margin: 0;\n  padding: 0;\n}\n","import { IglBookPropertyPayloadPlusBooking } from '@/models/igl-book-property';\nimport { BookingService } from '@/services/booking.service';\nimport { RoomService } from '@/services/room.service';\nimport locales from '@/stores/locales.store';\nimport { Component, Host, State, h, Prop, Watch, Event, EventEmitter } from '@stencil/core';\nimport axios from 'axios';\n\n@Component({\n  tag: 'igl-book-property-container',\n  styleUrl: 'igl-book-property-container.css',\n  scoped: true,\n})\nexport class IglBookPropertyContainer {\n  @Prop() language: string = '';\n  @Prop() ticket: string = '';\n  @Prop() baseurl: string = '';\n  @Prop() propertyid: number;\n  @Prop() from_date: string;\n  @Prop() to_date: string;\n\n  @State() bookingItem: IglBookPropertyPayloadPlusBooking | null;\n  @State() showPaymentDetails: any;\n  @State() countryNodeList: any;\n  @State() calendarData: any = {};\n\n  @Event() resetBookingData: EventEmitter<null>;\n\n  private bookingService = new BookingService();\n  private roomService = new RoomService();\n\n  setRoomsData(roomServiceResp) {\n    let roomsData: { [key: string]: any }[] = new Array();\n    if (roomServiceResp.My_Result?.roomtypes?.length) {\n      roomsData = roomServiceResp.My_Result.roomtypes;\n      roomServiceResp.My_Result.roomtypes.forEach(roomCategory => {\n        roomCategory.expanded = true;\n      });\n    }\n    this.calendarData.roomsInfo = roomsData;\n  }\n  async initializeApp() {\n    try {\n      const [roomResponse, languageTexts, countriesList] = await Promise.all([\n        this.roomService.fetchData(this.propertyid, this.language),\n        this.roomService.fetchLanguage(this.language),\n        this.bookingService.getCountries(this.language),\n      ]);\n      console.log(languageTexts);\n      if (!locales.entries) {\n        locales.entries = languageTexts.entries;\n        locales.direction = languageTexts.direction;\n      }\n      this.countryNodeList = countriesList;\n\n      const { allowed_payment_methods: paymentMethods, currency, allowed_booking_sources, adult_child_constraints, calendar_legends } = roomResponse['My_Result'];\n      this.calendarData = { currency, allowed_booking_sources, adult_child_constraints, legendData: calendar_legends };\n      this.setRoomsData(roomResponse);\n      const paymentCodesToShow = ['001', '004'];\n      this.showPaymentDetails = paymentMethods.some(method => paymentCodesToShow.includes(method.code));\n    } catch (error) {\n      console.error('Error initializing app:', error);\n    }\n  }\n  componentDidLoad() {\n    if (this.baseurl) {\n      axios.defaults.baseURL = this.baseurl;\n    }\n    if (this.ticket !== '') {\n      this.initializeApp();\n    }\n  }\n  @Watch('ticket')\n  async ticketChanged() {\n    sessionStorage.setItem('token', JSON.stringify(this.ticket));\n    this.initializeApp();\n  }\n  handleCloseBookingWindow() {\n    this.bookingItem = null;\n  }\n  handleTriggerClicked() {\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    (this.bookingItem as IglBookPropertyPayloadPlusBooking) = {\n      FROM_DATE: this.from_date,\n      defaultDateRange: {\n        fromDate: new Date(),\n        fromDateStr: '',\n        toDate: tomorrow,\n        toDateStr: '',\n        dateDifference: 0,\n        message: '',\n      },\n      TO_DATE: this.to_date,\n      EMAIL: '',\n      event_type: 'PLUS_BOOKING',\n      ID: '',\n      NAME: '',\n      PHONE: '',\n      REFERENCE_TYPE: '',\n      TITLE: locales.entries.Lcz_NewBooking,\n    };\n  }\n  render() {\n    return (\n      <Host>\n        <ir-toast></ir-toast>\n        <ir-interceptor></ir-interceptor>\n        <div class=\"book-container\" onClick={this.handleTriggerClicked.bind(this)}>\n          <slot name=\"trigger\"></slot>\n        </div>\n        {this.bookingItem && (\n          <igl-book-property\n            allowedBookingSources={this.calendarData.allowed_booking_sources}\n            adultChildConstraints={this.calendarData.adult_child_constraints}\n            showPaymentDetails={this.showPaymentDetails}\n            countryNodeList={this.countryNodeList}\n            currency={this.calendarData.currency}\n            language={this.language}\n            propertyid={this.propertyid}\n            bookingData={this.bookingItem}\n            onResetBookingData={(e: CustomEvent) => {\n              e.stopImmediatePropagation();\n              e.stopPropagation();\n              this.resetBookingData.emit(null);\n            }}\n            onCloseBookingWindow={() => this.handleCloseBookingWindow()}\n          ></igl-book-property>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"oSAAA,MAAMA,EAA8B,0J,MCYvBC,EAAwB,M,4EAe3BC,KAAAC,eAAiB,IAAIC,EACrBF,KAAAG,YAAc,IAAIC,E,cAfC,G,YACF,G,aACC,G,wLAQG,E,CAO7B,YAAAC,CAAaC,G,QACX,IAAIC,EAAsC,IAAIC,MAC9C,IAAIC,GAAAC,EAAAJ,EAAgBK,aAAS,MAAAD,SAAA,SAAAA,EAAEE,aAAS,MAAAH,SAAA,SAAAA,EAAEI,OAAQ,CAChDN,EAAYD,EAAgBK,UAAUC,UACtCN,EAAgBK,UAAUC,UAAUE,SAAQC,IAC1CA,EAAaC,SAAW,IAAI,G,CAGhChB,KAAKiB,aAAaC,UAAYX,C,CAEhC,mBAAMY,GACJ,IACE,MAAOC,EAAcC,EAAeC,SAAuBC,QAAQC,IAAI,CACrExB,KAAKG,YAAYsB,UAAUzB,KAAK0B,WAAY1B,KAAK2B,UACjD3B,KAAKG,YAAYyB,cAAc5B,KAAK2B,UACpC3B,KAAKC,eAAe4B,aAAa7B,KAAK2B,YAExCG,QAAQC,IAAIV,GACZ,IAAKW,EAAQC,QAAS,CACpBD,EAAQC,QAAUZ,EAAcY,QAChCD,EAAQE,UAAYb,EAAca,S,CAEpClC,KAAKmC,gBAAkBb,EAEvB,MAAQc,wBAAyBC,EAAcC,SAAEA,EAAQC,wBAAEA,EAAuBC,wBAAEA,EAAuBC,iBAAEA,GAAqBrB,EAAa,aAC/IpB,KAAKiB,aAAe,CAAEqB,WAAUC,0BAAyBC,0BAAyBE,WAAYD,GAC9FzC,KAAKK,aAAae,GAClB,MAAMuB,EAAqB,CAAC,MAAO,OACnC3C,KAAK4C,mBAAqBP,EAAeQ,MAAKC,GAAUH,EAAmBI,SAASD,EAAOE,O,CAC3F,MAAOC,GACPnB,QAAQmB,MAAM,0BAA2BA,E,EAG7C,gBAAAC,GACE,GAAIlD,KAAKmD,QAAS,CAChBC,EAAMC,SAASC,QAAUtD,KAAKmD,O,CAEhC,GAAInD,KAAKuD,SAAW,GAAI,CACtBvD,KAAKmB,e,EAIT,mBAAMqC,GACJC,eAAeC,QAAQ,QAASC,KAAKC,UAAU5D,KAAKuD,SACpDvD,KAAKmB,e,CAEP,wBAAA0C,GACE7D,KAAK8D,YAAc,I,CAErB,oBAAAC,GACE,MAAMC,EAAW,IAAIC,KACrBD,EAASE,QAAQF,EAASG,UAAY,GACrCnE,KAAK8D,YAAoD,CACxDM,UAAWpE,KAAKqE,UAChBC,iBAAkB,CAChBC,SAAU,IAAIN,KACdO,YAAa,GACbC,OAAQT,EACRU,UAAW,GACXC,eAAgB,EAChBC,QAAS,IAEXC,QAAS7E,KAAK8E,QACdC,MAAO,GACPC,WAAY,eACZC,GAAI,GACJC,KAAM,GACNC,MAAO,GACPC,eAAgB,GAChBC,MAAOrD,EAAQC,QAAQqD,e,CAG3B,MAAAC,GACE,OACEC,EAACC,EAAI,KACHD,EAAA,iBACAA,EAAA,uBACAA,EAAA,OAAKE,MAAM,iBAAiBC,QAAS3F,KAAK+D,qBAAqB6B,KAAK5F,OAClEwF,EAAA,QAAMK,KAAK,aAEZ7F,KAAK8D,aACJ0B,EAAA,qBACEM,sBAAuB9F,KAAKiB,aAAasB,wBACzCwD,sBAAuB/F,KAAKiB,aAAauB,wBACzCI,mBAAoB5C,KAAK4C,mBACzBT,gBAAiBnC,KAAKmC,gBACtBG,SAAUtC,KAAKiB,aAAaqB,SAC5BX,SAAU3B,KAAK2B,SACfD,WAAY1B,KAAK0B,WACjBsE,YAAahG,KAAK8D,YAClBmC,mBAAqBC,IACnBA,EAAEC,2BACFD,EAAEE,kBACFpG,KAAKqG,iBAAiBC,KAAK,KAAK,EAElCC,qBAAsB,IAAMvG,KAAK6D,6B"}